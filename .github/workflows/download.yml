name: Check Download Step

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Just
        run: sudo snap install --edge --classic just
      - name: Install uv
        run: |
          curl -Ls https://astral.sh/uv/install.sh | bash
          echo '$HOME/.local/bin' >> $GITHUB_PATH
      - name: Run download step
        run: just download
      - name: Run install step
        run: just install

  build-site:
    needs: download
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.0
    steps:
      # 1) Checkout WITH submodules (only once)
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # safer for submodules

      # 2) Prove the submodule is there
      - name: Show submodule status
        run: |
          git submodule status --recursive || true
          ls -la
          ls -la www || true
          ls -la www/themes || true
          ls -la www/themes/PaperMod || true
          # show .gitmodules content
          echo "=== .gitmodules ==="
          cat .gitmodules || true

      # 3) Install Hugo
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # 4) (Optional) Dart Sass if your theme/pipeline needs it
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      # 5) Node deps if present
      - name: Install Node.js dependencies
        working-directory: www
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then
            npm ci
          fi

      # 6) Build
      - name: Build with Hugo
        working-directory: www
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo --minify