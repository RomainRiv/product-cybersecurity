{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-13: Subverting Environment Variable Values</b><br>The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Subverting Environment Variable Values",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/13.html",
      "id": "CAPEC-13"
    },
    {
      "Description": "<b>CAPEC-39: Manipulating Opaque Client-based Data Tokens</b><br>In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating Opaque Client-based Data Tokens",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/39.html",
      "id": "CAPEC-39"
    },
    {
      "Description": "<b>CAPEC-200: Removal of filters: Input filters, output filters, data masking</b><br>An attacker removes or disables filtering mechanisms on the target application. Input filters prevent invalid data from being sent to an application (for example, overly large inputs that might cause a buffer overflow or other malformed inputs that may not be correctly handled by an application). Input filters might also be designed to constrained executable content.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removal of filters: Input filters, output filters, data masking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/200.html",
      "id": "CAPEC-200"
    },
    {
      "Description": "<b>CAPEC-208: Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements</b><br>An attacker removes or modifies the logic on a client associated with monetary calculations resulting in incorrect information being sent to the server. A server may rely on a client to correctly compute monetary information. For example, a server might supply a price for an item and then rely on the client to correctly compute the total cost of a purchase given the number of items the user is buying. If the attacker can remove or modify the logic that controls these calculations, they can return incorrect values to the server. The attacker can use this to make purchases for a fraction of the legitimate cost or otherwise avoid correct billing for activities.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/208.html",
      "id": "CAPEC-208"
    },
    {
      "Description": "<b>CAPEC-77: Manipulating User-Controlled Variables</b><br>This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating User-Controlled Variables",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/77.html",
      "id": "CAPEC-77"
    },
    {
      "Description": "<b>CAPEC-207: Removing Important Client Functionality</b><br>An adversary removes or disables functionality on the client that the server assumes to be present and trustworthy.",
      "color": "#75aaff",
      "size": 18,
      "label": "Removing Important Client Functionality",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/207.html",
      "id": "CAPEC-207"
    },
    {
      "Description": "<b>CAPEC-22: Exploiting Trust in Client</b><br>An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
      "color": "#2176ff",
      "size": 30,
      "label": "Exploiting Trust in Client",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/22.html",
      "id": "CAPEC-22"
    },
    {
      "Description": "<b>CAPEC-202: Create Malicious Client</b><br>An adversary creates a client application to interface with a target service where the client violates assumptions the service makes about clients. Services that have designated client applications (as opposed to services that use general client applications, such as IMAP or POP mail servers which can interact with any IMAP or POP client) may assume that the client will follow specific procedures.",
      "color": "#75aaff",
      "size": 18,
      "label": "Create Malicious Client",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/202.html",
      "id": "CAPEC-202"
    },
    {
      "Description": "<b>CAPEC-162: Manipulating Hidden Fields</b><br>An adversary exploits a weakness in the server's trust of client-side processing by modifying data on the client-side, such as price information, and then submitting this data to the server, which processes the modified data. For example, eShoplifting is a data manipulation attack against an on-line merchant during a purchasing transaction. The manipulation of price, discount or quantity fields in the transaction message allows the adversary to acquire items at a lower cost than the merchant intended. The adversary performs a normal purchasing transaction but edits hidden fields within the HTML form response that store price or other information to give themselves a better deal. The merchant then uses the modified pricing information in calculating the cost of the selected items.",
      "color": "#94ebff",
      "size": 10,
      "label": "Manipulating Hidden Fields",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/162.html",
      "id": "CAPEC-162"
    },
    {
      "Description": "<b>CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</b><br>This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Accessing/Intercepting/Modifying HTTP Cookies",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/31.html",
      "id": "CAPEC-31"
    }
  ],
  "links": [
    {
      "source": "CAPEC-13",
      "target": "CAPEC-77"
    },
    {
      "source": "CAPEC-39",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-200",
      "target": "CAPEC-207"
    },
    {
      "source": "CAPEC-208",
      "target": "CAPEC-207"
    },
    {
      "source": "CAPEC-77",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-207",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-202",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-162",
      "target": "CAPEC-77"
    },
    {
      "source": "CAPEC-31",
      "target": "CAPEC-39"
    }
  ]
}