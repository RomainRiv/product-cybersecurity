{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-385: Transaction or Event Tampering via Application API Manipulation</b><br>An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, substitute one item or another, spoof an existing item and conduct a false exchange, or otherwise change the amounts or identity of what is being exchanged. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in game can be monetized via sales for coin, virtual dollars, etc. The purpose of the attack is for the attack to scam the victim by trapping the data packets involved the exchange and altering the integrity of the transfer process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Transaction or Event Tampering via Application API Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/385.html",
      "id": "CAPEC-385"
    },
    {
      "Description": "<b>CAPEC-388: Application API Button Hijacking</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains buttons that point to an attacker controlled destination.",
      "color": "#94ebff",
      "size": 10,
      "label": "Application API Button Hijacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/388.html",
      "id": "CAPEC-388"
    },
    {
      "Description": "<b>CAPEC-466: Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy</b><br>An attacker leverages an adversary in the middle attack (CAPEC-94) in order to bypass the same origin policy protection in the victim's browser. This active adversary in the middle attack could be launched, for instance, when the victim is connected to a public WIFI hot spot. An attacker is able to intercept requests and responses between the victim's browser and some non-sensitive website that does not use TLS.",
      "color": "#75aaff",
      "size": 18,
      "label": "Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/466.html",
      "id": "CAPEC-466"
    },
    {
      "Description": "<b>CAPEC-219: XML Routing Detour Attacks</b><br>An attacker subverts an intermediate system used to process XML content and forces the intermediate to modify and/or re-route the processing of the content. XML Routing Detour Attacks are Adversary in the Middle type attacks (CAPEC-94). The attacker compromises or inserts an intermediate system in the processing of the XML message. For example, WS-Routing can be used to specify a series of nodes or intermediaries through which content is passed. If any of the intermediate nodes in this route are compromised by an attacker they could be used for a routing detour attack. From the compromised system the attacker is able to route the XML process to other nodes of their choice and modify the responses so that the normal chain of processing is unaware of the interception. This system can forward the message to an outside entity and hide the forwarding and processing from the legitimate processing systems by altering the header information.",
      "color": "#75aaff",
      "size": 18,
      "label": "XML Routing Detour Attacks",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/219.html",
      "id": "CAPEC-219"
    },
    {
      "Description": "<b>CAPEC-94: Adversary in the Middle (AiTM)</b><br>An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
      "color": "#2176ff",
      "size": 30,
      "label": "Adversary in the Middle (AiTM)",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/94.html",
      "id": "CAPEC-94"
    },
    {
      "Description": "<b>CAPEC-662: Adversary in the Browser (AiTB)</b><br>An adversary exploits security vulnerabilities or inherent functionalities of a web browser, in order to manipulate traffic between two endpoints.",
      "color": "#75aaff",
      "size": 18,
      "label": "Adversary in the Browser (AiTB)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/662.html",
      "id": "CAPEC-662"
    },
    {
      "Description": "<b>CAPEC-384: Application API Message Manipulation via Man-in-the-Middle</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to perform adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system. Despite the use of AiTH software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true \"Adversary-in-the-Middle\" attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client.",
      "color": "#75aaff",
      "size": 18,
      "label": "Application API Message Manipulation via Man-in-the-Middle",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/384.html",
      "id": "CAPEC-384"
    },
    {
      "Description": "<b>CAPEC-387: Navigation Remapping To Propagate Malicious Content</b><br>An adversary manipulates either egress or ingress data from a client within an application framework in order to change the content of messages and thereby circumvent the expected application logic.",
      "color": "#94ebff",
      "size": 10,
      "label": "Navigation Remapping To Propagate Malicious Content",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/387.html",
      "id": "CAPEC-387"
    },
    {
      "Description": "<b>CAPEC-701: Browser in the Middle (BiTM)</b><br>An adversary exploits the inherent functionalities of a web browser, in order to establish an unnoticed remote desktop connection in the victim's browser to the adversary's system. The adversary must deploy a web client with a remote desktop session that the victim can access.",
      "color": "#75aaff",
      "size": 18,
      "label": "Browser in the Middle (BiTM)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/701.html",
      "id": "CAPEC-701"
    },
    {
      "Description": "<b>CAPEC-386: Application API Navigation Remapping</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud.",
      "color": "#75aaff",
      "size": 18,
      "label": "Application API Navigation Remapping",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/386.html",
      "id": "CAPEC-386"
    },
    {
      "Description": "<b>CAPEC-389: Content Spoofing Via Application API Manipulation</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, spam-like content, or links to the attackers' code. In general, content-spoofing within an application API can be employed to stage many different types of attacks varied based on the attackers' intent. The techniques require use of specialized software that allow the attacker to use adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Content Spoofing Via Application API Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/389.html",
      "id": "CAPEC-389"
    }
  ],
  "links": [
    {
      "source": "CAPEC-385",
      "target": "CAPEC-384"
    },
    {
      "source": "CAPEC-388",
      "target": "CAPEC-386"
    },
    {
      "source": "CAPEC-466",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-219",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-662",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-384",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-387",
      "target": "CAPEC-386"
    },
    {
      "source": "CAPEC-701",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-386",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-389",
      "target": "CAPEC-384"
    }
  ]
}