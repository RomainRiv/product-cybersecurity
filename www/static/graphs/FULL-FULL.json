{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag</b><br>The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Sensitive Cookie Without 'HttpOnly' Flag",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1004.html",
      "id": "CWE-1004"
    },
    {
      "Description": "<b>CWE-732: Incorrect Permission Assignment for Critical Resource</b><br>The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Permission Assignment for Critical Resource",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/732.html",
      "id": "CWE-732"
    },
    {
      "Description": "<b>CWE-1007: Insufficient Visual Distinction of Homoglyphs Presented to User</b><br>The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Visual Distinction of Homoglyphs Presented to User",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1007.html",
      "id": "CWE-1007"
    },
    {
      "Description": "<b>CWE-451: User Interface (UI) Misrepresentation of Critical Information</b><br>The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
      "color": "#ff6200",
      "size": 18,
      "label": "User Interface (UI) Misrepresentation of Critical Information",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/451.html",
      "id": "CWE-451"
    },
    {
      "Description": "<b>CWE-102: Struts: Duplicate Validation Forms</b><br>The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Duplicate Validation Forms",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/102.html",
      "id": "CWE-102"
    },
    {
      "Description": "<b>CWE-694: Use of Multiple Resources with Duplicate Identifier</b><br>The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Multiple Resources with Duplicate Identifier",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/694.html",
      "id": "CWE-694"
    },
    {
      "Description": "<b>CWE-1173: Improper Use of Validation Framework</b><br>The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Use of Validation Framework",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1173.html",
      "id": "CWE-1173"
    },
    {
      "Description": "<b>CWE-20: Improper Input Validation</b><br>The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Input Validation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/20.html",
      "id": "CWE-20"
    },
    {
      "Description": "<b>CWE-1021: Improper Restriction of Rendered UI Layers or Frames</b><br>The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Rendered UI Layers or Frames",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1021.html",
      "id": "CWE-1021"
    },
    {
      "Description": "<b>CWE-441: Unintended Proxy or Intermediary ('Confused Deputy')</b><br>The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.",
      "color": "#ff6200",
      "size": 18,
      "label": "Unintended Proxy or Intermediary ('Confused Deputy')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/441.html",
      "id": "CWE-441"
    },
    {
      "Description": "<b>CWE-610: Externally Controlled Reference to a Resource in Another Sphere</b><br>The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.",
      "color": "#ff6200",
      "size": 18,
      "label": "Externally Controlled Reference to a Resource in Another Sphere",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/610.html",
      "id": "CWE-610"
    },
    {
      "Description": "<b>CWE-1022: Use of Web Link to Untrusted Target with window.opener Access</b><br>The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Web Link to Untrusted Target with window.opener Access",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1022.html",
      "id": "CWE-1022"
    },
    {
      "Description": "<b>CWE-266: Incorrect Privilege Assignment</b><br>A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Privilege Assignment",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/266.html",
      "id": "CWE-266"
    },
    {
      "Description": "<b>CWE-1023: Incomplete Comparison with Missing Factors</b><br>The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incomplete Comparison with Missing Factors",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1023.html",
      "id": "CWE-1023"
    },
    {
      "Description": "<b>CWE-697: Incorrect Comparison</b><br>The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
      "color": "#db0054",
      "size": 30,
      "label": "Incorrect Comparison",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/697.html",
      "id": "CWE-697"
    },
    {
      "Description": "<b>CWE-1024: Comparison of Incompatible Types</b><br>The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Comparison of Incompatible Types",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1024.html",
      "id": "CWE-1024"
    },
    {
      "Description": "<b>CWE-1025: Comparison Using Wrong Factors</b><br>The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Comparison Using Wrong Factors",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1025.html",
      "id": "CWE-1025"
    },
    {
      "Description": "<b>CWE-103: Struts: Incomplete validate() Method Definition</b><br>The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Incomplete validate() Method Definition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/103.html",
      "id": "CWE-103"
    },
    {
      "Description": "<b>CWE-573: Improper Following of Specification by Caller</b><br>The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Following of Specification by Caller",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/573.html",
      "id": "CWE-573"
    },
    {
      "Description": "<b>CWE-1037: Processor Optimization Removal or Modification of Security-critical Code</b><br>The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Processor Optimization Removal or Modification of Security-critical Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1037.html",
      "id": "CWE-1037"
    },
    {
      "Description": "<b>CWE-1038: Insecure Automated Optimizations</b><br>The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insecure Automated Optimizations",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1038.html",
      "id": "CWE-1038"
    },
    {
      "Description": "<b>CWE-435: Improper Interaction Between Multiple Correctly-Behaving Entities</b><br>An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Interaction Between Multiple Correctly-Behaving Entities",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/435.html",
      "id": "CWE-435"
    },
    {
      "Description": "<b>CWE-758: Reliance on Undefined, Unspecified, or Implementation-Defined Behavior</b><br>The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.",
      "color": "#ff6200",
      "size": 18,
      "label": "Reliance on Undefined, Unspecified, or Implementation-Defined Behavior",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/758.html",
      "id": "CWE-758"
    },
    {
      "Description": "<b>CWE-1039: Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations</b><br>The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.",
      "color": "#ff6200",
      "size": 18,
      "label": "Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1039.html",
      "id": "CWE-1039"
    },
    {
      "Description": "<b>CWE-693: Protection Mechanism Failure</b><br>The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
      "color": "#db0054",
      "size": 30,
      "label": "Protection Mechanism Failure",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/693.html",
      "id": "CWE-693"
    },
    {
      "Description": "<b>CWE-104: Struts: Form Bean Does Not Extend Validation Class</b><br>If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Form Bean Does Not Extend Validation Class",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/104.html",
      "id": "CWE-104"
    },
    {
      "Description": "<b>CWE-1041: Use of Redundant Code</b><br>The product has multiple functions, methods, procedures, macros, etc. that\n\t\t\t\t\tcontain the same code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Redundant Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1041.html",
      "id": "CWE-1041"
    },
    {
      "Description": "<b>CWE-710: Improper Adherence to Coding Standards</b><br>The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Adherence to Coding Standards",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/710.html",
      "id": "CWE-710"
    },
    {
      "Description": "<b>CWE-1042: Static Member Data Element outside of a Singleton Class Element</b><br>The code contains a member element that is declared as static (but not final), in which\n\t\t\t\t\tits parent class element \n\t\t\t\t\tis not a singleton class - that is, a class element that can be used only once in\n\t\t\t\t\tthe 'to' association of a Create action.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Static Member Data Element outside of a Singleton Class Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1042.html",
      "id": "CWE-1042"
    },
    {
      "Description": "<b>CWE-1176: Inefficient CPU Computation</b><br>The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further.",
      "color": "#ff6200",
      "size": 18,
      "label": "Inefficient CPU Computation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1176.html",
      "id": "CWE-1176"
    },
    {
      "Description": "<b>CWE-1043: Data Element Aggregating an Excessively Large Number of Non-Primitive Elements</b><br>The product uses a data element that has an excessively large\n\t\t\t\t\tnumber of sub-elements with non-primitive data types such as structures or aggregated objects.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Data Element Aggregating an Excessively Large Number of Non-Primitive Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1043.html",
      "id": "CWE-1043"
    },
    {
      "Description": "<b>CWE-1093: Excessively Complex Data Representation</b><br>The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.",
      "color": "#ff6200",
      "size": 18,
      "label": "Excessively Complex Data Representation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1093.html",
      "id": "CWE-1093"
    },
    {
      "Description": "<b>CWE-1044: Architecture with Number of Horizontal Layers Outside of Expected Range</b><br>The product's architecture contains too many - or too few -\n\t\t\t\t\thorizontal layers.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Architecture with Number of Horizontal Layers Outside of Expected Range",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1044.html",
      "id": "CWE-1044"
    },
    {
      "Description": "<b>CWE-1045: Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor</b><br>A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1045.html",
      "id": "CWE-1045"
    },
    {
      "Description": "<b>CWE-1076: Insufficient Adherence to Expected Conventions</b><br>The product's architecture, source code, design, documentation,\n\t\t\t\t\tor other artifact does not follow required conventions.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Adherence to Expected Conventions",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1076.html",
      "id": "CWE-1076"
    },
    {
      "Description": "<b>CWE-1046: Creation of Immutable Text Using String Concatenation</b><br>The product creates an immutable text string using string concatenation operations.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Creation of Immutable Text Using String Concatenation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1046.html",
      "id": "CWE-1046"
    },
    {
      "Description": "<b>CWE-1047: Modules with Circular Dependencies</b><br>The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Modules with Circular Dependencies",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1047.html",
      "id": "CWE-1047"
    },
    {
      "Description": "<b>CWE-1120: Excessive Code Complexity</b><br>The code is too complex, as calculated using a well-defined,\n\t\t\t\t\tquantitative measure.",
      "color": "#ff6200",
      "size": 18,
      "label": "Excessive Code Complexity",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1120.html",
      "id": "CWE-1120"
    },
    {
      "Description": "<b>CWE-1048: Invokable Control Element with Large Number of Outward Calls</b><br>The code contains callable control elements that\n         contain an excessively large number of references to other\n         application objects external to the context of the callable,\n         i.e. a Fan-Out value that is excessively large.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element with Large Number of Outward Calls",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1048.html",
      "id": "CWE-1048"
    },
    {
      "Description": "<b>CWE-1049: Excessive Data Query Operations in a Large Data Table</b><br>The product performs a data query with a large number of joins\n\t\t\t\t\tand sub-queries on a large data table.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Data Query Operations in a Large Data Table",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1049.html",
      "id": "CWE-1049"
    },
    {
      "Description": "<b>CWE-105: Struts: Form Field Without Validator</b><br>The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Form Field Without Validator",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/105.html",
      "id": "CWE-105"
    },
    {
      "Description": "<b>CWE-1050: Excessive Platform Resource Consumption within a Loop</b><br>The product has a loop body or loop condition that contains a control element that directly or\n\t\t\t\t\tindirectly consumes platform resources, e.g. messaging, sessions, locks, or file\n\t\t\t\t\tdescriptors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Platform Resource Consumption within a Loop",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1050.html",
      "id": "CWE-1050"
    },
    {
      "Description": "<b>CWE-405: Asymmetric Resource Consumption (Amplification)</b><br>The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is \"asymmetric.\"",
      "color": "#ff6200",
      "size": 18,
      "label": "Asymmetric Resource Consumption (Amplification)",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/405.html",
      "id": "CWE-405"
    },
    {
      "Description": "<b>CWE-1051: Initialization with Hard-Coded Network Resource Configuration Data</b><br>The product initializes data using hard-coded values that act as network resource identifiers.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Initialization with Hard-Coded Network Resource Configuration Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1051.html",
      "id": "CWE-1051"
    },
    {
      "Description": "<b>CWE-1419: Incorrect Initialization of Resource</b><br>The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Initialization of Resource",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1419.html",
      "id": "CWE-1419"
    },
    {
      "Description": "<b>CWE-1052: Excessive Use of Hard-Coded Literals in Initialization</b><br>The product initializes a data element using a hard-coded\n\t\t\t\t\tliteral that is not a simple integer or static constant element.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Use of Hard-Coded Literals in Initialization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1052.html",
      "id": "CWE-1052"
    },
    {
      "Description": "<b>CWE-1053: Missing Documentation for Design</b><br>The product does not have documentation that represents how it is designed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Documentation for Design",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1053.html",
      "id": "CWE-1053"
    },
    {
      "Description": "<b>CWE-1059: Insufficient Technical Documentation</b><br>The product does not contain sufficient\n         technical or engineering documentation (whether on paper or\n         in electronic form) that contains descriptions of all the\n         relevant software/hardware elements of the product, such as\n         its usage, structure, architectural components, interfaces, design, implementation,\n         configuration, operation, etc.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Technical Documentation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1059.html",
      "id": "CWE-1059"
    },
    {
      "Description": "<b>CWE-1054: Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer</b><br>The code at one architectural layer invokes code that resides\n\t\t\t\t\tat a deeper layer than the adjacent layer, i.e., the invocation skips at least one\n\t\t\t\t\tlayer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1054.html",
      "id": "CWE-1054"
    },
    {
      "Description": "<b>CWE-1061: Insufficient Encapsulation</b><br>The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Encapsulation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1061.html",
      "id": "CWE-1061"
    },
    {
      "Description": "<b>CWE-1055: Multiple Inheritance from Concrete Classes</b><br>The product contains a class with inheritance from more than\n\t\t\t\t\tone concrete class.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Multiple Inheritance from Concrete Classes",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1055.html",
      "id": "CWE-1055"
    },
    {
      "Description": "<b>CWE-1056: Invokable Control Element with Variadic Parameters</b><br>A named-callable or method control element has a signature that\n\t\t\t\t\tsupports a variable (variadic) number of parameters or arguments.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element with Variadic Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1056.html",
      "id": "CWE-1056"
    },
    {
      "Description": "<b>CWE-1057: Data Access Operations Outside of Expected Data Manager Component</b><br>The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Data Access Operations Outside of Expected Data Manager Component",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1057.html",
      "id": "CWE-1057"
    },
    {
      "Description": "<b>CWE-1058: Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element</b><br>The code contains a function or method that\n\t\t operates in a multi-threaded environment but owns an unsafe non-final\n\t\t                     static storable or member data element.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1058.html",
      "id": "CWE-1058"
    },
    {
      "Description": "<b>CWE-662: Improper Synchronization</b><br>The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Synchronization",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/662.html",
      "id": "CWE-662"
    },
    {
      "Description": "<b>CWE-106: Struts: Plug-in Framework not in Use</b><br>When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Plug-in Framework not in Use",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/106.html",
      "id": "CWE-106"
    },
    {
      "Description": "<b>CWE-1060: Excessive Number of Inefficient Server-Side Data Accesses</b><br>The product performs too many data queries without using efficient data processing functionality such as stored procedures.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Number of Inefficient Server-Side Data Accesses",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1060.html",
      "id": "CWE-1060"
    },
    {
      "Description": "<b>CWE-1062: Parent Class with References to Child Class</b><br>The code has a parent class that contains references to a child class, its methods, or its members.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Parent Class with References to Child Class",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1062.html",
      "id": "CWE-1062"
    },
    {
      "Description": "<b>CWE-1063: Creation of Class Instance within a Static Code Block</b><br>A static code block creates an instance of a class.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Creation of Class Instance within a Static Code Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1063.html",
      "id": "CWE-1063"
    },
    {
      "Description": "<b>CWE-1064: Invokable Control Element with Signature Containing an Excessive Number of Parameters</b><br>The product contains a function, subroutine, or method whose signature has an unnecessarily large number of\n\t\t\t\t\tparameters/arguments.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element with Signature Containing an Excessive Number of Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1064.html",
      "id": "CWE-1064"
    },
    {
      "Description": "<b>CWE-1065: Runtime Resource Management Control Element in a Component Built to Run on Application Servers</b><br>The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Runtime Resource Management Control Element in a Component Built to Run on Application Servers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1065.html",
      "id": "CWE-1065"
    },
    {
      "Description": "<b>CWE-1066: Missing Serialization Control Element</b><br>The product contains a serializable data element that does not\n\t\t\t\t\thave an associated serialization method.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Serialization Control Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1066.html",
      "id": "CWE-1066"
    },
    {
      "Description": "<b>CWE-1067: Excessive Execution of Sequential Searches of Data Resource</b><br>The product contains a data query against an SQL table or view\n\t\t\t\t\tthat is configured in a way that does not utilize an index and may cause\n\t\t\t\t\tsequential searches to be performed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Execution of Sequential Searches of Data Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1067.html",
      "id": "CWE-1067"
    },
    {
      "Description": "<b>CWE-1068: Inconsistency Between Implementation and Documented Design</b><br>The implementation of the product is not consistent with the\n\t\t\t\t\tdesign as described within the relevant documentation.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inconsistency Between Implementation and Documented Design",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1068.html",
      "id": "CWE-1068"
    },
    {
      "Description": "<b>CWE-1069: Empty Exception Block</b><br>An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Empty Exception Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1069.html",
      "id": "CWE-1069"
    },
    {
      "Description": "<b>CWE-1071: Empty Code Block</b><br>The source code contains a block that does not contain any code, i.e., the block is empty.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Empty Code Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1071.html",
      "id": "CWE-1071"
    },
    {
      "Description": "<b>CWE-107: Struts: Unused Validation Form</b><br>An unused validation form indicates that validation logic is not up-to-date.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Unused Validation Form",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/107.html",
      "id": "CWE-107"
    },
    {
      "Description": "<b>CWE-1164: Irrelevant Code</b><br>The product contains code that is not essential for execution,\n\t     i.e. makes no state changes and has no side effects that alter\n\t     data or control flow, such that removal of the code would have no impact\n\t     to functionality or correctness.",
      "color": "#ff6200",
      "size": 18,
      "label": "Irrelevant Code",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1164.html",
      "id": "CWE-1164"
    },
    {
      "Description": "<b>CWE-1070: Serializable Data Element Containing non-Serializable Item Elements</b><br>The product contains a serializable, storable data element such as a field or member,\n\t\t\t\t\tbut the data element contains member elements that are not\n\t\t\t\t\tserializable.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Serializable Data Element Containing non-Serializable Item Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1070.html",
      "id": "CWE-1070"
    },
    {
      "Description": "<b>CWE-1072: Data Resource Access without Use of Connection Pooling</b><br>The product accesses a data resource through a database without using a\n\t\t\t\t\tconnection pooling capability.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Data Resource Access without Use of Connection Pooling",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1072.html",
      "id": "CWE-1072"
    },
    {
      "Description": "<b>CWE-1073: Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses</b><br>The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1073.html",
      "id": "CWE-1073"
    },
    {
      "Description": "<b>CWE-1074: Class with Excessively Deep Inheritance</b><br>A class has an inheritance level that is too high, i.e., it\n\t\t\t\t\thas a large number of parent classes.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Class with Excessively Deep Inheritance",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1074.html",
      "id": "CWE-1074"
    },
    {
      "Description": "<b>CWE-1075: Unconditional Control Flow Transfer outside of Switch Block</b><br>The product performs unconditional control transfer (such as a\n\t\t\t\t\t\"goto\") in code outside of a branching structure such as a switch\n\t\t\t\t\tblock.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unconditional Control Flow Transfer outside of Switch Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1075.html",
      "id": "CWE-1075"
    },
    {
      "Description": "<b>CWE-1077: Floating Point Comparison with Incorrect Operator</b><br>The code performs a comparison such as an\n        equality test between two float (floating point) values, but\n        it uses comparison operators that do not account for the\n        possibility of loss of precision.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Floating Point Comparison with Incorrect Operator",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1077.html",
      "id": "CWE-1077"
    },
    {
      "Description": "<b>CWE-1078: Inappropriate Source Code Style or Formatting</b><br>The source code does not follow\n\t\t\t\tdesired style or formatting for indentation, white\n\t\t\t\tspace, comments, etc.",
      "color": "#ff6200",
      "size": 18,
      "label": "Inappropriate Source Code Style or Formatting",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1078.html",
      "id": "CWE-1078"
    },
    {
      "Description": "<b>CWE-1079: Parent Class without Virtual Destructor Method</b><br>A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Parent Class without Virtual Destructor Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1079.html",
      "id": "CWE-1079"
    },
    {
      "Description": "<b>CWE-108: Struts: Unvalidated Action Form</b><br>Every Action Form must have a corresponding validation form.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Unvalidated Action Form",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/108.html",
      "id": "CWE-108"
    },
    {
      "Description": "<b>CWE-1080: Source Code File with Excessive Number of Lines of Code</b><br>A source code file has too many lines of\n\t\t\t\t\tcode.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Source Code File with Excessive Number of Lines of Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1080.html",
      "id": "CWE-1080"
    },
    {
      "Description": "<b>CWE-1082: Class Instance Self Destruction Control Element</b><br>The code contains a class instance that calls the method or function to delete or destroy itself.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Class Instance Self Destruction Control Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1082.html",
      "id": "CWE-1082"
    },
    {
      "Description": "<b>CWE-1083: Data Access from Outside Expected Data Manager Component</b><br>The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Data Access from Outside Expected Data Manager Component",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1083.html",
      "id": "CWE-1083"
    },
    {
      "Description": "<b>CWE-1084: Invokable Control Element with Excessive File or Data Access Operations</b><br>A function or method contains too many\n\t\t\t\t\toperations that utilize a data manager or file resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element with Excessive File or Data Access Operations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1084.html",
      "id": "CWE-1084"
    },
    {
      "Description": "<b>CWE-1085: Invokable Control Element with Excessive Volume of Commented-out Code</b><br>A function, method, procedure, etc. contains an excessive amount of code that has been\n\t\t\t\t\tcommented out within its body.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invokable Control Element with Excessive Volume of Commented-out Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1085.html",
      "id": "CWE-1085"
    },
    {
      "Description": "<b>CWE-1086: Class with Excessive Number of Child Classes</b><br>A class contains an unnecessarily large number of\n\t\t\t\t\tchildren.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Class with Excessive Number of Child Classes",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1086.html",
      "id": "CWE-1086"
    },
    {
      "Description": "<b>CWE-1087: Class with Virtual Method without a Virtual Destructor</b><br>A class contains a virtual method, but the method does not have an associated virtual destructor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Class with Virtual Method without a Virtual Destructor",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1087.html",
      "id": "CWE-1087"
    },
    {
      "Description": "<b>CWE-1088: Synchronous Access of Remote Resource without Timeout</b><br>The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Synchronous Access of Remote Resource without Timeout",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1088.html",
      "id": "CWE-1088"
    },
    {
      "Description": "<b>CWE-821: Incorrect Synchronization</b><br>The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Synchronization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/821.html",
      "id": "CWE-821"
    },
    {
      "Description": "<b>CWE-1089: Large Data Table with Excessive Number of Indices</b><br>The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Large Data Table with Excessive Number of Indices",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1089.html",
      "id": "CWE-1089"
    },
    {
      "Description": "<b>CWE-109: Struts: Validator Turned Off</b><br>Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Validator Turned Off",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/109.html",
      "id": "CWE-109"
    },
    {
      "Description": "<b>CWE-1090: Method Containing Access of a Member Element from Another Class</b><br>A method for a class performs an operation that directly\n\t\t\t\t\taccesses a member element from another class.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Method Containing Access of a Member Element from Another Class",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1090.html",
      "id": "CWE-1090"
    },
    {
      "Description": "<b>CWE-1091: Use of Object without Invoking Destructor Method</b><br>The product contains a method that accesses an object but does not later invoke\n\t\t\t\t\tthe element's associated finalize/destructor method.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Object without Invoking Destructor Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1091.html",
      "id": "CWE-1091"
    },
    {
      "Description": "<b>CWE-772: Missing Release of Resource after Effective Lifetime</b><br>The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Release of Resource after Effective Lifetime",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/772.html",
      "id": "CWE-772"
    },
    {
      "Description": "<b>CWE-1092: Use of Same Invokable Control Element in Multiple Architectural Layers</b><br>The product uses the same control element across multiple\n\t\t\t\t\tarchitectural layers.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Same Invokable Control Element in Multiple Architectural Layers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1092.html",
      "id": "CWE-1092"
    },
    {
      "Description": "<b>CWE-1094: Excessive Index Range Scan for a Data Resource</b><br>The product contains an index range scan for a large data table,\n\t\t\t\t\tbut the scan can cover a large number of rows.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Index Range Scan for a Data Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1094.html",
      "id": "CWE-1094"
    },
    {
      "Description": "<b>CWE-1095: Loop Condition Value Update within the Loop</b><br>The product uses a loop with a control flow condition based on\n\t\t\t\t\ta value that is updated within the body of the loop.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Loop Condition Value Update within the Loop",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1095.html",
      "id": "CWE-1095"
    },
    {
      "Description": "<b>CWE-1096: Singleton Class Instance Creation without Proper Locking or Synchronization</b><br>The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Singleton Class Instance Creation without Proper Locking or Synchronization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1096.html",
      "id": "CWE-1096"
    },
    {
      "Description": "<b>CWE-820: Missing Synchronization</b><br>The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Synchronization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/820.html",
      "id": "CWE-820"
    },
    {
      "Description": "<b>CWE-1097: Persistent Storable Data Element without Associated Comparison Control Element</b><br>The product uses a storable data element that does not have\n\t\t\t\t\tall of the associated functions or methods that are necessary to support\n\t\t\t\t\tcomparison.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Persistent Storable Data Element without Associated Comparison Control Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1097.html",
      "id": "CWE-1097"
    },
    {
      "Description": "<b>CWE-595: Comparison of Object References Instead of Object Contents</b><br>The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Comparison of Object References Instead of Object Contents",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/595.html",
      "id": "CWE-595"
    },
    {
      "Description": "<b>CWE-1098: Data Element containing Pointer Item without Proper Copy Control Element</b><br>The code contains a data element with a pointer that does not have an associated copy or constructor method.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Data Element containing Pointer Item without Proper Copy Control Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1098.html",
      "id": "CWE-1098"
    },
    {
      "Description": "<b>CWE-1099: Inconsistent Naming Conventions for Identifiers</b><br>The product's code, documentation, or other artifacts do not\n\t\t\t\t\tconsistently use the same naming conventions for variables, callables, groups of\n\t\t\t\t\trelated callables, I/O capabilities, data types, file names, or similar types of\n\t\t\t\t\telements.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inconsistent Naming Conventions for Identifiers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1099.html",
      "id": "CWE-1099"
    },
    {
      "Description": "<b>CWE-11: ASP.NET Misconfiguration: Creating Debug Binary</b><br>Debugging messages help attackers learn about the system and plan a form of attack.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Creating Debug Binary",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/11.html",
      "id": "CWE-11"
    },
    {
      "Description": "<b>CWE-489: Active Debug Code</b><br>The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Active Debug Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/489.html",
      "id": "CWE-489"
    },
    {
      "Description": "<b>CWE-110: Struts: Validator Without Form Field</b><br>Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Validator Without Form Field",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/110.html",
      "id": "CWE-110"
    },
    {
      "Description": "<b>CWE-1100: Insufficient Isolation of System-Dependent Functions</b><br>The product or code does not isolate system-dependent\n\t\t\t\t\tfunctionality into separate standalone modules.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Isolation of System-Dependent Functions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1100.html",
      "id": "CWE-1100"
    },
    {
      "Description": "<b>CWE-1101: Reliance on Runtime Component in Generated Code</b><br>The product uses automatically-generated code that cannot be\n\t\t\t\t\texecuted without a specific runtime support component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Runtime Component in Generated Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1101.html",
      "id": "CWE-1101"
    },
    {
      "Description": "<b>CWE-1102: Reliance on Machine-Dependent Data Representation</b><br>The code uses a data representation that relies on low-level\n\t\t\t\t\tdata representation or constructs that may vary across different processors,\n\t\t\t\t\tphysical machines, OSes, or other physical components.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Machine-Dependent Data Representation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1102.html",
      "id": "CWE-1102"
    },
    {
      "Description": "<b>CWE-1103: Use of Platform-Dependent Third Party Components</b><br>The product relies on third-party components that do\n\t\t\t\t\tnot provide equivalent functionality across all desirable\n\t\t\t\t\tplatforms.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Platform-Dependent Third Party Components",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1103.html",
      "id": "CWE-1103"
    },
    {
      "Description": "<b>CWE-1104: Use of Unmaintained Third Party Components</b><br>The product relies on third-party components that are not\n\t\t\t\t\tactively supported or maintained by the original developer or a trusted proxy\n\t\t\t\t\tfor the original developer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Unmaintained Third Party Components",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1104.html",
      "id": "CWE-1104"
    },
    {
      "Description": "<b>CWE-1357: Reliance on Insufficiently Trustworthy Component</b><br>The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.",
      "color": "#ff6200",
      "size": 18,
      "label": "Reliance on Insufficiently Trustworthy Component",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1357.html",
      "id": "CWE-1357"
    },
    {
      "Description": "<b>CWE-1105: Insufficient Encapsulation of Machine-Dependent Functionality</b><br>The product or code uses machine-dependent functionality, but\n\t\t\t\t\tit does not sufficiently encapsulate or isolate this functionality from\n\t\t\t\t\tthe rest of the code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Encapsulation of Machine-Dependent Functionality",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1105.html",
      "id": "CWE-1105"
    },
    {
      "Description": "<b>CWE-1106: Insufficient Use of Symbolic Constants</b><br>The source code uses literal constants that may need to change\n\t\t\t\t\tor evolve over time, instead of using symbolic constants.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Use of Symbolic Constants",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1106.html",
      "id": "CWE-1106"
    },
    {
      "Description": "<b>CWE-1107: Insufficient Isolation of Symbolic Constant Definitions</b><br>The source code uses symbolic constants, but it does not\n\t\t\t\t\tsufficiently place the definitions of these constants into a more centralized or\n\t\t\t\t\tisolated location.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Isolation of Symbolic Constant Definitions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1107.html",
      "id": "CWE-1107"
    },
    {
      "Description": "<b>CWE-1108: Excessive Reliance on Global Variables</b><br>The code is structured in a way that relies too much on using\n\t\t\t\t\tor setting global variables throughout various points in the code, instead of\n\t\t\t\t\tpreserving the associated information in a narrower, more local\n\t\t\t\t\tcontext.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Reliance on Global Variables",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1108.html",
      "id": "CWE-1108"
    },
    {
      "Description": "<b>CWE-1109: Use of Same Variable for Multiple Purposes</b><br>The code contains a callable, block, or other code element in\n\t\t\t\t\twhich the same variable is used to control more than one unique task or store\n\t\t\t\t\tmore than one instance of data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Same Variable for Multiple Purposes",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1109.html",
      "id": "CWE-1109"
    },
    {
      "Description": "<b>CWE-111: Direct Use of Unsafe JNI</b><br>When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Direct Use of Unsafe JNI",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/111.html",
      "id": "CWE-111"
    },
    {
      "Description": "<b>CWE-695: Use of Low-Level Functionality</b><br>The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Low-Level Functionality",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/695.html",
      "id": "CWE-695"
    },
    {
      "Description": "<b>CWE-1110: Incomplete Design Documentation</b><br>The product's design documentation does not adequately describe\n\t\t\t\t\tcontrol flow, data flow, system initialization, relationships between tasks,\n\t\t\t\t\tcomponents, rationales, or other important aspects of the\n\t\t\t\t\tdesign.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Design Documentation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1110.html",
      "id": "CWE-1110"
    },
    {
      "Description": "<b>CWE-1111: Incomplete I/O Documentation</b><br>The product's documentation does not adequately define inputs,\n\t\t\t\t\toutputs, or system/software interfaces.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete I/O Documentation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1111.html",
      "id": "CWE-1111"
    },
    {
      "Description": "<b>CWE-1112: Incomplete Documentation of Program Execution</b><br>The document does not fully define all mechanisms that are used\n\t\t\t\t\tto control or influence how product-specific programs are\n\t\t\t\t\texecuted.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Documentation of Program Execution",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1112.html",
      "id": "CWE-1112"
    },
    {
      "Description": "<b>CWE-1113: Inappropriate Comment Style</b><br>The source code uses comment styles or formats that are\n\t\t\t\t\tinconsistent or do not follow expected standards for the\n\t\t\t\t\tproduct.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inappropriate Comment Style",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1113.html",
      "id": "CWE-1113"
    },
    {
      "Description": "<b>CWE-1114: Inappropriate Whitespace Style</b><br>The source code contains whitespace that is inconsistent across\n\t\t\t\t\tthe code or does not follow expected standards for the\n\t\t\t\t\tproduct.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inappropriate Whitespace Style",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1114.html",
      "id": "CWE-1114"
    },
    {
      "Description": "<b>CWE-1115: Source Code Element without Standard Prologue</b><br>The source code contains elements such as source files \n\t\t\t\t\tthat do not consistently provide a prologue or header that has been\n\t\t\t\t\tstandardized for the project.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Source Code Element without Standard Prologue",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1115.html",
      "id": "CWE-1115"
    },
    {
      "Description": "<b>CWE-1116: Inaccurate Comments</b><br>The source code contains comments that do not accurately\n\t\t\t\t\tdescribe or explain aspects of the portion of the code with which the comment is\n\t\t\t\t\tassociated.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inaccurate Comments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1116.html",
      "id": "CWE-1116"
    },
    {
      "Description": "<b>CWE-1117: Callable with Insufficient Behavioral Summary</b><br>The code contains a function or method whose signature and/or associated\n\t\t\t\t\tinline documentation does not sufficiently describe the callable's inputs, outputs,\n\t\t\t\t\tside effects, assumptions, or return codes.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Callable with Insufficient Behavioral Summary",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1117.html",
      "id": "CWE-1117"
    },
    {
      "Description": "<b>CWE-1118: Insufficient Documentation of Error Handling Techniques</b><br>The documentation does not sufficiently describe the techniques\n\t\t\t\t\tthat are used for error handling, exception processing, or similar\n\t\t\t\t\tmechanisms.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Documentation of Error Handling Techniques",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1118.html",
      "id": "CWE-1118"
    },
    {
      "Description": "<b>CWE-1119: Excessive Use of Unconditional Branching</b><br>The code uses too many unconditional branches (such as\n\t\t\t\t\t\"goto\").",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Use of Unconditional Branching",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1119.html",
      "id": "CWE-1119"
    },
    {
      "Description": "<b>CWE-112: Missing XML Validation</b><br>The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing XML Validation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/112.html",
      "id": "CWE-112"
    },
    {
      "Description": "<b>CWE-1286: Improper Validation of Syntactic Correctness of Input</b><br>The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Syntactic Correctness of Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1286.html",
      "id": "CWE-1286"
    },
    {
      "Description": "<b>CWE-1121: Excessive McCabe Cyclomatic Complexity</b><br>The code contains McCabe cyclomatic complexity that exceeds a\n\tdesirable maximum.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive McCabe Cyclomatic Complexity",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1121.html",
      "id": "CWE-1121"
    },
    {
      "Description": "<b>CWE-1122: Excessive Halstead Complexity</b><br>The code is structured in a way that a Halstead complexity\n\t\t\t\t\tmeasure exceeds a desirable maximum.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Halstead Complexity",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1122.html",
      "id": "CWE-1122"
    },
    {
      "Description": "<b>CWE-1123: Excessive Use of Self-Modifying Code</b><br>The product uses too much self-modifying\n\t\t\t\t\tcode.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Use of Self-Modifying Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1123.html",
      "id": "CWE-1123"
    },
    {
      "Description": "<b>CWE-1124: Excessively Deep Nesting</b><br>The code contains a callable or other code grouping in which\n\t\t\t\t\tthe nesting / branching is too deep.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessively Deep Nesting",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1124.html",
      "id": "CWE-1124"
    },
    {
      "Description": "<b>CWE-1125: Excessive Attack Surface</b><br>The product has an attack surface whose quantitative\n\t\t\t\t\tmeasurement exceeds a desirable maximum.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Excessive Attack Surface",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1125.html",
      "id": "CWE-1125"
    },
    {
      "Description": "<b>CWE-1126: Declaration of Variable with Unnecessarily Wide Scope</b><br>The source code declares a variable in one scope, but the\n\t\t\t\t\tvariable is only used within a narrower scope.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Declaration of Variable with Unnecessarily Wide Scope",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1126.html",
      "id": "CWE-1126"
    },
    {
      "Description": "<b>CWE-1127: Compilation with Insufficient Warnings or Errors</b><br>The code is compiled without sufficient warnings enabled, which\n\t\t\t\t\tmay prevent the detection of subtle bugs or quality\n\t\t\t\t\tissues.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Compilation with Insufficient Warnings or Errors",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1127.html",
      "id": "CWE-1127"
    },
    {
      "Description": "<b>CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')</b><br>The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/113.html",
      "id": "CWE-113"
    },
    {
      "Description": "<b>CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</b><br>The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/93.html",
      "id": "CWE-93"
    },
    {
      "Description": "<b>CWE-436: Interpretation Conflict</b><br>Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
      "color": "#ff6200",
      "size": 18,
      "label": "Interpretation Conflict",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/436.html",
      "id": "CWE-436"
    },
    {
      "Description": "<b>CWE-114: Process Control</b><br>Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.",
      "color": "#ff6200",
      "size": 18,
      "label": "Process Control",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/114.html",
      "id": "CWE-114"
    },
    {
      "Description": "<b>CWE-73: External Control of File Name or Path</b><br>The product allows user input to control or influence paths or file names that are used in filesystem operations.",
      "color": "#ffbb00",
      "size": 10,
      "label": "External Control of File Name or Path",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/73.html",
      "id": "CWE-73"
    },
    {
      "Description": "<b>CWE-115: Misinterpretation of Input</b><br>The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Misinterpretation of Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/115.html",
      "id": "CWE-115"
    },
    {
      "Description": "<b>CWE-116: Improper Encoding or Escaping of Output</b><br>The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Encoding or Escaping of Output",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/116.html",
      "id": "CWE-116"
    },
    {
      "Description": "<b>CWE-707: Improper Neutralization</b><br>The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Neutralization",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/707.html",
      "id": "CWE-707"
    },
    {
      "Description": "<b>CWE-117: Improper Output Neutralization for Logs</b><br>The product does not neutralize or incorrectly neutralizes output that is written to logs.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Output Neutralization for Logs",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/117.html",
      "id": "CWE-117"
    },
    {
      "Description": "<b>CWE-1174: ASP.NET Misconfiguration: Improper Model Validation</b><br>The ASP.NET application does not use, or incorrectly uses, the model validation framework.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Improper Model Validation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1174.html",
      "id": "CWE-1174"
    },
    {
      "Description": "<b>CWE-1177: Use of Prohibited Code</b><br>The product uses a function, library, or third party component\n\t     that has been explicitly prohibited, whether by the developer or\n\t     the customer.",
      "color": "#ff6200",
      "size": 18,
      "label": "Use of Prohibited Code",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1177.html",
      "id": "CWE-1177"
    },
    {
      "Description": "<b>CWE-118: Incorrect Access of Indexable Resource ('Range Error')</b><br>The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Access of Indexable Resource ('Range Error')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/118.html",
      "id": "CWE-118"
    },
    {
      "Description": "<b>CWE-664: Improper Control of a Resource Through its Lifetime</b><br>The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Control of a Resource Through its Lifetime",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/664.html",
      "id": "CWE-664"
    },
    {
      "Description": "<b>CWE-1187: DEPRECATED: Use of Uninitialized Resource</b><br>This entry has been deprecated because it was a duplicate of CWE-908. All content has been transferred to CWE-908.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Use of Uninitialized Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1187.html",
      "id": "CWE-1187"
    },
    {
      "Description": "<b>CWE-1188: Initialization of a Resource with an Insecure Default</b><br>The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Initialization of a Resource with an Insecure Default",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1188.html",
      "id": "CWE-1188"
    },
    {
      "Description": "<b>CWE-665: Improper Initialization</b><br>The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Initialization",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/665.html",
      "id": "CWE-665"
    },
    {
      "Description": "<b>CWE-1189: Improper Isolation of Shared Resources on System-on-a-Chip (SoC)</b><br>The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1189.html",
      "id": "CWE-1189"
    },
    {
      "Description": "<b>CWE-653: Improper Isolation or Compartmentalization</b><br>The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Isolation or Compartmentalization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/653.html",
      "id": "CWE-653"
    },
    {
      "Description": "<b>CWE-668: Exposure of Resource to Wrong Sphere</b><br>The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
      "color": "#ff6200",
      "size": 18,
      "label": "Exposure of Resource to Wrong Sphere",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/668.html",
      "id": "CWE-668"
    },
    {
      "Description": "<b>CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer</b><br>The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/119.html",
      "id": "CWE-119"
    },
    {
      "Description": "<b>CWE-1190: DMA Device Enabled Too Early in Boot Phase</b><br>The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DMA Device Enabled Too Early in Boot Phase",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1190.html",
      "id": "CWE-1190"
    },
    {
      "Description": "<b>CWE-696: Incorrect Behavior Order</b><br>The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Behavior Order",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/696.html",
      "id": "CWE-696"
    },
    {
      "Description": "<b>CWE-1191: On-Chip Debug and Test Interface With Improper Access Control</b><br>The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.",
      "color": "#ffbb00",
      "size": 10,
      "label": "On-Chip Debug and Test Interface With Improper Access Control",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1191.html",
      "id": "CWE-1191"
    },
    {
      "Description": "<b>CWE-284: Improper Access Control</b><br>The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Access Control",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/284.html",
      "id": "CWE-284"
    },
    {
      "Description": "<b>CWE-1192: System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers</b><br>The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.",
      "color": "#ffbb00",
      "size": 10,
      "label": "System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1192.html",
      "id": "CWE-1192"
    },
    {
      "Description": "<b>CWE-657: Violation of Secure Design Principles</b><br>The product violates well-established principles for secure design.",
      "color": "#ff6200",
      "size": 18,
      "label": "Violation of Secure Design Principles",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/657.html",
      "id": "CWE-657"
    },
    {
      "Description": "<b>CWE-1193: Power-On of Untrusted Execution Core Before Enabling Fabric Access Control</b><br>The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Power-On of Untrusted Execution Core Before Enabling Fabric Access Control",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1193.html",
      "id": "CWE-1193"
    },
    {
      "Description": "<b>CWE-12: ASP.NET Misconfiguration: Missing Custom Error Page</b><br>An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Missing Custom Error Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/12.html",
      "id": "CWE-12"
    },
    {
      "Description": "<b>CWE-756: Missing Custom Error Page</b><br>The product does not return custom error pages to the user, possibly exposing sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Custom Error Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/756.html",
      "id": "CWE-756"
    },
    {
      "Description": "<b>CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')</b><br>The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/120.html",
      "id": "CWE-120"
    },
    {
      "Description": "<b>CWE-1204: Generation of Weak Initialization Vector (IV)</b><br>The product uses a cryptographic primitive that uses an Initialization\n\t\t\tVector (IV), but the product does not generate IVs that are\n\t\t\tsufficiently unpredictable or unique according to the expected\n\t\t\tcryptographic requirements for that primitive.\n\t\t\t",
      "color": "#ffbb00",
      "size": 10,
      "label": "Generation of Weak Initialization Vector (IV)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1204.html",
      "id": "CWE-1204"
    },
    {
      "Description": "<b>CWE-330: Use of Insufficiently Random Values</b><br>The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
      "color": "#ff6200",
      "size": 18,
      "label": "Use of Insufficiently Random Values",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/330.html",
      "id": "CWE-330"
    },
    {
      "Description": "<b>CWE-1209: Failure to Disable Reserved Bits</b><br>The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design.   However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Failure to Disable Reserved Bits",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1209.html",
      "id": "CWE-1209"
    },
    {
      "Description": "<b>CWE-121: Stack-based Buffer Overflow</b><br>A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
      "color": "#e8e66b",
      "size": 10,
      "label": "Stack-based Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/121.html",
      "id": "CWE-121"
    },
    {
      "Description": "<b>CWE-788: Access of Memory Location After End of Buffer</b><br>The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access of Memory Location After End of Buffer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/788.html",
      "id": "CWE-788"
    },
    {
      "Description": "<b>CWE-787: Out-of-bounds Write</b><br>The product writes data past the end, or before the beginning, of the intended buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Out-of-bounds Write",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/787.html",
      "id": "CWE-787"
    },
    {
      "Description": "<b>CWE-122: Heap-based Buffer Overflow</b><br>A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
      "color": "#e8e66b",
      "size": 10,
      "label": "Heap-based Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/122.html",
      "id": "CWE-122"
    },
    {
      "Description": "<b>CWE-1220: Insufficient Granularity of Access Control</b><br>The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Granularity of Access Control",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1220.html",
      "id": "CWE-1220"
    },
    {
      "Description": "<b>CWE-1221: Incorrect Register Defaults or Module Parameters</b><br>Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Register Defaults or Module Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1221.html",
      "id": "CWE-1221"
    },
    {
      "Description": "<b>CWE-1222: Insufficient Granularity of Address Regions Protected by Register Locks</b><br>The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1222.html",
      "id": "CWE-1222"
    },
    {
      "Description": "<b>CWE-1223: Race Condition for Write-Once Attributes</b><br>A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Race Condition for Write-Once Attributes",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1223.html",
      "id": "CWE-1223"
    },
    {
      "Description": "<b>CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')</b><br>The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
      "color": "#ff6200",
      "size": 18,
      "label": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/362.html",
      "id": "CWE-362"
    },
    {
      "Description": "<b>CWE-1224: Improper Restriction of Write-Once Bit Fields</b><br>The hardware design control register \"sticky bits\" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Write-Once Bit Fields",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1224.html",
      "id": "CWE-1224"
    },
    {
      "Description": "<b>CWE-1229: Creation of Emergent Resource</b><br>The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.",
      "color": "#ff6200",
      "size": 18,
      "label": "Creation of Emergent Resource",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1229.html",
      "id": "CWE-1229"
    },
    {
      "Description": "<b>CWE-123: Write-what-where Condition</b><br>Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Write-what-where Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/123.html",
      "id": "CWE-123"
    },
    {
      "Description": "<b>CWE-1230: Exposure of Sensitive Information Through Metadata</b><br>The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Sensitive Information Through Metadata",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1230.html",
      "id": "CWE-1230"
    },
    {
      "Description": "<b>CWE-285: Improper Authorization</b><br>The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Authorization",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/285.html",
      "id": "CWE-285"
    },
    {
      "Description": "<b>CWE-1231: Improper Prevention of Lock Bit Modification</b><br>The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Prevention of Lock Bit Modification",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1231.html",
      "id": "CWE-1231"
    },
    {
      "Description": "<b>CWE-1232: Improper Lock Behavior After Power State Transition</b><br>Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Lock Behavior After Power State Transition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1232.html",
      "id": "CWE-1232"
    },
    {
      "Description": "<b>CWE-667: Improper Locking</b><br>The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Locking",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/667.html",
      "id": "CWE-667"
    },
    {
      "Description": "<b>CWE-1233: Security-Sensitive Hardware Controls with Missing Lock Bit Protection</b><br>The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1233.html",
      "id": "CWE-1233"
    },
    {
      "Description": "<b>CWE-1234: Hardware Internal or Debug Modes Allow Override of Locks</b><br>System configuration protection may be bypassed during debug mode.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Hardware Internal or Debug Modes Allow Override of Locks",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1234.html",
      "id": "CWE-1234"
    },
    {
      "Description": "<b>CWE-1235: Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations</b><br>The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1235.html",
      "id": "CWE-1235"
    },
    {
      "Description": "<b>CWE-400: Uncontrolled Resource Consumption</b><br>The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
      "color": "#ff6200",
      "size": 18,
      "label": "Uncontrolled Resource Consumption",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/400.html",
      "id": "CWE-400"
    },
    {
      "Description": "<b>CWE-1236: Improper Neutralization of Formula Elements in a CSV File</b><br>The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Formula Elements in a CSV File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1236.html",
      "id": "CWE-1236"
    },
    {
      "Description": "<b>CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</b><br>The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/74.html",
      "id": "CWE-74"
    },
    {
      "Description": "<b>CWE-1239: Improper Zeroization of Hardware Register</b><br>The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Zeroization of Hardware Register",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1239.html",
      "id": "CWE-1239"
    },
    {
      "Description": "<b>CWE-226: Sensitive Information in Resource Not Removed Before Reuse</b><br>The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Sensitive Information in Resource Not Removed Before Reuse",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/226.html",
      "id": "CWE-226"
    },
    {
      "Description": "<b>CWE-124: Buffer Underwrite ('Buffer Underflow')</b><br>The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Buffer Underwrite ('Buffer Underflow')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/124.html",
      "id": "CWE-124"
    },
    {
      "Description": "<b>CWE-786: Access of Memory Location Before Start of Buffer</b><br>The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access of Memory Location Before Start of Buffer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/786.html",
      "id": "CWE-786"
    },
    {
      "Description": "<b>CWE-1240: Use of a Cryptographic Primitive with a Risky Implementation</b><br>To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of a Cryptographic Primitive with a Risky Implementation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1240.html",
      "id": "CWE-1240"
    },
    {
      "Description": "<b>CWE-327: Use of a Broken or Risky Cryptographic Algorithm</b><br>The product uses a broken or risky cryptographic algorithm or protocol.",
      "color": "#ff6200",
      "size": 18,
      "label": "Use of a Broken or Risky Cryptographic Algorithm",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/327.html",
      "id": "CWE-327"
    },
    {
      "Description": "<b>CWE-1241: Use of Predictable Algorithm in Random Number Generator</b><br>The device uses an algorithm that is predictable and generates a pseudo-random number.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Predictable Algorithm in Random Number Generator",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1241.html",
      "id": "CWE-1241"
    },
    {
      "Description": "<b>CWE-1242: Inclusion of Undocumented Features or Chicken Bits</b><br>The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inclusion of Undocumented Features or Chicken Bits",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1242.html",
      "id": "CWE-1242"
    },
    {
      "Description": "<b>CWE-1243: Sensitive Non-Volatile Information Not Protected During Debug</b><br>Access to security-sensitive information stored in fuses is not limited during debug.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Sensitive Non-Volatile Information Not Protected During Debug",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1243.html",
      "id": "CWE-1243"
    },
    {
      "Description": "<b>CWE-1263: Improper Physical Access Control</b><br>The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Physical Access Control",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1263.html",
      "id": "CWE-1263"
    },
    {
      "Description": "<b>CWE-1244: Internal Asset Exposed to Unsafe Debug Access Level or State</b><br>The product uses physical debug or test\n        interfaces with support for multiple access levels, but it\n        assigns the wrong debug access level to an internal asset,\n        providing unintended access to the asset from untrusted debug\n        agents.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Internal Asset Exposed to Unsafe Debug Access Level or State",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1244.html",
      "id": "CWE-1244"
    },
    {
      "Description": "<b>CWE-863: Incorrect Authorization</b><br>The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Authorization",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/863.html",
      "id": "CWE-863"
    },
    {
      "Description": "<b>CWE-1245: Improper Finite State Machines (FSMs) in Hardware Logic</b><br>Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Finite State Machines (FSMs) in Hardware Logic",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1245.html",
      "id": "CWE-1245"
    },
    {
      "Description": "<b>CWE-684: Incorrect Provision of Specified Functionality</b><br>The code does not function according to its published specifications, potentially leading to incorrect usage.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Provision of Specified Functionality",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/684.html",
      "id": "CWE-684"
    },
    {
      "Description": "<b>CWE-1246: Improper Write Handling in Limited-write Non-Volatile Memories</b><br>The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Write Handling in Limited-write Non-Volatile Memories",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1246.html",
      "id": "CWE-1246"
    },
    {
      "Description": "<b>CWE-1247: Improper Protection Against Voltage and Clock Glitches</b><br>The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Protection Against Voltage and Clock Glitches",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1247.html",
      "id": "CWE-1247"
    },
    {
      "Description": "<b>CWE-1384: Improper Handling of Physical or Environmental Conditions</b><br>The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Handling of Physical or Environmental Conditions",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1384.html",
      "id": "CWE-1384"
    },
    {
      "Description": "<b>CWE-1248: Semiconductor Defects in Hardware Logic with Security-Sensitive Implications</b><br>The security-sensitive hardware module contains semiconductor defects.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Semiconductor Defects in Hardware Logic with Security-Sensitive Implications",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1248.html",
      "id": "CWE-1248"
    },
    {
      "Description": "<b>CWE-1249: Application-Level Admin Tool with Inconsistent View of Underlying Operating System</b><br>The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Application-Level Admin Tool with Inconsistent View of Underlying Operating System",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1249.html",
      "id": "CWE-1249"
    },
    {
      "Description": "<b>CWE-1250: Improper Preservation of Consistency Between Independent Representations of Shared State</b><br>The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Preservation of Consistency Between Independent Representations of Shared State",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1250.html",
      "id": "CWE-1250"
    },
    {
      "Description": "<b>CWE-125: Out-of-bounds Read</b><br>The product reads data past the end, or before the beginning, of the intended buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Out-of-bounds Read",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/125.html",
      "id": "CWE-125"
    },
    {
      "Description": "<b>CWE-1251: Mirrored Regions with Different Values</b><br>The product's architecture mirrors regions without ensuring that their contents always stay in sync.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Mirrored Regions with Different Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1251.html",
      "id": "CWE-1251"
    },
    {
      "Description": "<b>CWE-1252: CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations</b><br>The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.",
      "color": "#ffbb00",
      "size": 10,
      "label": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1252.html",
      "id": "CWE-1252"
    },
    {
      "Description": "<b>CWE-1253: Incorrect Selection of Fuse Values</b><br>The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Selection of Fuse Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1253.html",
      "id": "CWE-1253"
    },
    {
      "Description": "<b>CWE-1254: Incorrect Comparison Logic Granularity</b><br>The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Comparison Logic Granularity",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1254.html",
      "id": "CWE-1254"
    },
    {
      "Description": "<b>CWE-208: Observable Timing Discrepancy</b><br>Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Observable Timing Discrepancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/208.html",
      "id": "CWE-208"
    },
    {
      "Description": "<b>CWE-1255: Comparison Logic is Vulnerable to Power Side-Channel Attacks</b><br>A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Comparison Logic is Vulnerable to Power Side-Channel Attacks",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1255.html",
      "id": "CWE-1255"
    },
    {
      "Description": "<b>CWE-1300: Improper Protection of Physical Side Channels</b><br>The device does not contain sufficient protection\n\tmechanisms to prevent physical side channels from exposing\n\tsensitive information due to patterns in physically observable\n\tphenomena such as variations in power consumption,\n\telectromagnetic emissions (EME), or acoustic emissions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Protection of Physical Side Channels",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1300.html",
      "id": "CWE-1300"
    },
    {
      "Description": "<b>CWE-1256: Improper Restriction of Software Interfaces to Hardware Features</b><br>The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Software Interfaces to Hardware Features",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1256.html",
      "id": "CWE-1256"
    },
    {
      "Description": "<b>CWE-1257: Improper Access Control Applied to Mirrored or Aliased Memory Regions</b><br>Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.\n\t\t\t",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1257.html",
      "id": "CWE-1257"
    },
    {
      "Description": "<b>CWE-1258: Exposure of Sensitive System Information Due to Uncleared Debug Information</b><br>The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1258.html",
      "id": "CWE-1258"
    },
    {
      "Description": "<b>CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer</b><br>The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/212.html",
      "id": "CWE-212"
    },
    {
      "Description": "<b>CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</b><br>The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
      "color": "#ff6200",
      "size": 18,
      "label": "Exposure of Sensitive Information to an Unauthorized Actor",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/200.html",
      "id": "CWE-200"
    },
    {
      "Description": "<b>CWE-1259: Improper Restriction of Security Token Assignment</b><br>The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Security Token Assignment",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1259.html",
      "id": "CWE-1259"
    },
    {
      "Description": "<b>CWE-1294: Insecure Security Identifier Mechanism</b><br>The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insecure Security Identifier Mechanism",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1294.html",
      "id": "CWE-1294"
    },
    {
      "Description": "<b>CWE-126: Buffer Over-read</b><br>The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Buffer Over-read",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/126.html",
      "id": "CWE-126"
    },
    {
      "Description": "<b>CWE-1260: Improper Handling of Overlap Between Protected Memory Ranges</b><br>The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Overlap Between Protected Memory Ranges",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1260.html",
      "id": "CWE-1260"
    },
    {
      "Description": "<b>CWE-1261: Improper Handling of Single Event Upsets</b><br>The hardware logic does not effectively handle when single-event upsets (SEUs) occur.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Single Event Upsets",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1261.html",
      "id": "CWE-1261"
    },
    {
      "Description": "<b>CWE-1262: Improper Access Control for Register Interface</b><br>The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Access Control for Register Interface",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1262.html",
      "id": "CWE-1262"
    },
    {
      "Description": "<b>CWE-1264: Hardware Logic with Insecure De-Synchronization between Control and Data Channels</b><br>The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1264.html",
      "id": "CWE-1264"
    },
    {
      "Description": "<b>CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls</b><br>During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1265.html",
      "id": "CWE-1265"
    },
    {
      "Description": "<b>CWE-691: Insufficient Control Flow Management</b><br>The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.",
      "color": "#db0054",
      "size": 30,
      "label": "Insufficient Control Flow Management",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/691.html",
      "id": "CWE-691"
    },
    {
      "Description": "<b>CWE-1266: Improper Scrubbing of Sensitive Data from Decommissioned Device</b><br>The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned.  A scrubbing capability could be missing, insufficient, or incorrect.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Scrubbing of Sensitive Data from Decommissioned Device",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1266.html",
      "id": "CWE-1266"
    },
    {
      "Description": "<b>CWE-404: Improper Resource Shutdown or Release</b><br>The product does not release or incorrectly releases a resource before it is made available for re-use.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Resource Shutdown or Release",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/404.html",
      "id": "CWE-404"
    },
    {
      "Description": "<b>CWE-1267: Policy Uses Obsolete Encoding</b><br>The product uses an obsolete encoding mechanism to implement access controls.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Policy Uses Obsolete Encoding",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1267.html",
      "id": "CWE-1267"
    },
    {
      "Description": "<b>CWE-1268: Policy Privileges are not Assigned Consistently Between Control and Data Agents</b><br>The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.\n\t\t\t   ",
      "color": "#ffbb00",
      "size": 10,
      "label": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1268.html",
      "id": "CWE-1268"
    },
    {
      "Description": "<b>CWE-1269: Product Released in Non-Release Configuration</b><br>The product released to market is released in pre-production or manufacturing configuration.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Product Released in Non-Release Configuration",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1269.html",
      "id": "CWE-1269"
    },
    {
      "Description": "<b>CWE-127: Buffer Under-read</b><br>The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Buffer Under-read",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/127.html",
      "id": "CWE-127"
    },
    {
      "Description": "<b>CWE-1270: Generation of Incorrect Security Tokens</b><br>The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Generation of Incorrect Security Tokens",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1270.html",
      "id": "CWE-1270"
    },
    {
      "Description": "<b>CWE-1271: Uninitialized Value on Reset for Registers Holding Security Settings</b><br>Security-critical logic is not set to a known value on reset.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Uninitialized Value on Reset for Registers Holding Security Settings",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1271.html",
      "id": "CWE-1271"
    },
    {
      "Description": "<b>CWE-909: Missing Initialization of Resource</b><br>The product does not initialize a critical resource.",
      "color": "#ff6200",
      "size": 18,
      "label": "Missing Initialization of Resource",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/909.html",
      "id": "CWE-909"
    },
    {
      "Description": "<b>CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition</b><br>The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Sensitive Information Uncleared Before Debug/Power State Transition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1272.html",
      "id": "CWE-1272"
    },
    {
      "Description": "<b>CWE-1273: Device Unlock Credential Sharing</b><br>The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Device Unlock Credential Sharing",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1273.html",
      "id": "CWE-1273"
    },
    {
      "Description": "<b>CWE-1274: Improper Access Control for Volatile Memory Containing Boot Code</b><br>The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Access Control for Volatile Memory Containing Boot Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1274.html",
      "id": "CWE-1274"
    },
    {
      "Description": "<b>CWE-1275: Sensitive Cookie with Improper SameSite Attribute</b><br>The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Sensitive Cookie with Improper SameSite Attribute",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1275.html",
      "id": "CWE-1275"
    },
    {
      "Description": "<b>CWE-923: Improper Restriction of Communication Channel to Intended Endpoints</b><br>The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Restriction of Communication Channel to Intended Endpoints",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/923.html",
      "id": "CWE-923"
    },
    {
      "Description": "<b>CWE-1276: Hardware Child Block Incorrectly Connected to Parent System</b><br>Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Hardware Child Block Incorrectly Connected to Parent System",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1276.html",
      "id": "CWE-1276"
    },
    {
      "Description": "<b>CWE-1277: Firmware Not Updateable</b><br>The product does not provide its\n\t\t\tusers with the ability to update or patch its\n\t\t\tfirmware to address any vulnerabilities or\n\t\t\tweaknesses that may be present.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Firmware Not Updateable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1277.html",
      "id": "CWE-1277"
    },
    {
      "Description": "<b>CWE-1329: Reliance on Component That is Not Updateable</b><br>The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Component That is Not Updateable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1329.html",
      "id": "CWE-1329"
    },
    {
      "Description": "<b>CWE-1278: Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques</b><br>Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1278.html",
      "id": "CWE-1278"
    },
    {
      "Description": "<b>CWE-1279: Cryptographic Operations are run Before Supporting Units are Ready</b><br>Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Cryptographic Operations are run Before Supporting Units are Ready",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1279.html",
      "id": "CWE-1279"
    },
    {
      "Description": "<b>CWE-128: Wrap-around Error</b><br>Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Wrap-around Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/128.html",
      "id": "CWE-128"
    },
    {
      "Description": "<b>CWE-682: Incorrect Calculation</b><br>The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
      "color": "#db0054",
      "size": 30,
      "label": "Incorrect Calculation",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/682.html",
      "id": "CWE-682"
    },
    {
      "Description": "<b>CWE-1280: Access Control Check Implemented After Asset is Accessed</b><br>A product's hardware-based access control check occurs after the asset has been accessed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access Control Check Implemented After Asset is Accessed",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1280.html",
      "id": "CWE-1280"
    },
    {
      "Description": "<b>CWE-1281: Sequence of Processor Instructions Leads to Unexpected Behavior</b><br>Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1281.html",
      "id": "CWE-1281"
    },
    {
      "Description": "<b>CWE-1282: Assumed-Immutable Data is Stored in Writable Memory</b><br>Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Assumed-Immutable Data is Stored in Writable Memory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1282.html",
      "id": "CWE-1282"
    },
    {
      "Description": "<b>CWE-1283: Mutable Attestation or Measurement Reporting Data</b><br>The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Mutable Attestation or Measurement Reporting Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1283.html",
      "id": "CWE-1283"
    },
    {
      "Description": "<b>CWE-1284: Improper Validation of Specified Quantity in Input</b><br>The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Specified Quantity in Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1284.html",
      "id": "CWE-1284"
    },
    {
      "Description": "<b>CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input</b><br>The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Specified Index, Position, or Offset in Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1285.html",
      "id": "CWE-1285"
    },
    {
      "Description": "<b>CWE-1287: Improper Validation of Specified Type of Input</b><br>The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Specified Type of Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1287.html",
      "id": "CWE-1287"
    },
    {
      "Description": "<b>CWE-1288: Improper Validation of Consistency within Input</b><br>The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Consistency within Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1288.html",
      "id": "CWE-1288"
    },
    {
      "Description": "<b>CWE-1289: Improper Validation of Unsafe Equivalence in Input</b><br>The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Unsafe Equivalence in Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1289.html",
      "id": "CWE-1289"
    },
    {
      "Description": "<b>CWE-129: Improper Validation of Array Index</b><br>The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Validation of Array Index",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/129.html",
      "id": "CWE-129"
    },
    {
      "Description": "<b>CWE-1290: Incorrect Decoding of Security Identifiers </b><br>The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Decoding of Security Identifiers ",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1290.html",
      "id": "CWE-1290"
    },
    {
      "Description": "<b>CWE-1291: Public Key Re-Use for Signing both Debug and Production Code</b><br>The same public key is used for signing both debug and production code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Public Key Re-Use for Signing both Debug and Production Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1291.html",
      "id": "CWE-1291"
    },
    {
      "Description": "<b>CWE-1292: Incorrect Conversion of Security Identifiers</b><br>The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Conversion of Security Identifiers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1292.html",
      "id": "CWE-1292"
    },
    {
      "Description": "<b>CWE-1293: Missing Source Correlation of Multiple Independent Data</b><br>The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Source Correlation of Multiple Independent Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1293.html",
      "id": "CWE-1293"
    },
    {
      "Description": "<b>CWE-345: Insufficient Verification of Data Authenticity</b><br>The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Verification of Data Authenticity",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/345.html",
      "id": "CWE-345"
    },
    {
      "Description": "<b>CWE-1295: Debug Messages Revealing Unnecessary Information</b><br>The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Debug Messages Revealing Unnecessary Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1295.html",
      "id": "CWE-1295"
    },
    {
      "Description": "<b>CWE-1296: Incorrect Chaining or Granularity of Debug Components</b><br>The product's debug components contain incorrect chaining or granularity of debug components.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Chaining or Granularity of Debug Components",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1296.html",
      "id": "CWE-1296"
    },
    {
      "Description": "<b>CWE-1297: Unprotected Confidential Information on Device is Accessible by OSAT Vendors</b><br>The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unprotected Confidential Information on Device is Accessible by OSAT Vendors",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1297.html",
      "id": "CWE-1297"
    },
    {
      "Description": "<b>CWE-1298: Hardware Logic Contains Race Conditions</b><br>A race condition in the hardware logic results in undermining security guarantees of the system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Hardware Logic Contains Race Conditions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1298.html",
      "id": "CWE-1298"
    },
    {
      "Description": "<b>CWE-1299: Missing Protection Mechanism for Alternate Hardware Interface</b><br>The lack of protections on alternate paths to access\n                control-protected assets (such as unprotected shadow registers\n                and other external facing unguarded interfaces) allows an\n                attacker to bypass existing protections to the asset that are\n\t\tonly performed against the primary path.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Protection Mechanism for Alternate Hardware Interface",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1299.html",
      "id": "CWE-1299"
    },
    {
      "Description": "<b>CWE-420: Unprotected Alternate Channel</b><br>The product protects a primary channel, but it does not use the same level of protection for an alternate channel.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unprotected Alternate Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/420.html",
      "id": "CWE-420"
    },
    {
      "Description": "<b>CWE-288: Authentication Bypass Using an Alternate Path or Channel</b><br>A product requires authentication, but the product has an alternate path or channel that does not require authentication.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass Using an Alternate Path or Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/288.html",
      "id": "CWE-288"
    },
    {
      "Description": "<b>CWE-13: ASP.NET Misconfiguration: Password in Configuration File</b><br>Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Password in Configuration File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/13.html",
      "id": "CWE-13"
    },
    {
      "Description": "<b>CWE-260: Password in Configuration File</b><br>The product stores a password in a configuration file that might be accessible to actors who do not know the password.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Password in Configuration File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/260.html",
      "id": "CWE-260"
    },
    {
      "Description": "<b>CWE-130: Improper Handling of Length Parameter Inconsistency</b><br>The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Length Parameter Inconsistency",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/130.html",
      "id": "CWE-130"
    },
    {
      "Description": "<b>CWE-240: Improper Handling of Inconsistent Structural Elements</b><br>The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Inconsistent Structural Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/240.html",
      "id": "CWE-240"
    },
    {
      "Description": "<b>CWE-203: Observable Discrepancy</b><br>The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Observable Discrepancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/203.html",
      "id": "CWE-203"
    },
    {
      "Description": "<b>CWE-1301: Insufficient or Incomplete Data Removal within Hardware Component</b><br>The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient or Incomplete Data Removal within Hardware Component",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1301.html",
      "id": "CWE-1301"
    },
    {
      "Description": "<b>CWE-1302: Missing Security Identifier</b><br>The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Security Identifier",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1302.html",
      "id": "CWE-1302"
    },
    {
      "Description": "<b>CWE-1303: Non-Transparent Sharing of Microarchitectural Resources</b><br>Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Non-Transparent Sharing of Microarchitectural Resources",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1303.html",
      "id": "CWE-1303"
    },
    {
      "Description": "<b>CWE-1304: Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation</b><br>The product performs a power save/restore\n            operation, but it does not ensure that the integrity of\n            the configuration state is maintained and/or verified between\n\t    the beginning and ending of the operation.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1304.html",
      "id": "CWE-1304"
    },
    {
      "Description": "<b>CWE-131: Incorrect Calculation of Buffer Size</b><br>The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Calculation of Buffer Size",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/131.html",
      "id": "CWE-131"
    },
    {
      "Description": "<b>CWE-1310: Missing Ability to Patch ROM Code</b><br>Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Ability to Patch ROM Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1310.html",
      "id": "CWE-1310"
    },
    {
      "Description": "<b>CWE-1311: Improper Translation of Security Attributes by Fabric Bridge</b><br>The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Translation of Security Attributes by Fabric Bridge",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1311.html",
      "id": "CWE-1311"
    },
    {
      "Description": "<b>CWE-1312: Missing Protection for Mirrored Regions in On-Chip Fabric Firewall</b><br>The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Protection for Mirrored Regions in On-Chip Fabric Firewall",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1312.html",
      "id": "CWE-1312"
    },
    {
      "Description": "<b>CWE-1313: Hardware Allows Activation of Test or Debug Logic at Runtime</b><br>During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Hardware Allows Activation of Test or Debug Logic at Runtime",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1313.html",
      "id": "CWE-1313"
    },
    {
      "Description": "<b>CWE-1314: Missing Write Protection for Parametric Data Values</b><br>The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Write Protection for Parametric Data Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1314.html",
      "id": "CWE-1314"
    },
    {
      "Description": "<b>CWE-862: Missing Authorization</b><br>The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
      "color": "#ff6200",
      "size": 18,
      "label": "Missing Authorization",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/862.html",
      "id": "CWE-862"
    },
    {
      "Description": "<b>CWE-1315: Improper Setting of Bus Controlling Capability in Fabric End-point</b><br>The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Setting of Bus Controlling Capability in Fabric End-point",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1315.html",
      "id": "CWE-1315"
    },
    {
      "Description": "<b>CWE-1316: Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges</b><br>The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1316.html",
      "id": "CWE-1316"
    },
    {
      "Description": "<b>CWE-1317: Improper Access Control in Fabric Bridge</b><br>The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Access Control in Fabric Bridge",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1317.html",
      "id": "CWE-1317"
    },
    {
      "Description": "<b>CWE-1318: Missing Support for Security Features in On-chip Fabrics or Buses</b><br> On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control. ",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Support for Security Features in On-chip Fabrics or Buses",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1318.html",
      "id": "CWE-1318"
    },
    {
      "Description": "<b>CWE-1319: Improper Protection against Electromagnetic Fault Injection (EM-FI)</b><br>The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Protection against Electromagnetic Fault Injection (EM-FI)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1319.html",
      "id": "CWE-1319"
    },
    {
      "Description": "<b>CWE-132: DEPRECATED: Miscalculated Null Termination</b><br>This entry has been deprecated because it was a duplicate of CWE-170. All content has been transferred to CWE-170.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Miscalculated Null Termination",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/132.html",
      "id": "CWE-132"
    },
    {
      "Description": "<b>CWE-1320: Improper Protection for Outbound Error Messages and Alert Signals</b><br>Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.\n\t\t\t",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Protection for Outbound Error Messages and Alert Signals",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1320.html",
      "id": "CWE-1320"
    },
    {
      "Description": "<b>CWE-1321: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')</b><br>The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1321.html",
      "id": "CWE-1321"
    },
    {
      "Description": "<b>CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes</b><br>The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/915.html",
      "id": "CWE-915"
    },
    {
      "Description": "<b>CWE-913: Improper Control of Dynamically-Managed Code Resources</b><br>The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Control of Dynamically-Managed Code Resources",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/913.html",
      "id": "CWE-913"
    },
    {
      "Description": "<b>CWE-1322: Use of Blocking Code in Single-threaded, Non-blocking Context</b><br>The product uses a non-blocking model that relies on a single threaded process\n\t\t\tfor features such as scalability, but it contains code that can block when it is invoked.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Blocking Code in Single-threaded, Non-blocking Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1322.html",
      "id": "CWE-1322"
    },
    {
      "Description": "<b>CWE-834: Excessive Iteration</b><br>The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
      "color": "#ff6200",
      "size": 18,
      "label": "Excessive Iteration",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/834.html",
      "id": "CWE-834"
    },
    {
      "Description": "<b>CWE-1323: Improper Management of Sensitive Trace Data</b><br>Trace data collected from several sources on the\n                System-on-Chip (SoC) is stored in unprotected locations or\n                transported to untrusted agents.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Management of Sensitive Trace Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1323.html",
      "id": "CWE-1323"
    },
    {
      "Description": "<b>CWE-1324: DEPRECATED: Sensitive Information Accessible by Physical Probing of JTAG Interface</b><br>This entry has been deprecated because it was at a lower level of abstraction than supported by CWE. All relevant content has been integrated into CWE-319.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Sensitive Information Accessible by Physical Probing of JTAG Interface",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1324.html",
      "id": "CWE-1324"
    },
    {
      "Description": "<b>CWE-1325: Improperly Controlled Sequential Memory Allocation</b><br>The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improperly Controlled Sequential Memory Allocation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1325.html",
      "id": "CWE-1325"
    },
    {
      "Description": "<b>CWE-770: Allocation of Resources Without Limits or Throttling</b><br>The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Allocation of Resources Without Limits or Throttling",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/770.html",
      "id": "CWE-770"
    },
    {
      "Description": "<b>CWE-1326: Missing Immutable Root of Trust in Hardware</b><br>A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Immutable Root of Trust in Hardware",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1326.html",
      "id": "CWE-1326"
    },
    {
      "Description": "<b>CWE-1327: Binding to an Unrestricted IP Address</b><br>The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Binding to an Unrestricted IP Address",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1327.html",
      "id": "CWE-1327"
    },
    {
      "Description": "<b>CWE-1328: Security Version Number Mutable to Older Versions</b><br>Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Security Version Number Mutable to Older Versions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1328.html",
      "id": "CWE-1328"
    },
    {
      "Description": "<b>CWE-1330: Remanent Data Readable after Memory Erase</b><br>Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Remanent Data Readable after Memory Erase",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1330.html",
      "id": "CWE-1330"
    },
    {
      "Description": "<b>CWE-1331: Improper Isolation of Shared Resources in Network On Chip (NoC)</b><br>The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1331.html",
      "id": "CWE-1331"
    },
    {
      "Description": "<b>CWE-1332: Improper Handling of Faults that Lead to Instruction Skips</b><br>The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Faults that Lead to Instruction Skips",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1332.html",
      "id": "CWE-1332"
    },
    {
      "Description": "<b>CWE-1333: Inefficient Regular Expression Complexity</b><br>The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inefficient Regular Expression Complexity",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1333.html",
      "id": "CWE-1333"
    },
    {
      "Description": "<b>CWE-407: Inefficient Algorithmic Complexity</b><br>An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
      "color": "#ff6200",
      "size": 18,
      "label": "Inefficient Algorithmic Complexity",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/407.html",
      "id": "CWE-407"
    },
    {
      "Description": "<b>CWE-1334: Unauthorized Error Injection Can Degrade Hardware Redundancy</b><br>An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unauthorized Error Injection Can Degrade Hardware Redundancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1334.html",
      "id": "CWE-1334"
    },
    {
      "Description": "<b>CWE-1335: Incorrect Bitwise Shift of Integer</b><br>An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Bitwise Shift of Integer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1335.html",
      "id": "CWE-1335"
    },
    {
      "Description": "<b>CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine</b><br>The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Special Elements Used in a Template Engine",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1336.html",
      "id": "CWE-1336"
    },
    {
      "Description": "<b>CWE-94: Improper Control of Generation of Code ('Code Injection')</b><br>The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Control of Generation of Code ('Code Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/94.html",
      "id": "CWE-94"
    },
    {
      "Description": "<b>CWE-1338: Improper Protections Against Hardware Overheating</b><br>A hardware device is missing or has inadequate protection features to prevent overheating.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Protections Against Hardware Overheating",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1338.html",
      "id": "CWE-1338"
    },
    {
      "Description": "<b>CWE-1339: Insufficient Precision or Accuracy of a Real Number</b><br>The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Precision or Accuracy of a Real Number",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1339.html",
      "id": "CWE-1339"
    },
    {
      "Description": "<b>CWE-134: Use of Externally-Controlled Format String</b><br>The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Externally-Controlled Format String",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/134.html",
      "id": "CWE-134"
    },
    {
      "Description": "<b>CWE-1341: Multiple Releases of Same Resource or Handle</b><br>The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Multiple Releases of Same Resource or Handle",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1341.html",
      "id": "CWE-1341"
    },
    {
      "Description": "<b>CWE-675: Multiple Operations on Resource in Single-Operation Context</b><br>The product performs the same operation on a resource two or more times, when the operation should only be applied once.",
      "color": "#ff6200",
      "size": 18,
      "label": "Multiple Operations on Resource in Single-Operation Context",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/675.html",
      "id": "CWE-675"
    },
    {
      "Description": "<b>CWE-1342: Information Exposure through Microarchitectural State after Transient Execution</b><br>The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Information Exposure through Microarchitectural State after Transient Execution",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1342.html",
      "id": "CWE-1342"
    },
    {
      "Description": "<b>CWE-135: Incorrect Calculation of Multi-Byte String Length</b><br>The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Calculation of Multi-Byte String Length",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/135.html",
      "id": "CWE-135"
    },
    {
      "Description": "<b>CWE-1351: Improper Handling of Hardware Behavior in Exceptionally Cold Environments</b><br>A hardware device, or the firmware running on it, is\n                missing or has incorrect protection features to maintain\n                goals of security primitives when the device is cooled below\n                standard operating temperatures.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Hardware Behavior in Exceptionally Cold Environments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1351.html",
      "id": "CWE-1351"
    },
    {
      "Description": "<b>CWE-138: Improper Neutralization of Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Neutralization of Special Elements",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/138.html",
      "id": "CWE-138"
    },
    {
      "Description": "<b>CWE-703: Improper Check or Handling of Exceptional Conditions</b><br>The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.",
      "color": "#db0054",
      "size": 30,
      "label": "Improper Check or Handling of Exceptional Conditions",
      "label_class": "node-label-big",
      "type": "CWE",
      "abstraction": "Pillar",
      "url": "https://cwe.mitre.org/data/definitions/703.html",
      "id": "CWE-703"
    },
    {
      "Description": "<b>CWE-1385: Missing Origin Validation in WebSockets</b><br>The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Origin Validation in WebSockets",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/1385.html",
      "id": "CWE-1385"
    },
    {
      "Description": "<b>CWE-346: Origin Validation Error</b><br>The product does not properly verify that the source of data or communication is valid.",
      "color": "#ff6200",
      "size": 18,
      "label": "Origin Validation Error",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/346.html",
      "id": "CWE-346"
    },
    {
      "Description": "<b>CWE-1386: Insecure Operation on Windows Junction / Mount Point</b><br>The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insecure Operation on Windows Junction / Mount Point",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1386.html",
      "id": "CWE-1386"
    },
    {
      "Description": "<b>CWE-59: Improper Link Resolution Before File Access ('Link Following')</b><br>The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Link Resolution Before File Access ('Link Following')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/59.html",
      "id": "CWE-59"
    },
    {
      "Description": "<b>CWE-1389: Incorrect Parsing of Numbers with Different Radices</b><br>The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Parsing of Numbers with Different Radices",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1389.html",
      "id": "CWE-1389"
    },
    {
      "Description": "<b>CWE-704: Incorrect Type Conversion or Cast</b><br>The product does not correctly convert an object, resource, or structure from one type to a different type.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Type Conversion or Cast",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/704.html",
      "id": "CWE-704"
    },
    {
      "Description": "<b>CWE-1390: Weak Authentication</b><br>The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
      "color": "#ff6200",
      "size": 18,
      "label": "Weak Authentication",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1390.html",
      "id": "CWE-1390"
    },
    {
      "Description": "<b>CWE-287: Improper Authentication</b><br>When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Authentication",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/287.html",
      "id": "CWE-287"
    },
    {
      "Description": "<b>CWE-1391: Use of Weak Credentials</b><br>The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.",
      "color": "#ff6200",
      "size": 18,
      "label": "Use of Weak Credentials",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1391.html",
      "id": "CWE-1391"
    },
    {
      "Description": "<b>CWE-1392: Use of Default Credentials</b><br>The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Default Credentials",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1392.html",
      "id": "CWE-1392"
    },
    {
      "Description": "<b>CWE-1393: Use of Default Password</b><br>The product uses default passwords for potentially critical functionality.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Default Password",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1393.html",
      "id": "CWE-1393"
    },
    {
      "Description": "<b>CWE-1394: Use of Default Cryptographic Key</b><br>The product uses a default cryptographic key for potentially critical functionality.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Default Cryptographic Key",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/1394.html",
      "id": "CWE-1394"
    },
    {
      "Description": "<b>CWE-1395: Dependency on Vulnerable Third-Party Component</b><br>The product has a dependency on a third-party component that contains one or more known vulnerabilities.",
      "color": "#ff6200",
      "size": 18,
      "label": "Dependency on Vulnerable Third-Party Component",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/1395.html",
      "id": "CWE-1395"
    },
    {
      "Description": "<b>CWE-14: Compiler Removal of Code to Clear Buffers</b><br>Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka \"dead store removal.\"",
      "color": "#e8e66b",
      "size": 10,
      "label": "Compiler Removal of Code to Clear Buffers",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/14.html",
      "id": "CWE-14"
    },
    {
      "Description": "<b>CWE-733: Compiler Optimization Removal or Modification of Security-critical Code</b><br>The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Compiler Optimization Removal or Modification of Security-critical Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/733.html",
      "id": "CWE-733"
    },
    {
      "Description": "<b>CWE-140: Improper Neutralization of Delimiters</b><br>The product does not neutralize or incorrectly neutralizes delimiters.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/140.html",
      "id": "CWE-140"
    },
    {
      "Description": "<b>CWE-141: Improper Neutralization of Parameter/Argument Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Parameter/Argument Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/141.html",
      "id": "CWE-141"
    },
    {
      "Description": "<b>CWE-142: Improper Neutralization of Value Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Value Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/142.html",
      "id": "CWE-142"
    },
    {
      "Description": "<b>CWE-143: Improper Neutralization of Record Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Record Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/143.html",
      "id": "CWE-143"
    },
    {
      "Description": "<b>CWE-144: Improper Neutralization of Line Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Line Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/144.html",
      "id": "CWE-144"
    },
    {
      "Description": "<b>CWE-145: Improper Neutralization of Section Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Section Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/145.html",
      "id": "CWE-145"
    },
    {
      "Description": "<b>CWE-146: Improper Neutralization of Expression/Command Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Expression/Command Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/146.html",
      "id": "CWE-146"
    },
    {
      "Description": "<b>CWE-147: Improper Neutralization of Input Terminators</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Input Terminators",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/147.html",
      "id": "CWE-147"
    },
    {
      "Description": "<b>CWE-148: Improper Neutralization of Input Leaders</b><br>The product does not properly handle when a leading character or sequence (\"leader\") is missing or malformed, or if multiple leaders are used when only one should be allowed.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Input Leaders",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/148.html",
      "id": "CWE-148"
    },
    {
      "Description": "<b>CWE-149: Improper Neutralization of Quoting Syntax</b><br>Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Quoting Syntax",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/149.html",
      "id": "CWE-149"
    },
    {
      "Description": "<b>CWE-15: External Control of System or Configuration Setting</b><br>One or more system settings or configuration elements can be externally controlled by a user.",
      "color": "#ffbb00",
      "size": 10,
      "label": "External Control of System or Configuration Setting",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/15.html",
      "id": "CWE-15"
    },
    {
      "Description": "<b>CWE-642: External Control of Critical State Data</b><br>The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.",
      "color": "#ff6200",
      "size": 18,
      "label": "External Control of Critical State Data",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/642.html",
      "id": "CWE-642"
    },
    {
      "Description": "<b>CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Escape, Meta, or Control Sequences",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/150.html",
      "id": "CWE-150"
    },
    {
      "Description": "<b>CWE-151: Improper Neutralization of Comment Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Comment Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/151.html",
      "id": "CWE-151"
    },
    {
      "Description": "<b>CWE-152: Improper Neutralization of Macro Symbols</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Macro Symbols",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/152.html",
      "id": "CWE-152"
    },
    {
      "Description": "<b>CWE-153: Improper Neutralization of Substitution Characters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Substitution Characters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/153.html",
      "id": "CWE-153"
    },
    {
      "Description": "<b>CWE-154: Improper Neutralization of Variable Name Delimiters</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Variable Name Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/154.html",
      "id": "CWE-154"
    },
    {
      "Description": "<b>CWE-155: Improper Neutralization of Wildcards or Matching Symbols</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Wildcards or Matching Symbols",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/155.html",
      "id": "CWE-155"
    },
    {
      "Description": "<b>CWE-156: Improper Neutralization of Whitespace</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Whitespace",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/156.html",
      "id": "CWE-156"
    },
    {
      "Description": "<b>CWE-157: Failure to Sanitize Paired Delimiters</b><br>The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Failure to Sanitize Paired Delimiters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/157.html",
      "id": "CWE-157"
    },
    {
      "Description": "<b>CWE-158: Improper Neutralization of Null Byte or NUL Character</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Null Byte or NUL Character",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/158.html",
      "id": "CWE-158"
    },
    {
      "Description": "<b>CWE-159: Improper Handling of Invalid Use of Special Elements</b><br>The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Handling of Invalid Use of Special Elements",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/159.html",
      "id": "CWE-159"
    },
    {
      "Description": "<b>CWE-160: Improper Neutralization of Leading Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Leading Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/160.html",
      "id": "CWE-160"
    },
    {
      "Description": "<b>CWE-161: Improper Neutralization of Multiple Leading Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Multiple Leading Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/161.html",
      "id": "CWE-161"
    },
    {
      "Description": "<b>CWE-162: Improper Neutralization of Trailing Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Trailing Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/162.html",
      "id": "CWE-162"
    },
    {
      "Description": "<b>CWE-163: Improper Neutralization of Multiple Trailing Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Multiple Trailing Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/163.html",
      "id": "CWE-163"
    },
    {
      "Description": "<b>CWE-164: Improper Neutralization of Internal Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Internal Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/164.html",
      "id": "CWE-164"
    },
    {
      "Description": "<b>CWE-165: Improper Neutralization of Multiple Internal Special Elements</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Multiple Internal Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/165.html",
      "id": "CWE-165"
    },
    {
      "Description": "<b>CWE-166: Improper Handling of Missing Special Element</b><br>The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Missing Special Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/166.html",
      "id": "CWE-166"
    },
    {
      "Description": "<b>CWE-167: Improper Handling of Additional Special Element</b><br>The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Additional Special Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/167.html",
      "id": "CWE-167"
    },
    {
      "Description": "<b>CWE-168: Improper Handling of Inconsistent Special Elements</b><br>The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Inconsistent Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/168.html",
      "id": "CWE-168"
    },
    {
      "Description": "<b>CWE-170: Improper Null Termination</b><br>The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Null Termination",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/170.html",
      "id": "CWE-170"
    },
    {
      "Description": "<b>CWE-172: Encoding Error</b><br>The product does not properly encode or decode the data, resulting in unexpected values.",
      "color": "#ff6200",
      "size": 18,
      "label": "Encoding Error",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/172.html",
      "id": "CWE-172"
    },
    {
      "Description": "<b>CWE-173: Improper Handling of Alternate Encoding</b><br>The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Alternate Encoding",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/173.html",
      "id": "CWE-173"
    },
    {
      "Description": "<b>CWE-174: Double Decoding of the Same Data</b><br>The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Double Decoding of the Same Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/174.html",
      "id": "CWE-174"
    },
    {
      "Description": "<b>CWE-175: Improper Handling of Mixed Encoding</b><br>The product does not properly handle when the same input uses several different (mixed) encodings.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Mixed Encoding",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/175.html",
      "id": "CWE-175"
    },
    {
      "Description": "<b>CWE-176: Improper Handling of Unicode Encoding</b><br>The product does not properly handle when an input contains Unicode encoding.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Unicode Encoding",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/176.html",
      "id": "CWE-176"
    },
    {
      "Description": "<b>CWE-177: Improper Handling of URL Encoding (Hex Encoding)</b><br>The product does not properly handle when all or part of an input has been URL encoded.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of URL Encoding (Hex Encoding)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/177.html",
      "id": "CWE-177"
    },
    {
      "Description": "<b>CWE-178: Improper Handling of Case Sensitivity</b><br>The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Case Sensitivity",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/178.html",
      "id": "CWE-178"
    },
    {
      "Description": "<b>CWE-706: Use of Incorrectly-Resolved Name or Reference</b><br>The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",
      "color": "#ff6200",
      "size": 18,
      "label": "Use of Incorrectly-Resolved Name or Reference",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/706.html",
      "id": "CWE-706"
    },
    {
      "Description": "<b>CWE-179: Incorrect Behavior Order: Early Validation</b><br>The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Behavior Order: Early Validation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/179.html",
      "id": "CWE-179"
    },
    {
      "Description": "<b>CWE-180: Incorrect Behavior Order: Validate Before Canonicalize</b><br>The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incorrect Behavior Order: Validate Before Canonicalize",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/180.html",
      "id": "CWE-180"
    },
    {
      "Description": "<b>CWE-181: Incorrect Behavior Order: Validate Before Filter</b><br>The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incorrect Behavior Order: Validate Before Filter",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/181.html",
      "id": "CWE-181"
    },
    {
      "Description": "<b>CWE-182: Collapse of Data into Unsafe Value</b><br>The product filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Collapse of Data into Unsafe Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/182.html",
      "id": "CWE-182"
    },
    {
      "Description": "<b>CWE-183: Permissive List of Allowed Inputs</b><br>The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Permissive List of Allowed Inputs",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/183.html",
      "id": "CWE-183"
    },
    {
      "Description": "<b>CWE-184: Incomplete List of Disallowed Inputs</b><br>The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete, leading to resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete List of Disallowed Inputs",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/184.html",
      "id": "CWE-184"
    },
    {
      "Description": "<b>CWE-185: Incorrect Regular Expression</b><br>The product specifies a regular expression in a way that causes data to be improperly matched or compared.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Regular Expression",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/185.html",
      "id": "CWE-185"
    },
    {
      "Description": "<b>CWE-186: Overly Restrictive Regular Expression</b><br>A regular expression is overly restrictive, which prevents dangerous values from being detected.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Overly Restrictive Regular Expression",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/186.html",
      "id": "CWE-186"
    },
    {
      "Description": "<b>CWE-187: Partial String Comparison</b><br>The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Partial String Comparison",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/187.html",
      "id": "CWE-187"
    },
    {
      "Description": "<b>CWE-188: Reliance on Data/Memory Layout</b><br>The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Data/Memory Layout",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/188.html",
      "id": "CWE-188"
    },
    {
      "Description": "<b>CWE-190: Integer Overflow or Wraparound</b><br>The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Integer Overflow or Wraparound",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/190.html",
      "id": "CWE-190"
    },
    {
      "Description": "<b>CWE-191: Integer Underflow (Wrap or Wraparound)</b><br>The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Integer Underflow (Wrap or Wraparound)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/191.html",
      "id": "CWE-191"
    },
    {
      "Description": "<b>CWE-192: Integer Coercion Error</b><br>Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Integer Coercion Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/192.html",
      "id": "CWE-192"
    },
    {
      "Description": "<b>CWE-681: Incorrect Conversion between Numeric Types</b><br>When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Conversion between Numeric Types",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/681.html",
      "id": "CWE-681"
    },
    {
      "Description": "<b>CWE-193: Off-by-one Error</b><br>A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Off-by-one Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/193.html",
      "id": "CWE-193"
    },
    {
      "Description": "<b>CWE-194: Unexpected Sign Extension</b><br>The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Unexpected Sign Extension",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/194.html",
      "id": "CWE-194"
    },
    {
      "Description": "<b>CWE-195: Signed to Unsigned Conversion Error</b><br>The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Signed to Unsigned Conversion Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/195.html",
      "id": "CWE-195"
    },
    {
      "Description": "<b>CWE-196: Unsigned to Signed Conversion Error</b><br>The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Unsigned to Signed Conversion Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/196.html",
      "id": "CWE-196"
    },
    {
      "Description": "<b>CWE-197: Numeric Truncation Error</b><br>Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Numeric Truncation Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/197.html",
      "id": "CWE-197"
    },
    {
      "Description": "<b>CWE-198: Use of Incorrect Byte Ordering</b><br>The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Incorrect Byte Ordering",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/198.html",
      "id": "CWE-198"
    },
    {
      "Description": "<b>CWE-201: Insertion of Sensitive Information Into Sent Data</b><br>The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insertion of Sensitive Information Into Sent Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/201.html",
      "id": "CWE-201"
    },
    {
      "Description": "<b>CWE-202: Exposure of Sensitive Information Through Data Queries</b><br>When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Sensitive Information Through Data Queries",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/202.html",
      "id": "CWE-202"
    },
    {
      "Description": "<b>CWE-204: Observable Response Discrepancy</b><br>The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Observable Response Discrepancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/204.html",
      "id": "CWE-204"
    },
    {
      "Description": "<b>CWE-205: Observable Behavioral Discrepancy</b><br>The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Observable Behavioral Discrepancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/205.html",
      "id": "CWE-205"
    },
    {
      "Description": "<b>CWE-206: Observable Internal Behavioral Discrepancy</b><br>The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Observable Internal Behavioral Discrepancy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/206.html",
      "id": "CWE-206"
    },
    {
      "Description": "<b>CWE-207: Observable Behavioral Discrepancy With Equivalent Products</b><br>The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Observable Behavioral Discrepancy With Equivalent Products",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/207.html",
      "id": "CWE-207"
    },
    {
      "Description": "<b>CWE-209: Generation of Error Message Containing Sensitive Information</b><br>The product generates an error message that includes sensitive information about its environment, users, or associated data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Generation of Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/209.html",
      "id": "CWE-209"
    },
    {
      "Description": "<b>CWE-755: Improper Handling of Exceptional Conditions</b><br>The product does not handle or incorrectly handles an exceptional condition.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Handling of Exceptional Conditions",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/755.html",
      "id": "CWE-755"
    },
    {
      "Description": "<b>CWE-210: Self-generated Error Message Containing Sensitive Information</b><br>The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Self-generated Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/210.html",
      "id": "CWE-210"
    },
    {
      "Description": "<b>CWE-211: Externally-Generated Error Message Containing Sensitive Information</b><br>The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Externally-Generated Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/211.html",
      "id": "CWE-211"
    },
    {
      "Description": "<b>CWE-669: Incorrect Resource Transfer Between Spheres</b><br>The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Resource Transfer Between Spheres",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/669.html",
      "id": "CWE-669"
    },
    {
      "Description": "<b>CWE-213: Exposure of Sensitive Information Due to Incompatible Policies</b><br>The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Sensitive Information Due to Incompatible Policies",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/213.html",
      "id": "CWE-213"
    },
    {
      "Description": "<b>CWE-214: Invocation of Process Using Visible Sensitive Information</b><br>A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Invocation of Process Using Visible Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/214.html",
      "id": "CWE-214"
    },
    {
      "Description": "<b>CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere</b><br>The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/497.html",
      "id": "CWE-497"
    },
    {
      "Description": "<b>CWE-215: Insertion of Sensitive Information Into Debugging Code</b><br>The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insertion of Sensitive Information Into Debugging Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/215.html",
      "id": "CWE-215"
    },
    {
      "Description": "<b>CWE-216: DEPRECATED: Containment Errors (Container Errors)</b><br>This entry has been deprecated, as it was not effective as a weakness and was structured more like a category. In addition, the name is inappropriate, since the \"container\" term is widely understood by developers in different ways than originally intended by PLOVER, the original source for this entry.",
      "color": "#ff6200",
      "size": 18,
      "label": "DEPRECATED: Containment Errors (Container Errors)",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/216.html",
      "id": "CWE-216"
    },
    {
      "Description": "<b>CWE-217: DEPRECATED: Failure to Protect Stored Data from Modification</b><br>This entry has been deprecated because it incorporated and confused multiple weaknesses. The issues formerly covered in this entry can be found at CWE-766 and CWE-767.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Failure to Protect Stored Data from Modification",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/217.html",
      "id": "CWE-217"
    },
    {
      "Description": "<b>CWE-218: DEPRECATED: Failure to provide confidentiality for stored data</b><br>This weakness has been deprecated because it was a duplicate of CWE-493. All content has been transferred to CWE-493.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Failure to provide confidentiality for stored data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/218.html",
      "id": "CWE-218"
    },
    {
      "Description": "<b>CWE-219: Storage of File with Sensitive Data Under Web Root</b><br>The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Storage of File with Sensitive Data Under Web Root",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/219.html",
      "id": "CWE-219"
    },
    {
      "Description": "<b>CWE-552: Files or Directories Accessible to External Parties</b><br>The product makes files or directories accessible to unauthorized actors, even though they should not be.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Files or Directories Accessible to External Parties",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/552.html",
      "id": "CWE-552"
    },
    {
      "Description": "<b>CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</b><br>The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/22.html",
      "id": "CWE-22"
    },
    {
      "Description": "<b>CWE-220: Storage of File With Sensitive Data Under FTP Root</b><br>The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Storage of File With Sensitive Data Under FTP Root",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/220.html",
      "id": "CWE-220"
    },
    {
      "Description": "<b>CWE-221: Information Loss or Omission</b><br>The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.",
      "color": "#ff6200",
      "size": 18,
      "label": "Information Loss or Omission",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/221.html",
      "id": "CWE-221"
    },
    {
      "Description": "<b>CWE-222: Truncation of Security-relevant Information</b><br>The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Truncation of Security-relevant Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/222.html",
      "id": "CWE-222"
    },
    {
      "Description": "<b>CWE-223: Omission of Security-relevant Information</b><br>The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Omission of Security-relevant Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/223.html",
      "id": "CWE-223"
    },
    {
      "Description": "<b>CWE-224: Obscured Security-relevant Information by Alternate Name</b><br>The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Obscured Security-relevant Information by Alternate Name",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/224.html",
      "id": "CWE-224"
    },
    {
      "Description": "<b>CWE-225: DEPRECATED: General Information Management Problems</b><br>This weakness can be found at CWE-199.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: General Information Management Problems",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/225.html",
      "id": "CWE-225"
    },
    {
      "Description": "<b>CWE-459: Incomplete Cleanup</b><br>The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Cleanup",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/459.html",
      "id": "CWE-459"
    },
    {
      "Description": "<b>CWE-228: Improper Handling of Syntactically Invalid Structure</b><br>The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Handling of Syntactically Invalid Structure",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/228.html",
      "id": "CWE-228"
    },
    {
      "Description": "<b>CWE-229: Improper Handling of Values</b><br>The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/229.html",
      "id": "CWE-229"
    },
    {
      "Description": "<b>CWE-23: Relative Path Traversal</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Relative Path Traversal",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/23.html",
      "id": "CWE-23"
    },
    {
      "Description": "<b>CWE-230: Improper Handling of Missing Values</b><br>The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Missing Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/230.html",
      "id": "CWE-230"
    },
    {
      "Description": "<b>CWE-231: Improper Handling of Extra Values</b><br>The product does not handle or incorrectly handles when more values are provided than expected.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Extra Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/231.html",
      "id": "CWE-231"
    },
    {
      "Description": "<b>CWE-232: Improper Handling of Undefined Values</b><br>The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Undefined Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/232.html",
      "id": "CWE-232"
    },
    {
      "Description": "<b>CWE-233: Improper Handling of Parameters</b><br>The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/233.html",
      "id": "CWE-233"
    },
    {
      "Description": "<b>CWE-234: Failure to Handle Missing Parameter</b><br>If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Failure to Handle Missing Parameter",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/234.html",
      "id": "CWE-234"
    },
    {
      "Description": "<b>CWE-235: Improper Handling of Extra Parameters</b><br>The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Extra Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/235.html",
      "id": "CWE-235"
    },
    {
      "Description": "<b>CWE-236: Improper Handling of Undefined Parameters</b><br>The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Undefined Parameters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/236.html",
      "id": "CWE-236"
    },
    {
      "Description": "<b>CWE-237: Improper Handling of Structural Elements</b><br>The product does not handle or incorrectly handles inputs that are related to complex structures.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Structural Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/237.html",
      "id": "CWE-237"
    },
    {
      "Description": "<b>CWE-238: Improper Handling of Incomplete Structural Elements</b><br>The product does not handle or incorrectly handles when a particular structural element is not completely specified.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Incomplete Structural Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/238.html",
      "id": "CWE-238"
    },
    {
      "Description": "<b>CWE-239: Failure to Handle Incomplete Element</b><br>The product does not properly handle when a particular element is not completely specified.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Failure to Handle Incomplete Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/239.html",
      "id": "CWE-239"
    },
    {
      "Description": "<b>CWE-24: Path Traversal: '../filedir'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '../filedir'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/24.html",
      "id": "CWE-24"
    },
    {
      "Description": "<b>CWE-241: Improper Handling of Unexpected Data Type</b><br>The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z).",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Unexpected Data Type",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/241.html",
      "id": "CWE-241"
    },
    {
      "Description": "<b>CWE-242: Use of Inherently Dangerous Function</b><br>The product calls a function that can never be guaranteed to work safely.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Inherently Dangerous Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/242.html",
      "id": "CWE-242"
    },
    {
      "Description": "<b>CWE-243: Creation of chroot Jail Without Changing Working Directory</b><br>The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Creation of chroot Jail Without Changing Working Directory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/243.html",
      "id": "CWE-243"
    },
    {
      "Description": "<b>CWE-244: Improper Clearing of Heap Memory Before Release ('Heap Inspection')</b><br>Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/244.html",
      "id": "CWE-244"
    },
    {
      "Description": "<b>CWE-245: J2EE Bad Practices: Direct Management of Connections</b><br>The J2EE application directly manages connections, instead of using the container's connection management facilities.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Bad Practices: Direct Management of Connections",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/245.html",
      "id": "CWE-245"
    },
    {
      "Description": "<b>CWE-246: J2EE Bad Practices: Direct Use of Sockets</b><br>The J2EE application directly uses sockets instead of using framework method calls.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Bad Practices: Direct Use of Sockets",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/246.html",
      "id": "CWE-246"
    },
    {
      "Description": "<b>CWE-247: DEPRECATED: Reliance on DNS Lookups in a Security Decision</b><br>This entry has been deprecated because it was a duplicate of CWE-350. All content has been transferred to CWE-350.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Reliance on DNS Lookups in a Security Decision",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/247.html",
      "id": "CWE-247"
    },
    {
      "Description": "<b>CWE-248: Uncaught Exception</b><br>An exception is thrown from a function, but it is not caught.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Uncaught Exception",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/248.html",
      "id": "CWE-248"
    },
    {
      "Description": "<b>CWE-705: Incorrect Control Flow Scoping</b><br>The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect Control Flow Scoping",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/705.html",
      "id": "CWE-705"
    },
    {
      "Description": "<b>CWE-249: DEPRECATED: Often Misused: Path Manipulation</b><br>This entry has been deprecated because of name\n\tconfusion and an accidental combination of multiple\n\tweaknesses. Most of its content has been transferred to\n\tCWE-785.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Often Misused: Path Manipulation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/249.html",
      "id": "CWE-249"
    },
    {
      "Description": "<b>CWE-25: Path Traversal: '/../filedir'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/../\" sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '/../filedir'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/25.html",
      "id": "CWE-25"
    },
    {
      "Description": "<b>CWE-250: Execution with Unnecessary Privileges</b><br>The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Execution with Unnecessary Privileges",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/250.html",
      "id": "CWE-250"
    },
    {
      "Description": "<b>CWE-269: Improper Privilege Management</b><br>The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Privilege Management",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/269.html",
      "id": "CWE-269"
    },
    {
      "Description": "<b>CWE-252: Unchecked Return Value</b><br>The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unchecked Return Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/252.html",
      "id": "CWE-252"
    },
    {
      "Description": "<b>CWE-754: Improper Check for Unusual or Exceptional Conditions</b><br>The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Check for Unusual or Exceptional Conditions",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/754.html",
      "id": "CWE-754"
    },
    {
      "Description": "<b>CWE-253: Incorrect Check of Function Return Value</b><br>The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Check of Function Return Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/253.html",
      "id": "CWE-253"
    },
    {
      "Description": "<b>CWE-256: Plaintext Storage of a Password</b><br>Storing a password in plaintext may result in a system compromise.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Plaintext Storage of a Password",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/256.html",
      "id": "CWE-256"
    },
    {
      "Description": "<b>CWE-522: Insufficiently Protected Credentials</b><br>The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficiently Protected Credentials",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/522.html",
      "id": "CWE-522"
    },
    {
      "Description": "<b>CWE-257: Storing Passwords in a Recoverable Format</b><br>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Storing Passwords in a Recoverable Format",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/257.html",
      "id": "CWE-257"
    },
    {
      "Description": "<b>CWE-258: Empty Password in Configuration File</b><br>Using an empty string as a password is insecure.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Empty Password in Configuration File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/258.html",
      "id": "CWE-258"
    },
    {
      "Description": "<b>CWE-521: Weak Password Requirements</b><br>The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Weak Password Requirements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/521.html",
      "id": "CWE-521"
    },
    {
      "Description": "<b>CWE-259: Use of Hard-coded Password</b><br>The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Hard-coded Password",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/259.html",
      "id": "CWE-259"
    },
    {
      "Description": "<b>CWE-798: Use of Hard-coded Credentials</b><br>The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Hard-coded Credentials",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/798.html",
      "id": "CWE-798"
    },
    {
      "Description": "<b>CWE-26: Path Traversal: '/dir/../filename'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/dir/../filename\" sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '/dir/../filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/26.html",
      "id": "CWE-26"
    },
    {
      "Description": "<b>CWE-261: Weak Encoding for Password</b><br>Obscuring a password with a trivial encoding does not protect the password.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Weak Encoding for Password",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/261.html",
      "id": "CWE-261"
    },
    {
      "Description": "<b>CWE-262: Not Using Password Aging</b><br>The product does not have a mechanism in place for managing password aging.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Not Using Password Aging",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/262.html",
      "id": "CWE-262"
    },
    {
      "Description": "<b>CWE-263: Password Aging with Long Expiration</b><br>The product supports password aging, but the expiration period is too long.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Password Aging with Long Expiration",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/263.html",
      "id": "CWE-263"
    },
    {
      "Description": "<b>CWE-267: Privilege Defined With Unsafe Actions</b><br>A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Privilege Defined With Unsafe Actions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/267.html",
      "id": "CWE-267"
    },
    {
      "Description": "<b>CWE-268: Privilege Chaining</b><br>Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Privilege Chaining",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/268.html",
      "id": "CWE-268"
    },
    {
      "Description": "<b>CWE-27: Path Traversal: 'dir/../../filename'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: 'dir/../../filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/27.html",
      "id": "CWE-27"
    },
    {
      "Description": "<b>CWE-270: Privilege Context Switching Error</b><br>The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Privilege Context Switching Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/270.html",
      "id": "CWE-270"
    },
    {
      "Description": "<b>CWE-271: Privilege Dropping / Lowering Errors</b><br>The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.",
      "color": "#ff6200",
      "size": 18,
      "label": "Privilege Dropping / Lowering Errors",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/271.html",
      "id": "CWE-271"
    },
    {
      "Description": "<b>CWE-272: Least Privilege Violation</b><br>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Least Privilege Violation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/272.html",
      "id": "CWE-272"
    },
    {
      "Description": "<b>CWE-273: Improper Check for Dropped Privileges</b><br>The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Check for Dropped Privileges",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/273.html",
      "id": "CWE-273"
    },
    {
      "Description": "<b>CWE-274: Improper Handling of Insufficient Privileges</b><br>The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Insufficient Privileges",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/274.html",
      "id": "CWE-274"
    },
    {
      "Description": "<b>CWE-276: Incorrect Default Permissions</b><br>During installation, installed file permissions are set to allow anyone to modify those files.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Default Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/276.html",
      "id": "CWE-276"
    },
    {
      "Description": "<b>CWE-277: Insecure Inherited Permissions</b><br>A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Insecure Inherited Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/277.html",
      "id": "CWE-277"
    },
    {
      "Description": "<b>CWE-278: Insecure Preserved Inherited Permissions</b><br>A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Insecure Preserved Inherited Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/278.html",
      "id": "CWE-278"
    },
    {
      "Description": "<b>CWE-279: Incorrect Execution-Assigned Permissions</b><br>While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incorrect Execution-Assigned Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/279.html",
      "id": "CWE-279"
    },
    {
      "Description": "<b>CWE-28: Path Traversal: '..\\filedir'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '..\\filedir'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/28.html",
      "id": "CWE-28"
    },
    {
      "Description": "<b>CWE-280: Improper Handling of Insufficient Permissions or Privileges </b><br>The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Insufficient Permissions or Privileges ",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/280.html",
      "id": "CWE-280"
    },
    {
      "Description": "<b>CWE-281: Improper Preservation of Permissions</b><br>The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Preservation of Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/281.html",
      "id": "CWE-281"
    },
    {
      "Description": "<b>CWE-282: Improper Ownership Management</b><br>The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Ownership Management",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/282.html",
      "id": "CWE-282"
    },
    {
      "Description": "<b>CWE-283: Unverified Ownership</b><br>The product does not properly verify that a critical resource is owned by the proper entity.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unverified Ownership",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/283.html",
      "id": "CWE-283"
    },
    {
      "Description": "<b>CWE-286: Incorrect User Management</b><br>The product does not properly manage a user within its environment.",
      "color": "#ff6200",
      "size": 18,
      "label": "Incorrect User Management",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/286.html",
      "id": "CWE-286"
    },
    {
      "Description": "<b>CWE-306: Missing Authentication for Critical Function</b><br>The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Authentication for Critical Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/306.html",
      "id": "CWE-306"
    },
    {
      "Description": "<b>CWE-289: Authentication Bypass by Alternate Name</b><br>The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass by Alternate Name",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/289.html",
      "id": "CWE-289"
    },
    {
      "Description": "<b>CWE-29: Path Traversal: '\\..\\filename'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '\\..\\filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/29.html",
      "id": "CWE-29"
    },
    {
      "Description": "<b>CWE-290: Authentication Bypass by Spoofing</b><br>This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass by Spoofing",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/290.html",
      "id": "CWE-290"
    },
    {
      "Description": "<b>CWE-291: Reliance on IP Address for Authentication</b><br>The product uses an IP address for authentication.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Reliance on IP Address for Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/291.html",
      "id": "CWE-291"
    },
    {
      "Description": "<b>CWE-471: Modification of Assumed-Immutable Data (MAID)</b><br>The product does not properly protect an assumed-immutable element from being modified by an attacker.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Modification of Assumed-Immutable Data (MAID)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/471.html",
      "id": "CWE-471"
    },
    {
      "Description": "<b>CWE-292: DEPRECATED: Trusting Self-reported DNS Name</b><br>This entry has been deprecated because it was a duplicate of CWE-350. All content has been transferred to CWE-350.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Trusting Self-reported DNS Name",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/292.html",
      "id": "CWE-292"
    },
    {
      "Description": "<b>CWE-293: Using Referer Field for Authentication</b><br>The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Using Referer Field for Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/293.html",
      "id": "CWE-293"
    },
    {
      "Description": "<b>CWE-294: Authentication Bypass by Capture-replay</b><br>A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass by Capture-replay",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/294.html",
      "id": "CWE-294"
    },
    {
      "Description": "<b>CWE-295: Improper Certificate Validation</b><br>The product does not validate, or incorrectly validates, a certificate.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Certificate Validation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/295.html",
      "id": "CWE-295"
    },
    {
      "Description": "<b>CWE-296: Improper Following of a Certificate's Chain of Trust</b><br>The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Following of a Certificate's Chain of Trust",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/296.html",
      "id": "CWE-296"
    },
    {
      "Description": "<b>CWE-297: Improper Validation of Certificate with Host Mismatch</b><br>The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Validation of Certificate with Host Mismatch",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/297.html",
      "id": "CWE-297"
    },
    {
      "Description": "<b>CWE-298: Improper Validation of Certificate Expiration</b><br>A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Validation of Certificate Expiration",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/298.html",
      "id": "CWE-298"
    },
    {
      "Description": "<b>CWE-672: Operation on a Resource after Expiration or Release</b><br>The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",
      "color": "#ff6200",
      "size": 18,
      "label": "Operation on a Resource after Expiration or Release",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/672.html",
      "id": "CWE-672"
    },
    {
      "Description": "<b>CWE-299: Improper Check for Certificate Revocation</b><br>The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Check for Certificate Revocation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/299.html",
      "id": "CWE-299"
    },
    {
      "Description": "<b>CWE-30: Path Traversal: '\\dir\\..\\filename'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '\\dir\\..\\filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/30.html",
      "id": "CWE-30"
    },
    {
      "Description": "<b>CWE-300: Channel Accessible by Non-Endpoint</b><br>The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",
      "color": "#ff6200",
      "size": 18,
      "label": "Channel Accessible by Non-Endpoint",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/300.html",
      "id": "CWE-300"
    },
    {
      "Description": "<b>CWE-301: Reflection Attack in an Authentication Protocol</b><br>Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reflection Attack in an Authentication Protocol",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/301.html",
      "id": "CWE-301"
    },
    {
      "Description": "<b>CWE-302: Authentication Bypass by Assumed-Immutable Data</b><br>The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass by Assumed-Immutable Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/302.html",
      "id": "CWE-302"
    },
    {
      "Description": "<b>CWE-807: Reliance on Untrusted Inputs in a Security Decision</b><br>The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Untrusted Inputs in a Security Decision",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/807.html",
      "id": "CWE-807"
    },
    {
      "Description": "<b>CWE-303: Incorrect Implementation of Authentication Algorithm</b><br>The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Implementation of Authentication Algorithm",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/303.html",
      "id": "CWE-303"
    },
    {
      "Description": "<b>CWE-304: Missing Critical Step in Authentication</b><br>The product implements an authentication technique, but it skips a step that weakens the technique.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Critical Step in Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/304.html",
      "id": "CWE-304"
    },
    {
      "Description": "<b>CWE-305: Authentication Bypass by Primary Weakness</b><br>The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authentication Bypass by Primary Weakness",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/305.html",
      "id": "CWE-305"
    },
    {
      "Description": "<b>CWE-307: Improper Restriction of Excessive Authentication Attempts</b><br>The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Excessive Authentication Attempts",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/307.html",
      "id": "CWE-307"
    },
    {
      "Description": "<b>CWE-799: Improper Control of Interaction Frequency</b><br>The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Control of Interaction Frequency",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/799.html",
      "id": "CWE-799"
    },
    {
      "Description": "<b>CWE-308: Use of Single-factor Authentication</b><br>The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Single-factor Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/308.html",
      "id": "CWE-308"
    },
    {
      "Description": "<b>CWE-654: Reliance on a Single Factor in a Security Decision</b><br>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on a Single Factor in a Security Decision",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/654.html",
      "id": "CWE-654"
    },
    {
      "Description": "<b>CWE-309: Use of Password System for Primary Authentication</b><br>The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Password System for Primary Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/309.html",
      "id": "CWE-309"
    },
    {
      "Description": "<b>CWE-31: Path Traversal: 'dir\\..\\..\\filename'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: 'dir\\..\\..\\filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/31.html",
      "id": "CWE-31"
    },
    {
      "Description": "<b>CWE-311: Missing Encryption of Sensitive Data</b><br>The product does not encrypt sensitive or critical information before storage or transmission.",
      "color": "#ff6200",
      "size": 18,
      "label": "Missing Encryption of Sensitive Data",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/311.html",
      "id": "CWE-311"
    },
    {
      "Description": "<b>CWE-312: Cleartext Storage of Sensitive Information</b><br>The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/312.html",
      "id": "CWE-312"
    },
    {
      "Description": "<b>CWE-922: Insecure Storage of Sensitive Information</b><br>The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insecure Storage of Sensitive Information",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/922.html",
      "id": "CWE-922"
    },
    {
      "Description": "<b>CWE-313: Cleartext Storage in a File or on Disk</b><br>The product stores sensitive information in cleartext in a file, or on disk.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage in a File or on Disk",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/313.html",
      "id": "CWE-313"
    },
    {
      "Description": "<b>CWE-314: Cleartext Storage in the Registry</b><br>The product stores sensitive information in cleartext in the registry.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage in the Registry",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/314.html",
      "id": "CWE-314"
    },
    {
      "Description": "<b>CWE-315: Cleartext Storage of Sensitive Information in a Cookie</b><br>The product stores sensitive information in cleartext in a cookie.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information in a Cookie",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/315.html",
      "id": "CWE-315"
    },
    {
      "Description": "<b>CWE-316: Cleartext Storage of Sensitive Information in Memory</b><br>The product stores sensitive information in cleartext in memory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information in Memory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/316.html",
      "id": "CWE-316"
    },
    {
      "Description": "<b>CWE-317: Cleartext Storage of Sensitive Information in GUI</b><br>The product stores sensitive information in cleartext within the GUI.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information in GUI",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/317.html",
      "id": "CWE-317"
    },
    {
      "Description": "<b>CWE-318: Cleartext Storage of Sensitive Information in Executable</b><br>The product stores sensitive information in cleartext in an executable.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information in Executable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/318.html",
      "id": "CWE-318"
    },
    {
      "Description": "<b>CWE-319: Cleartext Transmission of Sensitive Information</b><br>The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Cleartext Transmission of Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/319.html",
      "id": "CWE-319"
    },
    {
      "Description": "<b>CWE-32: Path Traversal: '...' (Triple Dot)</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '...' (Triple Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/32.html",
      "id": "CWE-32"
    },
    {
      "Description": "<b>CWE-321: Use of Hard-coded Cryptographic Key</b><br>The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Hard-coded Cryptographic Key",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/321.html",
      "id": "CWE-321"
    },
    {
      "Description": "<b>CWE-322: Key Exchange without Entity Authentication</b><br>The product performs a key exchange with an actor without verifying the identity of that actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Key Exchange without Entity Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/322.html",
      "id": "CWE-322"
    },
    {
      "Description": "<b>CWE-323: Reusing a Nonce, Key Pair in Encryption</b><br>Nonces should be used for the present occasion and only once.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reusing a Nonce, Key Pair in Encryption",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/323.html",
      "id": "CWE-323"
    },
    {
      "Description": "<b>CWE-344: Use of Invariant Value in Dynamically Changing Context</b><br>The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Invariant Value in Dynamically Changing Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/344.html",
      "id": "CWE-344"
    },
    {
      "Description": "<b>CWE-324: Use of a Key Past its Expiration Date</b><br>The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of a Key Past its Expiration Date",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/324.html",
      "id": "CWE-324"
    },
    {
      "Description": "<b>CWE-325: Missing Cryptographic Step</b><br>The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Cryptographic Step",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/325.html",
      "id": "CWE-325"
    },
    {
      "Description": "<b>CWE-326: Inadequate Encryption Strength</b><br>The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
      "color": "#ff6200",
      "size": 18,
      "label": "Inadequate Encryption Strength",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/326.html",
      "id": "CWE-326"
    },
    {
      "Description": "<b>CWE-328: Use of Weak Hash</b><br>The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Weak Hash",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/328.html",
      "id": "CWE-328"
    },
    {
      "Description": "<b>CWE-329: Generation of Predictable IV with CBC Mode</b><br>The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Generation of Predictable IV with CBC Mode",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/329.html",
      "id": "CWE-329"
    },
    {
      "Description": "<b>CWE-33: Path Traversal: '....' (Multiple Dot)</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '....' (Multiple Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/33.html",
      "id": "CWE-33"
    },
    {
      "Description": "<b>CWE-331: Insufficient Entropy</b><br>The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Entropy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/331.html",
      "id": "CWE-331"
    },
    {
      "Description": "<b>CWE-332: Insufficient Entropy in PRNG</b><br>The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Insufficient Entropy in PRNG",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/332.html",
      "id": "CWE-332"
    },
    {
      "Description": "<b>CWE-333: Improper Handling of Insufficient Entropy in TRNG</b><br>True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Insufficient Entropy in TRNG",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/333.html",
      "id": "CWE-333"
    },
    {
      "Description": "<b>CWE-334: Small Space of Random Values</b><br>The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Small Space of Random Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/334.html",
      "id": "CWE-334"
    },
    {
      "Description": "<b>CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)</b><br>The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/335.html",
      "id": "CWE-335"
    },
    {
      "Description": "<b>CWE-336: Same Seed in Pseudo-Random Number Generator (PRNG)</b><br>A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Same Seed in Pseudo-Random Number Generator (PRNG)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/336.html",
      "id": "CWE-336"
    },
    {
      "Description": "<b>CWE-337: Predictable Seed in Pseudo-Random Number Generator (PRNG)</b><br>A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/337.html",
      "id": "CWE-337"
    },
    {
      "Description": "<b>CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)</b><br>The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/338.html",
      "id": "CWE-338"
    },
    {
      "Description": "<b>CWE-339: Small Seed Space in PRNG</b><br>A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Small Seed Space in PRNG",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/339.html",
      "id": "CWE-339"
    },
    {
      "Description": "<b>CWE-34: Path Traversal: '....//'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '....//'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/34.html",
      "id": "CWE-34"
    },
    {
      "Description": "<b>CWE-340: Generation of Predictable Numbers or Identifiers</b><br>The product uses a scheme that generates numbers or identifiers that are more predictable than required.",
      "color": "#ff6200",
      "size": 18,
      "label": "Generation of Predictable Numbers or Identifiers",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/340.html",
      "id": "CWE-340"
    },
    {
      "Description": "<b>CWE-341: Predictable from Observable State</b><br>A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Predictable from Observable State",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/341.html",
      "id": "CWE-341"
    },
    {
      "Description": "<b>CWE-342: Predictable Exact Value from Previous Values</b><br>An exact value or random number can be precisely predicted by observing previous values.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Predictable Exact Value from Previous Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/342.html",
      "id": "CWE-342"
    },
    {
      "Description": "<b>CWE-343: Predictable Value Range from Previous Values</b><br>The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Predictable Value Range from Previous Values",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/343.html",
      "id": "CWE-343"
    },
    {
      "Description": "<b>CWE-347: Improper Verification of Cryptographic Signature</b><br>The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Verification of Cryptographic Signature",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/347.html",
      "id": "CWE-347"
    },
    {
      "Description": "<b>CWE-348: Use of Less Trusted Source</b><br>The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Less Trusted Source",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/348.html",
      "id": "CWE-348"
    },
    {
      "Description": "<b>CWE-349: Acceptance of Extraneous Untrusted Data With Trusted Data</b><br>The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Acceptance of Extraneous Untrusted Data With Trusted Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/349.html",
      "id": "CWE-349"
    },
    {
      "Description": "<b>CWE-35: Path Traversal: '.../...//'</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '.../...//'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/35.html",
      "id": "CWE-35"
    },
    {
      "Description": "<b>CWE-350: Reliance on Reverse DNS Resolution for a Security-Critical Action</b><br>The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/350.html",
      "id": "CWE-350"
    },
    {
      "Description": "<b>CWE-351: Insufficient Type Distinction</b><br>The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Type Distinction",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/351.html",
      "id": "CWE-351"
    },
    {
      "Description": "<b>CWE-352: Cross-Site Request Forgery (CSRF)</b><br>The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Cross-Site Request Forgery (CSRF)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/352.html",
      "id": "CWE-352"
    },
    {
      "Description": "<b>CWE-353: Missing Support for Integrity Check</b><br>The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Support for Integrity Check",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/353.html",
      "id": "CWE-353"
    },
    {
      "Description": "<b>CWE-354: Improper Validation of Integrity Check Value</b><br>The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Validation of Integrity Check Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/354.html",
      "id": "CWE-354"
    },
    {
      "Description": "<b>CWE-356: Product UI does not Warn User of Unsafe Actions</b><br>The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Product UI does not Warn User of Unsafe Actions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/356.html",
      "id": "CWE-356"
    },
    {
      "Description": "<b>CWE-357: Insufficient UI Warning of Dangerous Operations</b><br>The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient UI Warning of Dangerous Operations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/357.html",
      "id": "CWE-357"
    },
    {
      "Description": "<b>CWE-358: Improperly Implemented Security Check for Standard</b><br>The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improperly Implemented Security Check for Standard",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/358.html",
      "id": "CWE-358"
    },
    {
      "Description": "<b>CWE-359: Exposure of Private Personal Information to an Unauthorized Actor</b><br>The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Private Personal Information to an Unauthorized Actor",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/359.html",
      "id": "CWE-359"
    },
    {
      "Description": "<b>CWE-36: Absolute Path Traversal</b><br>The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Absolute Path Traversal",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/36.html",
      "id": "CWE-36"
    },
    {
      "Description": "<b>CWE-360: Trust of System Event Data</b><br>Security based on event locations are insecure and can be spoofed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Trust of System Event Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/360.html",
      "id": "CWE-360"
    },
    {
      "Description": "<b>CWE-363: Race Condition Enabling Link Following</b><br>The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Race Condition Enabling Link Following",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/363.html",
      "id": "CWE-363"
    },
    {
      "Description": "<b>CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition</b><br>The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/367.html",
      "id": "CWE-367"
    },
    {
      "Description": "<b>CWE-364: Signal Handler Race Condition</b><br>The product uses a signal handler that introduces a race condition.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Signal Handler Race Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/364.html",
      "id": "CWE-364"
    },
    {
      "Description": "<b>CWE-365: DEPRECATED: Race Condition in Switch</b><br>This entry has been deprecated. There are no documented cases in which a switch's control expression is evaluated more than once.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Race Condition in Switch",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/365.html",
      "id": "CWE-365"
    },
    {
      "Description": "<b>CWE-366: Race Condition within a Thread</b><br>If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Race Condition within a Thread",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/366.html",
      "id": "CWE-366"
    },
    {
      "Description": "<b>CWE-368: Context Switching Race Condition</b><br>A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Context Switching Race Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/368.html",
      "id": "CWE-368"
    },
    {
      "Description": "<b>CWE-369: Divide By Zero</b><br>The product divides a value by zero.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Divide By Zero",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/369.html",
      "id": "CWE-369"
    },
    {
      "Description": "<b>CWE-37: Path Traversal: '/absolute/pathname/here'</b><br>The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '/absolute/pathname/here'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/37.html",
      "id": "CWE-37"
    },
    {
      "Description": "<b>CWE-370: Missing Check for Certificate Revocation after Initial Check</b><br>The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Check for Certificate Revocation after Initial Check",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/370.html",
      "id": "CWE-370"
    },
    {
      "Description": "<b>CWE-372: Incomplete Internal State Distinction</b><br>The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Internal State Distinction",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/372.html",
      "id": "CWE-372"
    },
    {
      "Description": "<b>CWE-373: DEPRECATED: State Synchronization Error</b><br>This entry was deprecated because it overlapped the same concepts as race condition (CWE-362) and Improper Synchronization (CWE-662).",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: State Synchronization Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/373.html",
      "id": "CWE-373"
    },
    {
      "Description": "<b>CWE-374: Passing Mutable Objects to an Untrusted Method</b><br>The product sends non-cloned mutable data as an argument to a method or function.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Passing Mutable Objects to an Untrusted Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/374.html",
      "id": "CWE-374"
    },
    {
      "Description": "<b>CWE-375: Returning a Mutable Object to an Untrusted Caller</b><br>Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Returning a Mutable Object to an Untrusted Caller",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/375.html",
      "id": "CWE-375"
    },
    {
      "Description": "<b>CWE-377: Insecure Temporary File</b><br>Creating and using insecure temporary files can leave application and system data vulnerable to attack.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insecure Temporary File",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/377.html",
      "id": "CWE-377"
    },
    {
      "Description": "<b>CWE-378: Creation of Temporary File With Insecure Permissions</b><br>Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Creation of Temporary File With Insecure Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/378.html",
      "id": "CWE-378"
    },
    {
      "Description": "<b>CWE-379: Creation of Temporary File in Directory with Insecure Permissions</b><br>The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Creation of Temporary File in Directory with Insecure Permissions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/379.html",
      "id": "CWE-379"
    },
    {
      "Description": "<b>CWE-38: Path Traversal: '\\absolute\\pathname\\here'</b><br>The product accepts input in the form of a backslash absolute path ('\\absolute\\pathname\\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '\\absolute\\pathname\\here'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/38.html",
      "id": "CWE-38"
    },
    {
      "Description": "<b>CWE-382: J2EE Bad Practices: Use of System.exit()</b><br>A J2EE application uses System.exit(), which also shuts down its container.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Bad Practices: Use of System.exit()",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/382.html",
      "id": "CWE-382"
    },
    {
      "Description": "<b>CWE-383: J2EE Bad Practices: Direct Use of Threads</b><br>Thread management in a Web application is forbidden in some circumstances and is always highly error prone.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Bad Practices: Direct Use of Threads",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/383.html",
      "id": "CWE-383"
    },
    {
      "Description": "<b>CWE-384: Session Fixation</b><br>Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Session Fixation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/384.html",
      "id": "CWE-384"
    },
    {
      "Description": "<b>CWE-385: Covert Timing Channel</b><br>Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Covert Timing Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/385.html",
      "id": "CWE-385"
    },
    {
      "Description": "<b>CWE-514: Covert Channel</b><br>A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.",
      "color": "#ff6200",
      "size": 18,
      "label": "Covert Channel",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/514.html",
      "id": "CWE-514"
    },
    {
      "Description": "<b>CWE-386: Symbolic Name not Mapping to Correct Object</b><br>A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Symbolic Name not Mapping to Correct Object",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/386.html",
      "id": "CWE-386"
    },
    {
      "Description": "<b>CWE-39: Path Traversal: 'C:dirname'</b><br>The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: 'C:dirname'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/39.html",
      "id": "CWE-39"
    },
    {
      "Description": "<b>CWE-390: Detection of Error Condition Without Action</b><br>The product detects a specific error, but takes no actions to handle the error.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Detection of Error Condition Without Action",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/390.html",
      "id": "CWE-390"
    },
    {
      "Description": "<b>CWE-391: Unchecked Error Condition</b><br>[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unchecked Error Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/391.html",
      "id": "CWE-391"
    },
    {
      "Description": "<b>CWE-392: Missing Report of Error Condition</b><br>The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Report of Error Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/392.html",
      "id": "CWE-392"
    },
    {
      "Description": "<b>CWE-393: Return of Wrong Status Code</b><br>A function or operation returns an incorrect return value or status code that does not indicate an error, but causes the product to modify its behavior based on the incorrect result.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Return of Wrong Status Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/393.html",
      "id": "CWE-393"
    },
    {
      "Description": "<b>CWE-394: Unexpected Status Code or Return Value</b><br>The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unexpected Status Code or Return Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/394.html",
      "id": "CWE-394"
    },
    {
      "Description": "<b>CWE-395: Use of NullPointerException Catch to Detect NULL Pointer Dereference</b><br>Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/395.html",
      "id": "CWE-395"
    },
    {
      "Description": "<b>CWE-396: Declaration of Catch for Generic Exception</b><br>Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Declaration of Catch for Generic Exception",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/396.html",
      "id": "CWE-396"
    },
    {
      "Description": "<b>CWE-397: Declaration of Throws for Generic Exception</b><br>Throwing overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Declaration of Throws for Generic Exception",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/397.html",
      "id": "CWE-397"
    },
    {
      "Description": "<b>CWE-40: Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)</b><br>The product accepts input that identifies a Windows UNC share ('\\\\UNC\\share\\name') that potentially redirects access to an unintended location or arbitrary file.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/40.html",
      "id": "CWE-40"
    },
    {
      "Description": "<b>CWE-401: Missing Release of Memory after Effective Lifetime</b><br>The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Release of Memory after Effective Lifetime",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/401.html",
      "id": "CWE-401"
    },
    {
      "Description": "<b>CWE-402: Transmission of Private Resources into a New Sphere ('Resource Leak')</b><br>The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.",
      "color": "#ff6200",
      "size": 18,
      "label": "Transmission of Private Resources into a New Sphere ('Resource Leak')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/402.html",
      "id": "CWE-402"
    },
    {
      "Description": "<b>CWE-403: Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')</b><br>A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/403.html",
      "id": "CWE-403"
    },
    {
      "Description": "<b>CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</b><br>The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Control of Network Message Volume (Network Amplification)",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/406.html",
      "id": "CWE-406"
    },
    {
      "Description": "<b>CWE-408: Incorrect Behavior Order: Early Amplification</b><br>The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Behavior Order: Early Amplification",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/408.html",
      "id": "CWE-408"
    },
    {
      "Description": "<b>CWE-409: Improper Handling of Highly Compressed Data (Data Amplification)</b><br>The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/409.html",
      "id": "CWE-409"
    },
    {
      "Description": "<b>CWE-41: Improper Resolution of Path Equivalence</b><br>The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Resolution of Path Equivalence",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/41.html",
      "id": "CWE-41"
    },
    {
      "Description": "<b>CWE-410: Insufficient Resource Pool</b><br>The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Resource Pool",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/410.html",
      "id": "CWE-410"
    },
    {
      "Description": "<b>CWE-412: Unrestricted Externally Accessible Lock</b><br>The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unrestricted Externally Accessible Lock",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/412.html",
      "id": "CWE-412"
    },
    {
      "Description": "<b>CWE-413: Improper Resource Locking</b><br>The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Resource Locking",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/413.html",
      "id": "CWE-413"
    },
    {
      "Description": "<b>CWE-414: Missing Lock Check</b><br>A product does not check to see if a lock is present before performing sensitive operations on a resource.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Lock Check",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/414.html",
      "id": "CWE-414"
    },
    {
      "Description": "<b>CWE-415: Double Free</b><br>The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Double Free",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/415.html",
      "id": "CWE-415"
    },
    {
      "Description": "<b>CWE-825: Expired Pointer Dereference</b><br>The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Expired Pointer Dereference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/825.html",
      "id": "CWE-825"
    },
    {
      "Description": "<b>CWE-666: Operation on Resource in Wrong Phase of Lifetime</b><br>The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.",
      "color": "#ff6200",
      "size": 18,
      "label": "Operation on Resource in Wrong Phase of Lifetime",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/666.html",
      "id": "CWE-666"
    },
    {
      "Description": "<b>CWE-416: Use After Free</b><br>Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use After Free",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/416.html",
      "id": "CWE-416"
    },
    {
      "Description": "<b>CWE-419: Unprotected Primary Channel</b><br>The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unprotected Primary Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/419.html",
      "id": "CWE-419"
    },
    {
      "Description": "<b>CWE-42: Path Equivalence: 'filename.' (Trailing Dot)</b><br>The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filename.' (Trailing Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/42.html",
      "id": "CWE-42"
    },
    {
      "Description": "<b>CWE-421: Race Condition During Access to Alternate Channel</b><br>The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Race Condition During Access to Alternate Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/421.html",
      "id": "CWE-421"
    },
    {
      "Description": "<b>CWE-422: Unprotected Windows Messaging Channel ('Shatter')</b><br>The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Unprotected Windows Messaging Channel ('Shatter')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/422.html",
      "id": "CWE-422"
    },
    {
      "Description": "<b>CWE-423: DEPRECATED: Proxied Trusted Channel</b><br>This entry has been deprecated because it was a duplicate of CWE-441. All content has been transferred to CWE-441.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Proxied Trusted Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/423.html",
      "id": "CWE-423"
    },
    {
      "Description": "<b>CWE-424: Improper Protection of Alternate Path</b><br>The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Protection of Alternate Path",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/424.html",
      "id": "CWE-424"
    },
    {
      "Description": "<b>CWE-638: Not Using Complete Mediation</b><br>The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.",
      "color": "#ff6200",
      "size": 18,
      "label": "Not Using Complete Mediation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/638.html",
      "id": "CWE-638"
    },
    {
      "Description": "<b>CWE-425: Direct Request ('Forced Browsing')</b><br>The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Direct Request ('Forced Browsing')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/425.html",
      "id": "CWE-425"
    },
    {
      "Description": "<b>CWE-426: Untrusted Search Path</b><br>The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Untrusted Search Path",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/426.html",
      "id": "CWE-426"
    },
    {
      "Description": "<b>CWE-673: External Influence of Sphere Definition</b><br>The product does not prevent the definition of control spheres from external actors.",
      "color": "#ff6200",
      "size": 18,
      "label": "External Influence of Sphere Definition",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/673.html",
      "id": "CWE-673"
    },
    {
      "Description": "<b>CWE-427: Uncontrolled Search Path Element</b><br>The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Uncontrolled Search Path Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/427.html",
      "id": "CWE-427"
    },
    {
      "Description": "<b>CWE-428: Unquoted Search Path or Element</b><br>The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unquoted Search Path or Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/428.html",
      "id": "CWE-428"
    },
    {
      "Description": "<b>CWE-43: Path Equivalence: 'filename....' (Multiple Trailing Dot)</b><br>The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filename....' (Multiple Trailing Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/43.html",
      "id": "CWE-43"
    },
    {
      "Description": "<b>CWE-430: Deployment of Wrong Handler</b><br>The wrong \"handler\" is assigned to process an object.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Deployment of Wrong Handler",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/430.html",
      "id": "CWE-430"
    },
    {
      "Description": "<b>CWE-431: Missing Handler</b><br>A handler is not available or implemented.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Handler",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/431.html",
      "id": "CWE-431"
    },
    {
      "Description": "<b>CWE-432: Dangerous Signal Handler not Disabled During Sensitive Operations</b><br>The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Dangerous Signal Handler not Disabled During Sensitive Operations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/432.html",
      "id": "CWE-432"
    },
    {
      "Description": "<b>CWE-433: Unparsed Raw Web Content Delivery</b><br>The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Unparsed Raw Web Content Delivery",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/433.html",
      "id": "CWE-433"
    },
    {
      "Description": "<b>CWE-434: Unrestricted Upload of File with Dangerous Type</b><br>The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unrestricted Upload of File with Dangerous Type",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/434.html",
      "id": "CWE-434"
    },
    {
      "Description": "<b>CWE-437: Incomplete Model of Endpoint Features</b><br>A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Model of Endpoint Features",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/437.html",
      "id": "CWE-437"
    },
    {
      "Description": "<b>CWE-439: Behavioral Change in New Version or Environment</b><br>A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Behavioral Change in New Version or Environment",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/439.html",
      "id": "CWE-439"
    },
    {
      "Description": "<b>CWE-44: Path Equivalence: 'file.name' (Internal Dot)</b><br>The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'file.name' (Internal Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/44.html",
      "id": "CWE-44"
    },
    {
      "Description": "<b>CWE-440: Expected Behavior Violation</b><br>A feature, API, or function does not perform according to its specification.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Expected Behavior Violation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/440.html",
      "id": "CWE-440"
    },
    {
      "Description": "<b>CWE-443: DEPRECATED: HTTP response splitting</b><br>This weakness can be found at CWE-113.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: HTTP response splitting",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/443.html",
      "id": "CWE-443"
    },
    {
      "Description": "<b>CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')</b><br>The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/444.html",
      "id": "CWE-444"
    },
    {
      "Description": "<b>CWE-446: UI Discrepancy for Security Feature</b><br>The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state.",
      "color": "#ff6200",
      "size": 18,
      "label": "UI Discrepancy for Security Feature",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/446.html",
      "id": "CWE-446"
    },
    {
      "Description": "<b>CWE-447: Unimplemented or Unsupported Feature in UI</b><br>A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unimplemented or Unsupported Feature in UI",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/447.html",
      "id": "CWE-447"
    },
    {
      "Description": "<b>CWE-671: Lack of Administrator Control over Security</b><br>The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.",
      "color": "#ff6200",
      "size": 18,
      "label": "Lack of Administrator Control over Security",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/671.html",
      "id": "CWE-671"
    },
    {
      "Description": "<b>CWE-448: Obsolete Feature in UI</b><br>A UI function is obsolete and the product does not warn the user.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Obsolete Feature in UI",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/448.html",
      "id": "CWE-448"
    },
    {
      "Description": "<b>CWE-449: The UI Performs the Wrong Action</b><br>The UI performs the wrong action with respect to the user's request.",
      "color": "#ffbb00",
      "size": 10,
      "label": "The UI Performs the Wrong Action",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/449.html",
      "id": "CWE-449"
    },
    {
      "Description": "<b>CWE-45: Path Equivalence: 'file...name' (Multiple Internal Dot)</b><br>The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'file...name' (Multiple Internal Dot)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/45.html",
      "id": "CWE-45"
    },
    {
      "Description": "<b>CWE-450: Multiple Interpretations of UI Input</b><br>The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Multiple Interpretations of UI Input",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/450.html",
      "id": "CWE-450"
    },
    {
      "Description": "<b>CWE-453: Insecure Default Variable Initialization</b><br>The product, by default, initializes an internal variable with an insecure or less secure value than is possible.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Insecure Default Variable Initialization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/453.html",
      "id": "CWE-453"
    },
    {
      "Description": "<b>CWE-454: External Initialization of Trusted Variables or Data Stores</b><br>The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.",
      "color": "#ffbb00",
      "size": 10,
      "label": "External Initialization of Trusted Variables or Data Stores",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/454.html",
      "id": "CWE-454"
    },
    {
      "Description": "<b>CWE-455: Non-exit on Failed Initialization</b><br>The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Non-exit on Failed Initialization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/455.html",
      "id": "CWE-455"
    },
    {
      "Description": "<b>CWE-636: Not Failing Securely ('Failing Open')</b><br>When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.",
      "color": "#ff6200",
      "size": 18,
      "label": "Not Failing Securely ('Failing Open')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/636.html",
      "id": "CWE-636"
    },
    {
      "Description": "<b>CWE-456: Missing Initialization of a Variable</b><br>The product does not initialize critical variables, which causes the execution environment to use unexpected values.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Initialization of a Variable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/456.html",
      "id": "CWE-456"
    },
    {
      "Description": "<b>CWE-457: Use of Uninitialized Variable</b><br>The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Uninitialized Variable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/457.html",
      "id": "CWE-457"
    },
    {
      "Description": "<b>CWE-908: Use of Uninitialized Resource</b><br>The product uses or accesses a resource that has not been initialized.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Uninitialized Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/908.html",
      "id": "CWE-908"
    },
    {
      "Description": "<b>CWE-458: DEPRECATED: Incorrect Initialization</b><br>This weakness has been deprecated because its name and description did not match. The description duplicated CWE-454, while the name suggested a more abstract initialization problem. Please refer to CWE-665 for the more abstract problem.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Incorrect Initialization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/458.html",
      "id": "CWE-458"
    },
    {
      "Description": "<b>CWE-46: Path Equivalence: 'filename ' (Trailing Space)</b><br>The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filename ' (Trailing Space)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/46.html",
      "id": "CWE-46"
    },
    {
      "Description": "<b>CWE-460: Improper Cleanup on Thrown Exception</b><br>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Cleanup on Thrown Exception",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/460.html",
      "id": "CWE-460"
    },
    {
      "Description": "<b>CWE-462: Duplicate Key in Associative List (Alist)</b><br>Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Duplicate Key in Associative List (Alist)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/462.html",
      "id": "CWE-462"
    },
    {
      "Description": "<b>CWE-463: Deletion of Data Structure Sentinel</b><br>The accidental deletion of a data-structure sentinel can cause serious programming logic problems.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Deletion of Data Structure Sentinel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/463.html",
      "id": "CWE-463"
    },
    {
      "Description": "<b>CWE-464: Addition of Data Structure Sentinel</b><br>The accidental addition of a data-structure sentinel can cause serious programming logic problems.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Addition of Data Structure Sentinel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/464.html",
      "id": "CWE-464"
    },
    {
      "Description": "<b>CWE-466: Return of Pointer Value Outside of Expected Range</b><br>A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Return of Pointer Value Outside of Expected Range",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/466.html",
      "id": "CWE-466"
    },
    {
      "Description": "<b>CWE-467: Use of sizeof() on a Pointer Type</b><br>The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of sizeof() on a Pointer Type",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/467.html",
      "id": "CWE-467"
    },
    {
      "Description": "<b>CWE-468: Incorrect Pointer Scaling</b><br>In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Pointer Scaling",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/468.html",
      "id": "CWE-468"
    },
    {
      "Description": "<b>CWE-469: Use of Pointer Subtraction to Determine Size</b><br>The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Pointer Subtraction to Determine Size",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/469.html",
      "id": "CWE-469"
    },
    {
      "Description": "<b>CWE-47: Path Equivalence: ' filename' (Leading Space)</b><br>The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: ' filename' (Leading Space)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/47.html",
      "id": "CWE-47"
    },
    {
      "Description": "<b>CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')</b><br>The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/470.html",
      "id": "CWE-470"
    },
    {
      "Description": "<b>CWE-472: External Control of Assumed-Immutable Web Parameter</b><br>The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
      "color": "#ffbb00",
      "size": 10,
      "label": "External Control of Assumed-Immutable Web Parameter",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/472.html",
      "id": "CWE-472"
    },
    {
      "Description": "<b>CWE-473: PHP External Variable Modification</b><br>A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
      "color": "#e8e66b",
      "size": 10,
      "label": "PHP External Variable Modification",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/473.html",
      "id": "CWE-473"
    },
    {
      "Description": "<b>CWE-474: Use of Function with Inconsistent Implementations</b><br>The code uses a function that has inconsistent implementations across operating systems and versions.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Function with Inconsistent Implementations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/474.html",
      "id": "CWE-474"
    },
    {
      "Description": "<b>CWE-475: Undefined Behavior for Input to API</b><br>The behavior of this function is undefined unless its control parameter is set to a specific value.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Undefined Behavior for Input to API",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/475.html",
      "id": "CWE-475"
    },
    {
      "Description": "<b>CWE-476: NULL Pointer Dereference</b><br>A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.",
      "color": "#ffbb00",
      "size": 10,
      "label": "NULL Pointer Dereference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/476.html",
      "id": "CWE-476"
    },
    {
      "Description": "<b>CWE-477: Use of Obsolete Function</b><br>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Obsolete Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/477.html",
      "id": "CWE-477"
    },
    {
      "Description": "<b>CWE-478: Missing Default Case in Multiple Condition Expression</b><br>The code does not have a default case in an expression with multiple conditions, such as a switch statement.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Default Case in Multiple Condition Expression",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/478.html",
      "id": "CWE-478"
    },
    {
      "Description": "<b>CWE-479: Signal Handler Use of a Non-reentrant Function</b><br>The product defines a signal handler that calls a non-reentrant function.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Signal Handler Use of a Non-reentrant Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/479.html",
      "id": "CWE-479"
    },
    {
      "Description": "<b>CWE-828: Signal Handler with Functionality that is not Asynchronous-Safe</b><br>The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Signal Handler with Functionality that is not Asynchronous-Safe",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/828.html",
      "id": "CWE-828"
    },
    {
      "Description": "<b>CWE-663: Use of a Non-reentrant Function in a Concurrent Context</b><br>The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of a Non-reentrant Function in a Concurrent Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/663.html",
      "id": "CWE-663"
    },
    {
      "Description": "<b>CWE-48: Path Equivalence: 'file name' (Internal Whitespace)</b><br>The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'file name' (Internal Whitespace)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/48.html",
      "id": "CWE-48"
    },
    {
      "Description": "<b>CWE-480: Use of Incorrect Operator</b><br>The product accidentally uses the wrong operator, which changes the logic in security-relevant ways.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Incorrect Operator",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/480.html",
      "id": "CWE-480"
    },
    {
      "Description": "<b>CWE-670: Always-Incorrect Control Flow Implementation</b><br>The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
      "color": "#ff6200",
      "size": 18,
      "label": "Always-Incorrect Control Flow Implementation",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/670.html",
      "id": "CWE-670"
    },
    {
      "Description": "<b>CWE-481: Assigning instead of Comparing</b><br>The code uses an operator for assignment when the intention was to perform a comparison.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Assigning instead of Comparing",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/481.html",
      "id": "CWE-481"
    },
    {
      "Description": "<b>CWE-482: Comparing instead of Assigning</b><br>The code uses an operator for comparison when the intention was to perform an assignment.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Comparing instead of Assigning",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/482.html",
      "id": "CWE-482"
    },
    {
      "Description": "<b>CWE-483: Incorrect Block Delimitation</b><br>The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Block Delimitation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/483.html",
      "id": "CWE-483"
    },
    {
      "Description": "<b>CWE-484: Omitted Break Statement in Switch</b><br>The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Omitted Break Statement in Switch",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/484.html",
      "id": "CWE-484"
    },
    {
      "Description": "<b>CWE-486: Comparison of Classes by Name</b><br>The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Comparison of Classes by Name",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/486.html",
      "id": "CWE-486"
    },
    {
      "Description": "<b>CWE-487: Reliance on Package-level Scope</b><br>Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Package-level Scope",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/487.html",
      "id": "CWE-487"
    },
    {
      "Description": "<b>CWE-488: Exposure of Data Element to Wrong Session</b><br>The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposure of Data Element to Wrong Session",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/488.html",
      "id": "CWE-488"
    },
    {
      "Description": "<b>CWE-49: Path Equivalence: 'filename/' (Trailing Slash)</b><br>The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filename/' (Trailing Slash)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/49.html",
      "id": "CWE-49"
    },
    {
      "Description": "<b>CWE-491: Public cloneable() Method Without Final ('Object Hijack')</b><br>A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Public cloneable() Method Without Final ('Object Hijack')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/491.html",
      "id": "CWE-491"
    },
    {
      "Description": "<b>CWE-492: Use of Inner Class Containing Sensitive Data</b><br>Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Inner Class Containing Sensitive Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/492.html",
      "id": "CWE-492"
    },
    {
      "Description": "<b>CWE-493: Critical Public Variable Without Final Modifier</b><br>The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Critical Public Variable Without Final Modifier",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/493.html",
      "id": "CWE-493"
    },
    {
      "Description": "<b>CWE-494: Download of Code Without Integrity Check</b><br>The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Download of Code Without Integrity Check",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/494.html",
      "id": "CWE-494"
    },
    {
      "Description": "<b>CWE-495: Private Data Structure Returned From A Public Method</b><br>The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Private Data Structure Returned From A Public Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/495.html",
      "id": "CWE-495"
    },
    {
      "Description": "<b>CWE-496: Public Data Assigned to Private Array-Typed Field</b><br>Assigning public data to a private array is equivalent to giving public access to the array.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Public Data Assigned to Private Array-Typed Field",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/496.html",
      "id": "CWE-496"
    },
    {
      "Description": "<b>CWE-498: Cloneable Class Containing Sensitive Information</b><br>The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cloneable Class Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/498.html",
      "id": "CWE-498"
    },
    {
      "Description": "<b>CWE-499: Serializable Class Containing Sensitive Data</b><br>The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Serializable Class Containing Sensitive Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/499.html",
      "id": "CWE-499"
    },
    {
      "Description": "<b>CWE-5: J2EE Misconfiguration: Data Transmission Without Encryption</b><br>Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Data Transmission Without Encryption",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/5.html",
      "id": "CWE-5"
    },
    {
      "Description": "<b>CWE-50: Path Equivalence: '//multiple/leading/slash'</b><br>The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: '//multiple/leading/slash'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/50.html",
      "id": "CWE-50"
    },
    {
      "Description": "<b>CWE-500: Public Static Field Not Marked Final</b><br>An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Public Static Field Not Marked Final",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/500.html",
      "id": "CWE-500"
    },
    {
      "Description": "<b>CWE-501: Trust Boundary Violation</b><br>The product mixes trusted and untrusted data in the same data structure or structured message.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Trust Boundary Violation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/501.html",
      "id": "CWE-501"
    },
    {
      "Description": "<b>CWE-502: Deserialization of Untrusted Data</b><br>The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Deserialization of Untrusted Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/502.html",
      "id": "CWE-502"
    },
    {
      "Description": "<b>CWE-506: Embedded Malicious Code</b><br>The product contains code that appears to be malicious in nature.",
      "color": "#ff6200",
      "size": 18,
      "label": "Embedded Malicious Code",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/506.html",
      "id": "CWE-506"
    },
    {
      "Description": "<b>CWE-912: Hidden Functionality</b><br>The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
      "color": "#ff6200",
      "size": 18,
      "label": "Hidden Functionality",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/912.html",
      "id": "CWE-912"
    },
    {
      "Description": "<b>CWE-507: Trojan Horse</b><br>The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Trojan Horse",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/507.html",
      "id": "CWE-507"
    },
    {
      "Description": "<b>CWE-508: Non-Replicating Malicious Code</b><br>Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Non-Replicating Malicious Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/508.html",
      "id": "CWE-508"
    },
    {
      "Description": "<b>CWE-509: Replicating Malicious Code (Virus or Worm)</b><br>Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Replicating Malicious Code (Virus or Worm)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/509.html",
      "id": "CWE-509"
    },
    {
      "Description": "<b>CWE-51: Path Equivalence: '/multiple//internal/slash'</b><br>The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: '/multiple//internal/slash'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/51.html",
      "id": "CWE-51"
    },
    {
      "Description": "<b>CWE-510: Trapdoor</b><br>A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Trapdoor",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/510.html",
      "id": "CWE-510"
    },
    {
      "Description": "<b>CWE-511: Logic/Time Bomb</b><br>The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Logic/Time Bomb",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/511.html",
      "id": "CWE-511"
    },
    {
      "Description": "<b>CWE-512: Spyware</b><br>The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Spyware",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/512.html",
      "id": "CWE-512"
    },
    {
      "Description": "<b>CWE-515: Covert Storage Channel</b><br>A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Covert Storage Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/515.html",
      "id": "CWE-515"
    },
    {
      "Description": "<b>CWE-516: DEPRECATED: Covert Timing Channel</b><br>This weakness can be found at CWE-385.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Covert Timing Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/516.html",
      "id": "CWE-516"
    },
    {
      "Description": "<b>CWE-52: Path Equivalence: '/multiple/trailing/slash//'</b><br>The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: '/multiple/trailing/slash//'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/52.html",
      "id": "CWE-52"
    },
    {
      "Description": "<b>CWE-520: .NET Misconfiguration: Use of Impersonation</b><br>Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.",
      "color": "#e8e66b",
      "size": 10,
      "label": ".NET Misconfiguration: Use of Impersonation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/520.html",
      "id": "CWE-520"
    },
    {
      "Description": "<b>CWE-523: Unprotected Transport of Credentials</b><br>Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unprotected Transport of Credentials",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/523.html",
      "id": "CWE-523"
    },
    {
      "Description": "<b>CWE-524: Use of Cache Containing Sensitive Information</b><br>The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Cache Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/524.html",
      "id": "CWE-524"
    },
    {
      "Description": "<b>CWE-525: Use of Web Browser Cache Containing Sensitive Information</b><br>The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Web Browser Cache Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/525.html",
      "id": "CWE-525"
    },
    {
      "Description": "<b>CWE-526: Cleartext Storage of Sensitive Information in an Environment Variable</b><br>The product uses an environment variable to store unencrypted sensitive information.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Cleartext Storage of Sensitive Information in an Environment Variable",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/526.html",
      "id": "CWE-526"
    },
    {
      "Description": "<b>CWE-527: Exposure of Version-Control Repository to an Unauthorized Control Sphere</b><br>The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Version-Control Repository to an Unauthorized Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/527.html",
      "id": "CWE-527"
    },
    {
      "Description": "<b>CWE-528: Exposure of Core Dump File to an Unauthorized Control Sphere</b><br>The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Core Dump File to an Unauthorized Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/528.html",
      "id": "CWE-528"
    },
    {
      "Description": "<b>CWE-529: Exposure of Access Control List Files to an Unauthorized Control Sphere</b><br>The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Access Control List Files to an Unauthorized Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/529.html",
      "id": "CWE-529"
    },
    {
      "Description": "<b>CWE-53: Path Equivalence: '\\multiple\\\\internal\\backslash'</b><br>The product accepts path input in the form of multiple internal backslash ('\\multiple\\trailing\\\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: '\\multiple\\\\internal\\backslash'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/53.html",
      "id": "CWE-53"
    },
    {
      "Description": "<b>CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</b><br>A backup file is stored in a directory or archive that is made accessible to unauthorized actors.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Backup File to an Unauthorized Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/530.html",
      "id": "CWE-530"
    },
    {
      "Description": "<b>CWE-531: Inclusion of Sensitive Information in Test Code</b><br>Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Inclusion of Sensitive Information in Test Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/531.html",
      "id": "CWE-531"
    },
    {
      "Description": "<b>CWE-540: Inclusion of Sensitive Information in Source Code</b><br>Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inclusion of Sensitive Information in Source Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/540.html",
      "id": "CWE-540"
    },
    {
      "Description": "<b>CWE-532: Insertion of Sensitive Information into Log File</b><br>Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insertion of Sensitive Information into Log File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/532.html",
      "id": "CWE-532"
    },
    {
      "Description": "<b>CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory</b><br>The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/538.html",
      "id": "CWE-538"
    },
    {
      "Description": "<b>CWE-533: DEPRECATED: Information Exposure Through Server Log Files</b><br>This entry has been deprecated because its abstraction was too low-level.  See CWE-532.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Information Exposure Through Server Log Files",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/533.html",
      "id": "CWE-533"
    },
    {
      "Description": "<b>CWE-534: DEPRECATED: Information Exposure Through Debug Log Files</b><br>This entry has been deprecated because its abstraction was too low-level.  See CWE-532.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Information Exposure Through Debug Log Files",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/534.html",
      "id": "CWE-534"
    },
    {
      "Description": "<b>CWE-535: Exposure of Information Through Shell Error Message</b><br>A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Information Through Shell Error Message",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/535.html",
      "id": "CWE-535"
    },
    {
      "Description": "<b>CWE-536: Servlet Runtime Error Message Containing Sensitive Information</b><br>A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Servlet Runtime Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/536.html",
      "id": "CWE-536"
    },
    {
      "Description": "<b>CWE-537: Java Runtime Error Message Containing Sensitive Information</b><br>In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Java Runtime Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/537.html",
      "id": "CWE-537"
    },
    {
      "Description": "<b>CWE-539: Use of Persistent Cookies Containing Sensitive Information</b><br>The web application uses persistent cookies, but the cookies contain sensitive information.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Persistent Cookies Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/539.html",
      "id": "CWE-539"
    },
    {
      "Description": "<b>CWE-54: Path Equivalence: 'filedir\\' (Trailing Backslash)</b><br>The product accepts path input in the form of trailing backslash ('filedir\\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filedir\\' (Trailing Backslash)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/54.html",
      "id": "CWE-54"
    },
    {
      "Description": "<b>CWE-541: Inclusion of Sensitive Information in an Include File</b><br>If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Inclusion of Sensitive Information in an Include File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/541.html",
      "id": "CWE-541"
    },
    {
      "Description": "<b>CWE-542: DEPRECATED: Information Exposure Through Cleanup Log Files</b><br>This entry has been deprecated because its abstraction was too low-level.  See CWE-532.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Information Exposure Through Cleanup Log Files",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/542.html",
      "id": "CWE-542"
    },
    {
      "Description": "<b>CWE-543: Use of Singleton Pattern Without Synchronization in a Multithreaded Context</b><br>The product uses the singleton pattern when creating a resource within a multithreaded environment.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Singleton Pattern Without Synchronization in a Multithreaded Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/543.html",
      "id": "CWE-543"
    },
    {
      "Description": "<b>CWE-544: Missing Standardized Error Handling Mechanism</b><br>The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Standardized Error Handling Mechanism",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/544.html",
      "id": "CWE-544"
    },
    {
      "Description": "<b>CWE-545: DEPRECATED: Use of Dynamic Class Loading</b><br>This weakness has been deprecated because it partially overlaps CWE-470, it describes legitimate programmer behavior, and other portions will need to be integrated into other entries.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Use of Dynamic Class Loading",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/545.html",
      "id": "CWE-545"
    },
    {
      "Description": "<b>CWE-546: Suspicious Comment</b><br>The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Suspicious Comment",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/546.html",
      "id": "CWE-546"
    },
    {
      "Description": "<b>CWE-547: Use of Hard-coded, Security-relevant Constants</b><br>The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Hard-coded, Security-relevant Constants",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/547.html",
      "id": "CWE-547"
    },
    {
      "Description": "<b>CWE-548: Exposure of Information Through Directory Listing</b><br>A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of Information Through Directory Listing",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/548.html",
      "id": "CWE-548"
    },
    {
      "Description": "<b>CWE-549: Missing Password Field Masking</b><br>The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Password Field Masking",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/549.html",
      "id": "CWE-549"
    },
    {
      "Description": "<b>CWE-55: Path Equivalence: '/./' (Single Dot Directory)</b><br>The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: '/./' (Single Dot Directory)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/55.html",
      "id": "CWE-55"
    },
    {
      "Description": "<b>CWE-550: Server-generated Error Message Containing Sensitive Information</b><br>Certain conditions, such as network failure, will cause a server error message to be displayed.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Server-generated Error Message Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/550.html",
      "id": "CWE-550"
    },
    {
      "Description": "<b>CWE-551: Incorrect Behavior Order: Authorization Before Parsing and Canonicalization</b><br>If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Behavior Order: Authorization Before Parsing and Canonicalization",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/551.html",
      "id": "CWE-551"
    },
    {
      "Description": "<b>CWE-553: Command Shell in Externally Accessible Directory</b><br>A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Command Shell in Externally Accessible Directory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/553.html",
      "id": "CWE-553"
    },
    {
      "Description": "<b>CWE-554: ASP.NET Misconfiguration: Not Using Input Validation Framework</b><br>The ASP.NET application does not use an input validation framework.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Not Using Input Validation Framework",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/554.html",
      "id": "CWE-554"
    },
    {
      "Description": "<b>CWE-555: J2EE Misconfiguration: Plaintext Password in Configuration File</b><br>The J2EE application stores a plaintext password in a configuration file.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Plaintext Password in Configuration File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/555.html",
      "id": "CWE-555"
    },
    {
      "Description": "<b>CWE-556: ASP.NET Misconfiguration: Use of Identity Impersonation</b><br>Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.",
      "color": "#e8e66b",
      "size": 10,
      "label": "ASP.NET Misconfiguration: Use of Identity Impersonation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/556.html",
      "id": "CWE-556"
    },
    {
      "Description": "<b>CWE-558: Use of getlogin() in Multithreaded Application</b><br>The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of getlogin() in Multithreaded Application",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/558.html",
      "id": "CWE-558"
    },
    {
      "Description": "<b>CWE-56: Path Equivalence: 'filedir*' (Wildcard)</b><br>The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'filedir*' (Wildcard)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/56.html",
      "id": "CWE-56"
    },
    {
      "Description": "<b>CWE-560: Use of umask() with chmod-style Argument</b><br>The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of umask() with chmod-style Argument",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/560.html",
      "id": "CWE-560"
    },
    {
      "Description": "<b>CWE-687: Function Call With Incorrectly Specified Argument Value</b><br>The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Function Call With Incorrectly Specified Argument Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/687.html",
      "id": "CWE-687"
    },
    {
      "Description": "<b>CWE-561: Dead Code</b><br>The product contains dead code, which can never be executed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Dead Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/561.html",
      "id": "CWE-561"
    },
    {
      "Description": "<b>CWE-562: Return of Stack Variable Address</b><br>A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Return of Stack Variable Address",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/562.html",
      "id": "CWE-562"
    },
    {
      "Description": "<b>CWE-563: Assignment to Variable without Use</b><br>The variable's value is assigned but never used, making it a dead store.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Assignment to Variable without Use",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/563.html",
      "id": "CWE-563"
    },
    {
      "Description": "<b>CWE-564: SQL Injection: Hibernate</b><br>Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.",
      "color": "#e8e66b",
      "size": 10,
      "label": "SQL Injection: Hibernate",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/564.html",
      "id": "CWE-564"
    },
    {
      "Description": "<b>CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</b><br>The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/89.html",
      "id": "CWE-89"
    },
    {
      "Description": "<b>CWE-565: Reliance on Cookies without Validation and Integrity Checking</b><br>The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Cookies without Validation and Integrity Checking",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/565.html",
      "id": "CWE-565"
    },
    {
      "Description": "<b>CWE-602: Client-Side Enforcement of Server-Side Security</b><br>The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.",
      "color": "#ff6200",
      "size": 18,
      "label": "Client-Side Enforcement of Server-Side Security",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/602.html",
      "id": "CWE-602"
    },
    {
      "Description": "<b>CWE-566: Authorization Bypass Through User-Controlled SQL Primary Key</b><br>The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Authorization Bypass Through User-Controlled SQL Primary Key",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/566.html",
      "id": "CWE-566"
    },
    {
      "Description": "<b>CWE-639: Authorization Bypass Through User-Controlled Key</b><br>The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Authorization Bypass Through User-Controlled Key",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/639.html",
      "id": "CWE-639"
    },
    {
      "Description": "<b>CWE-567: Unsynchronized Access to Shared Data in a Multithreaded Context</b><br>The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unsynchronized Access to Shared Data in a Multithreaded Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/567.html",
      "id": "CWE-567"
    },
    {
      "Description": "<b>CWE-568: finalize() Method Without super.finalize()</b><br>The product contains a finalize() method that does not call super.finalize().",
      "color": "#e8e66b",
      "size": 10,
      "label": "finalize() Method Without super.finalize()",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/568.html",
      "id": "CWE-568"
    },
    {
      "Description": "<b>CWE-57: Path Equivalence: 'fakedir/../realdir/filename'</b><br>The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: 'fakedir/../realdir/filename'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/57.html",
      "id": "CWE-57"
    },
    {
      "Description": "<b>CWE-570: Expression is Always False</b><br>The product contains an expression that will always evaluate to false.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Expression is Always False",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/570.html",
      "id": "CWE-570"
    },
    {
      "Description": "<b>CWE-571: Expression is Always True</b><br>The product contains an expression that will always evaluate to true.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Expression is Always True",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/571.html",
      "id": "CWE-571"
    },
    {
      "Description": "<b>CWE-572: Call to Thread run() instead of start()</b><br>The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Call to Thread run() instead of start()",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/572.html",
      "id": "CWE-572"
    },
    {
      "Description": "<b>CWE-574: EJB Bad Practices: Use of Synchronization Primitives</b><br>The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.",
      "color": "#e8e66b",
      "size": 10,
      "label": "EJB Bad Practices: Use of Synchronization Primitives",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/574.html",
      "id": "CWE-574"
    },
    {
      "Description": "<b>CWE-575: EJB Bad Practices: Use of AWT Swing</b><br>The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.",
      "color": "#e8e66b",
      "size": 10,
      "label": "EJB Bad Practices: Use of AWT Swing",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/575.html",
      "id": "CWE-575"
    },
    {
      "Description": "<b>CWE-576: EJB Bad Practices: Use of Java I/O</b><br>The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.",
      "color": "#e8e66b",
      "size": 10,
      "label": "EJB Bad Practices: Use of Java I/O",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/576.html",
      "id": "CWE-576"
    },
    {
      "Description": "<b>CWE-577: EJB Bad Practices: Use of Sockets</b><br>The product violates the Enterprise JavaBeans (EJB) specification by using sockets.",
      "color": "#e8e66b",
      "size": 10,
      "label": "EJB Bad Practices: Use of Sockets",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/577.html",
      "id": "CWE-577"
    },
    {
      "Description": "<b>CWE-578: EJB Bad Practices: Use of Class Loader</b><br>The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.",
      "color": "#e8e66b",
      "size": 10,
      "label": "EJB Bad Practices: Use of Class Loader",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/578.html",
      "id": "CWE-578"
    },
    {
      "Description": "<b>CWE-579: J2EE Bad Practices: Non-serializable Object Stored in Session</b><br>The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Bad Practices: Non-serializable Object Stored in Session",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/579.html",
      "id": "CWE-579"
    },
    {
      "Description": "<b>CWE-58: Path Equivalence: Windows 8.3 Filename</b><br>The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short \"8.3\" filename.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Path Equivalence: Windows 8.3 Filename",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/58.html",
      "id": "CWE-58"
    },
    {
      "Description": "<b>CWE-580: clone() Method Without super.clone()</b><br>The product contains a clone() method that does not call super.clone() to obtain the new object.",
      "color": "#e8e66b",
      "size": 10,
      "label": "clone() Method Without super.clone()",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/580.html",
      "id": "CWE-580"
    },
    {
      "Description": "<b>CWE-581: Object Model Violation: Just One of Equals and Hashcode Defined</b><br>The product does not maintain equal hashcodes for equal objects.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Object Model Violation: Just One of Equals and Hashcode Defined",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/581.html",
      "id": "CWE-581"
    },
    {
      "Description": "<b>CWE-582: Array Declared Public, Final, and Static</b><br>The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Array Declared Public, Final, and Static",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/582.html",
      "id": "CWE-582"
    },
    {
      "Description": "<b>CWE-583: finalize() Method Declared Public</b><br>The product violates secure coding principles for mobile code by declaring a finalize() method public.",
      "color": "#e8e66b",
      "size": 10,
      "label": "finalize() Method Declared Public",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/583.html",
      "id": "CWE-583"
    },
    {
      "Description": "<b>CWE-584: Return Inside Finally Block</b><br>The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Return Inside Finally Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/584.html",
      "id": "CWE-584"
    },
    {
      "Description": "<b>CWE-585: Empty Synchronized Block</b><br>The product contains an empty synchronized block.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Empty Synchronized Block",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/585.html",
      "id": "CWE-585"
    },
    {
      "Description": "<b>CWE-586: Explicit Call to Finalize()</b><br>The product makes an explicit call to the finalize() method from outside the finalizer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Explicit Call to Finalize()",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/586.html",
      "id": "CWE-586"
    },
    {
      "Description": "<b>CWE-587: Assignment of a Fixed Address to a Pointer</b><br>The product sets a pointer to a specific address other than NULL or 0.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Assignment of a Fixed Address to a Pointer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/587.html",
      "id": "CWE-587"
    },
    {
      "Description": "<b>CWE-588: Attempt to Access Child of a Non-structure Pointer</b><br>Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Attempt to Access Child of a Non-structure Pointer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/588.html",
      "id": "CWE-588"
    },
    {
      "Description": "<b>CWE-589: Call to Non-ubiquitous API</b><br>The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Call to Non-ubiquitous API",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/589.html",
      "id": "CWE-589"
    },
    {
      "Description": "<b>CWE-590: Free of Memory not on the Heap</b><br>The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().",
      "color": "#e8e66b",
      "size": 10,
      "label": "Free of Memory not on the Heap",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/590.html",
      "id": "CWE-590"
    },
    {
      "Description": "<b>CWE-762: Mismatched Memory Management Routines</b><br>The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Mismatched Memory Management Routines",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/762.html",
      "id": "CWE-762"
    },
    {
      "Description": "<b>CWE-591: Sensitive Data Storage in Improperly Locked Memory</b><br>The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Sensitive Data Storage in Improperly Locked Memory",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/591.html",
      "id": "CWE-591"
    },
    {
      "Description": "<b>CWE-592: DEPRECATED: Authentication Bypass Issues</b><br>This weakness has been deprecated because it covered redundant concepts already described in CWE-287.",
      "color": "#ff6200",
      "size": 18,
      "label": "DEPRECATED: Authentication Bypass Issues",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/592.html",
      "id": "CWE-592"
    },
    {
      "Description": "<b>CWE-593: Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created</b><br>The product modifies the SSL context after connection creation has begun.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/593.html",
      "id": "CWE-593"
    },
    {
      "Description": "<b>CWE-594: J2EE Framework: Saving Unserializable Objects to Disk</b><br>When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Framework: Saving Unserializable Objects to Disk",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/594.html",
      "id": "CWE-594"
    },
    {
      "Description": "<b>CWE-596: DEPRECATED: Incorrect Semantic Object Comparison</b><br>This weakness has been deprecated.  It was poorly described and difficult to distinguish from other entries.  It was also inappropriate to assign a separate ID solely because of domain-specific considerations.  Its closest equivalent is CWE-1023.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Incorrect Semantic Object Comparison",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/596.html",
      "id": "CWE-596"
    },
    {
      "Description": "<b>CWE-597: Use of Wrong Operator in String Comparison</b><br>The product uses the wrong operator when comparing a string, such as using \"==\" when the .equals() method should be used instead.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Wrong Operator in String Comparison",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/597.html",
      "id": "CWE-597"
    },
    {
      "Description": "<b>CWE-598: Use of GET Request Method With Sensitive Query Strings</b><br>The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of GET Request Method With Sensitive Query Strings",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/598.html",
      "id": "CWE-598"
    },
    {
      "Description": "<b>CWE-599: Missing Validation of OpenSSL Certificate</b><br>The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Validation of OpenSSL Certificate",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/599.html",
      "id": "CWE-599"
    },
    {
      "Description": "<b>CWE-6: J2EE Misconfiguration: Insufficient Session-ID Length</b><br>The J2EE application is configured to use an insufficient session ID length.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Insufficient Session-ID Length",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/6.html",
      "id": "CWE-6"
    },
    {
      "Description": "<b>CWE-600: Uncaught Exception in Servlet </b><br>The Servlet does not catch all exceptions, which may reveal sensitive debugging information.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Uncaught Exception in Servlet ",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/600.html",
      "id": "CWE-600"
    },
    {
      "Description": "<b>CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</b><br>A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
      "color": "#ffbb00",
      "size": 10,
      "label": "URL Redirection to Untrusted Site ('Open Redirect')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/601.html",
      "id": "CWE-601"
    },
    {
      "Description": "<b>CWE-603: Use of Client-Side Authentication</b><br>A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Client-Side Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/603.html",
      "id": "CWE-603"
    },
    {
      "Description": "<b>CWE-605: Multiple Binds to the Same Port</b><br>When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Multiple Binds to the Same Port",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/605.html",
      "id": "CWE-605"
    },
    {
      "Description": "<b>CWE-606: Unchecked Input for Loop Condition</b><br>The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unchecked Input for Loop Condition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/606.html",
      "id": "CWE-606"
    },
    {
      "Description": "<b>CWE-607: Public Static Final Field References Mutable Object</b><br>A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Public Static Final Field References Mutable Object",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/607.html",
      "id": "CWE-607"
    },
    {
      "Description": "<b>CWE-608: Struts: Non-private Field in ActionForm Class</b><br>An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Struts: Non-private Field in ActionForm Class",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/608.html",
      "id": "CWE-608"
    },
    {
      "Description": "<b>CWE-609: Double-Checked Locking</b><br>The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Double-Checked Locking",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/609.html",
      "id": "CWE-609"
    },
    {
      "Description": "<b>CWE-61: UNIX Symbolic Link (Symlink) Following</b><br>The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "color": "#9ac20c",
      "size": 10,
      "label": "UNIX Symbolic Link (Symlink) Following",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/61.html",
      "id": "CWE-61"
    },
    {
      "Description": "<b>CWE-611: Improper Restriction of XML External Entity Reference</b><br>The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of XML External Entity Reference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/611.html",
      "id": "CWE-611"
    },
    {
      "Description": "<b>CWE-612: Improper Authorization of Index Containing Sensitive Information</b><br>The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Authorization of Index Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/612.html",
      "id": "CWE-612"
    },
    {
      "Description": "<b>CWE-613: Insufficient Session Expiration</b><br>According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Session Expiration",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/613.html",
      "id": "CWE-613"
    },
    {
      "Description": "<b>CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</b><br>The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/614.html",
      "id": "CWE-614"
    },
    {
      "Description": "<b>CWE-615: Inclusion of Sensitive Information in Source Code Comments</b><br>While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Inclusion of Sensitive Information in Source Code Comments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/615.html",
      "id": "CWE-615"
    },
    {
      "Description": "<b>CWE-616: Incomplete Identification of Uploaded File Variables (PHP)</b><br>The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incomplete Identification of Uploaded File Variables (PHP)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/616.html",
      "id": "CWE-616"
    },
    {
      "Description": "<b>CWE-617: Reachable Assertion</b><br>The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reachable Assertion",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/617.html",
      "id": "CWE-617"
    },
    {
      "Description": "<b>CWE-618: Exposed Unsafe ActiveX Method</b><br>An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposed Unsafe ActiveX Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/618.html",
      "id": "CWE-618"
    },
    {
      "Description": "<b>CWE-749: Exposed Dangerous Method or Function</b><br>The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Exposed Dangerous Method or Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/749.html",
      "id": "CWE-749"
    },
    {
      "Description": "<b>CWE-619: Dangling Database Cursor ('Cursor Injection')</b><br>If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor \"dangling.\"",
      "color": "#ffbb00",
      "size": 10,
      "label": "Dangling Database Cursor ('Cursor Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/619.html",
      "id": "CWE-619"
    },
    {
      "Description": "<b>CWE-62: UNIX Hard Link</b><br>The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "UNIX Hard Link",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/62.html",
      "id": "CWE-62"
    },
    {
      "Description": "<b>CWE-620: Unverified Password Change</b><br>When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unverified Password Change",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/620.html",
      "id": "CWE-620"
    },
    {
      "Description": "<b>CWE-621: Variable Extraction Error</b><br>The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Variable Extraction Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/621.html",
      "id": "CWE-621"
    },
    {
      "Description": "<b>CWE-914: Improper Control of Dynamically-Identified Variables</b><br>The product does not properly restrict reading from or writing to dynamically-identified variables.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Control of Dynamically-Identified Variables",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/914.html",
      "id": "CWE-914"
    },
    {
      "Description": "<b>CWE-622: Improper Validation of Function Hook Arguments</b><br>The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Validation of Function Hook Arguments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/622.html",
      "id": "CWE-622"
    },
    {
      "Description": "<b>CWE-623: Unsafe ActiveX Control Marked Safe For Scripting</b><br>An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Unsafe ActiveX Control Marked Safe For Scripting",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/623.html",
      "id": "CWE-623"
    },
    {
      "Description": "<b>CWE-624: Executable Regular Expression Error</b><br>The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Executable Regular Expression Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/624.html",
      "id": "CWE-624"
    },
    {
      "Description": "<b>CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')</b><br>The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/77.html",
      "id": "CWE-77"
    },
    {
      "Description": "<b>CWE-625: Permissive Regular Expression</b><br>The product uses a regular expression that does not sufficiently restrict the set of allowed values.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Permissive Regular Expression",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/625.html",
      "id": "CWE-625"
    },
    {
      "Description": "<b>CWE-626: Null Byte Interaction Error (Poison Null Byte)</b><br>The product does not properly handle null bytes or NUL characters when passing data between different representations or components.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Null Byte Interaction Error (Poison Null Byte)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/626.html",
      "id": "CWE-626"
    },
    {
      "Description": "<b>CWE-627: Dynamic Variable Evaluation</b><br>In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Dynamic Variable Evaluation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/627.html",
      "id": "CWE-627"
    },
    {
      "Description": "<b>CWE-628: Function Call with Incorrectly Specified Arguments</b><br>The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Function Call with Incorrectly Specified Arguments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/628.html",
      "id": "CWE-628"
    },
    {
      "Description": "<b>CWE-637: Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')</b><br>The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.",
      "color": "#ff6200",
      "size": 18,
      "label": "Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/637.html",
      "id": "CWE-637"
    },
    {
      "Description": "<b>CWE-64: Windows Shortcut Following (.LNK)</b><br>The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Windows Shortcut Following (.LNK)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/64.html",
      "id": "CWE-64"
    },
    {
      "Description": "<b>CWE-640: Weak Password Recovery Mechanism for Forgotten Password</b><br>The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Weak Password Recovery Mechanism for Forgotten Password",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/640.html",
      "id": "CWE-640"
    },
    {
      "Description": "<b>CWE-641: Improper Restriction of Names for Files and Other Resources</b><br>The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Names for Files and Other Resources",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/641.html",
      "id": "CWE-641"
    },
    {
      "Description": "<b>CWE-99: Improper Control of Resource Identifiers ('Resource Injection')</b><br>The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Control of Resource Identifiers ('Resource Injection')",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/99.html",
      "id": "CWE-99"
    },
    {
      "Description": "<b>CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')</b><br>The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Data within XPath Expressions ('XPath Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/643.html",
      "id": "CWE-643"
    },
    {
      "Description": "<b>CWE-943: Improper Neutralization of Special Elements in Data Query Logic</b><br>The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Neutralization of Special Elements in Data Query Logic",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/943.html",
      "id": "CWE-943"
    },
    {
      "Description": "<b>CWE-91: XML Injection (aka Blind XPath Injection)</b><br>The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "XML Injection (aka Blind XPath Injection)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/91.html",
      "id": "CWE-91"
    },
    {
      "Description": "<b>CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax</b><br>The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of HTTP Headers for Scripting Syntax",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/644.html",
      "id": "CWE-644"
    },
    {
      "Description": "<b>CWE-645: Overly Restrictive Account Lockout Mechanism</b><br>The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Overly Restrictive Account Lockout Mechanism",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/645.html",
      "id": "CWE-645"
    },
    {
      "Description": "<b>CWE-646: Reliance on File Name or Extension of Externally-Supplied File</b><br>The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Reliance on File Name or Extension of Externally-Supplied File",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/646.html",
      "id": "CWE-646"
    },
    {
      "Description": "<b>CWE-647: Use of Non-Canonical URL Paths for Authorization Decisions</b><br>The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Non-Canonical URL Paths for Authorization Decisions",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/647.html",
      "id": "CWE-647"
    },
    {
      "Description": "<b>CWE-648: Incorrect Use of Privileged APIs</b><br>The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Use of Privileged APIs",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/648.html",
      "id": "CWE-648"
    },
    {
      "Description": "<b>CWE-649: Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking</b><br>The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/649.html",
      "id": "CWE-649"
    },
    {
      "Description": "<b>CWE-65: Windows Hard Link</b><br>The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Windows Hard Link",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/65.html",
      "id": "CWE-65"
    },
    {
      "Description": "<b>CWE-650: Trusting HTTP Permission Methods on the Server Side</b><br>The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Trusting HTTP Permission Methods on the Server Side",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/650.html",
      "id": "CWE-650"
    },
    {
      "Description": "<b>CWE-651: Exposure of WSDL File Containing Sensitive Information</b><br>The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposure of WSDL File Containing Sensitive Information",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/651.html",
      "id": "CWE-651"
    },
    {
      "Description": "<b>CWE-652: Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')</b><br>The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/652.html",
      "id": "CWE-652"
    },
    {
      "Description": "<b>CWE-655: Insufficient Psychological Acceptability</b><br>The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.",
      "color": "#ff6200",
      "size": 18,
      "label": "Insufficient Psychological Acceptability",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/655.html",
      "id": "CWE-655"
    },
    {
      "Description": "<b>CWE-656: Reliance on Security Through Obscurity</b><br>The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.",
      "color": "#ff6200",
      "size": 18,
      "label": "Reliance on Security Through Obscurity",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/656.html",
      "id": "CWE-656"
    },
    {
      "Description": "<b>CWE-66: Improper Handling of File Names that Identify Virtual Resources</b><br>The product does not handle or incorrectly handles a file name that identifies a \"virtual\" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Handling of File Names that Identify Virtual Resources",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/66.html",
      "id": "CWE-66"
    },
    {
      "Description": "<b>CWE-67: Improper Handling of Windows Device Names</b><br>The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Windows Device Names",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/67.html",
      "id": "CWE-67"
    },
    {
      "Description": "<b>CWE-674: Uncontrolled Recursion</b><br>The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
      "color": "#ff6200",
      "size": 18,
      "label": "Uncontrolled Recursion",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/674.html",
      "id": "CWE-674"
    },
    {
      "Description": "<b>CWE-676: Use of Potentially Dangerous Function</b><br>The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Potentially Dangerous Function",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/676.html",
      "id": "CWE-676"
    },
    {
      "Description": "<b>CWE-680: Integer Overflow to Buffer Overflow</b><br>The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Integer Overflow to Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/680.html",
      "id": "CWE-680"
    },
    {
      "Description": "<b>CWE-683: Function Call With Incorrect Order of Arguments</b><br>The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Function Call With Incorrect Order of Arguments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/683.html",
      "id": "CWE-683"
    },
    {
      "Description": "<b>CWE-685: Function Call With Incorrect Number of Arguments</b><br>The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Function Call With Incorrect Number of Arguments",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/685.html",
      "id": "CWE-685"
    },
    {
      "Description": "<b>CWE-686: Function Call With Incorrect Argument Type</b><br>The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Function Call With Incorrect Argument Type",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/686.html",
      "id": "CWE-686"
    },
    {
      "Description": "<b>CWE-688: Function Call With Incorrect Variable or Reference as Argument</b><br>The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Function Call With Incorrect Variable or Reference as Argument",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/688.html",
      "id": "CWE-688"
    },
    {
      "Description": "<b>CWE-689: Permission Race Condition During Resource Copy</b><br>The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Permission Race Condition During Resource Copy",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/689.html",
      "id": "CWE-689"
    },
    {
      "Description": "<b>CWE-69: Improper Handling of Windows ::DATA Alternate Data Stream</b><br>The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Windows ::DATA Alternate Data Stream",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/69.html",
      "id": "CWE-69"
    },
    {
      "Description": "<b>CWE-690: Unchecked Return Value to NULL Pointer Dereference</b><br>The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Unchecked Return Value to NULL Pointer Dereference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/690.html",
      "id": "CWE-690"
    },
    {
      "Description": "<b>CWE-692: Incomplete Denylist to Cross-Site Scripting</b><br>The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.",
      "color": "#9ac20c",
      "size": 10,
      "label": "Incomplete Denylist to Cross-Site Scripting",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Compound",
      "url": "https://cwe.mitre.org/data/definitions/692.html",
      "id": "CWE-692"
    },
    {
      "Description": "<b>CWE-698: Execution After Redirect (EAR)</b><br>The web application sends a redirect to another location, but instead of exiting, it executes additional code.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Execution After Redirect (EAR)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/698.html",
      "id": "CWE-698"
    },
    {
      "Description": "<b>CWE-7: J2EE Misconfiguration: Missing Custom Error Page</b><br>The default error page of a web application should not display sensitive information about the product.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Missing Custom Error Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/7.html",
      "id": "CWE-7"
    },
    {
      "Description": "<b>CWE-708: Incorrect Ownership Assignment</b><br>The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrect Ownership Assignment",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/708.html",
      "id": "CWE-708"
    },
    {
      "Description": "<b>CWE-71: DEPRECATED: Apple '.DS_Store'</b><br>This entry has been deprecated as it represents a specific observed example of a UNIX Hard Link weakness type rather than its own individual weakness type. Please refer to CWE-62.",
      "color": "#e8e66b",
      "size": 10,
      "label": "DEPRECATED: Apple '.DS_Store'",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/71.html",
      "id": "CWE-71"
    },
    {
      "Description": "<b>CWE-72: Improper Handling of Apple HFS+ Alternate Data Stream Path</b><br>The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Handling of Apple HFS+ Alternate Data Stream Path",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/72.html",
      "id": "CWE-72"
    },
    {
      "Description": "<b>CWE-75: Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</b><br>The product does not adequately filter user-controlled input for special elements with control implications.",
      "color": "#ff6200",
      "size": 18,
      "label": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/75.html",
      "id": "CWE-75"
    },
    {
      "Description": "<b>CWE-757: Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')</b><br>A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/757.html",
      "id": "CWE-757"
    },
    {
      "Description": "<b>CWE-759: Use of a One-Way Hash without a Salt</b><br>The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of a One-Way Hash without a Salt",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/759.html",
      "id": "CWE-759"
    },
    {
      "Description": "<b>CWE-916: Use of Password Hash With Insufficient Computational Effort</b><br>The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Password Hash With Insufficient Computational Effort",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/916.html",
      "id": "CWE-916"
    },
    {
      "Description": "<b>CWE-76: Improper Neutralization of Equivalent Special Elements</b><br>The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Equivalent Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/76.html",
      "id": "CWE-76"
    },
    {
      "Description": "<b>CWE-760: Use of a One-Way Hash with a Predictable Salt</b><br>The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of a One-Way Hash with a Predictable Salt",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/760.html",
      "id": "CWE-760"
    },
    {
      "Description": "<b>CWE-761: Free of Pointer not at Start of Buffer</b><br>The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Free of Pointer not at Start of Buffer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/761.html",
      "id": "CWE-761"
    },
    {
      "Description": "<b>CWE-763: Release of Invalid Pointer or Reference</b><br>The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Release of Invalid Pointer or Reference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/763.html",
      "id": "CWE-763"
    },
    {
      "Description": "<b>CWE-764: Multiple Locks of a Critical Resource</b><br>The product locks a critical resource more times than intended, leading to an unexpected state in the system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Multiple Locks of a Critical Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/764.html",
      "id": "CWE-764"
    },
    {
      "Description": "<b>CWE-765: Multiple Unlocks of a Critical Resource</b><br>The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Multiple Unlocks of a Critical Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/765.html",
      "id": "CWE-765"
    },
    {
      "Description": "<b>CWE-766: Critical Data Element Declared Public</b><br>The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Critical Data Element Declared Public",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/766.html",
      "id": "CWE-766"
    },
    {
      "Description": "<b>CWE-767: Access to Critical Private Variable via Public Method</b><br>The product defines a public method that reads or modifies a private variable.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access to Critical Private Variable via Public Method",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/767.html",
      "id": "CWE-767"
    },
    {
      "Description": "<b>CWE-768: Incorrect Short Circuit Evaluation</b><br>The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incorrect Short Circuit Evaluation",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/768.html",
      "id": "CWE-768"
    },
    {
      "Description": "<b>CWE-769: DEPRECATED: Uncontrolled File Descriptor Consumption</b><br>This entry has been deprecated because it was a duplicate of CWE-774. All content has been transferred to CWE-774.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Uncontrolled File Descriptor Consumption",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/769.html",
      "id": "CWE-769"
    },
    {
      "Description": "<b>CWE-771: Missing Reference to Active Allocated Resource</b><br>The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Missing Reference to Active Allocated Resource",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/771.html",
      "id": "CWE-771"
    },
    {
      "Description": "<b>CWE-773: Missing Reference to Active File Descriptor or Handle</b><br>The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Reference to Active File Descriptor or Handle",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/773.html",
      "id": "CWE-773"
    },
    {
      "Description": "<b>CWE-774: Allocation of File Descriptors or Handles Without Limits or Throttling</b><br>The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Allocation of File Descriptors or Handles Without Limits or Throttling",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/774.html",
      "id": "CWE-774"
    },
    {
      "Description": "<b>CWE-775: Missing Release of File Descriptor or Handle after Effective Lifetime</b><br>The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/775.html",
      "id": "CWE-775"
    },
    {
      "Description": "<b>CWE-776: Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')</b><br>The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/776.html",
      "id": "CWE-776"
    },
    {
      "Description": "<b>CWE-777: Regular Expression without Anchors</b><br>The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Regular Expression without Anchors",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/777.html",
      "id": "CWE-777"
    },
    {
      "Description": "<b>CWE-778: Insufficient Logging</b><br>When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Insufficient Logging",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/778.html",
      "id": "CWE-778"
    },
    {
      "Description": "<b>CWE-779: Logging of Excessive Data</b><br>The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Logging of Excessive Data",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/779.html",
      "id": "CWE-779"
    },
    {
      "Description": "<b>CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</b><br>The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/78.html",
      "id": "CWE-78"
    },
    {
      "Description": "<b>CWE-780: Use of RSA Algorithm without OAEP</b><br>The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of RSA Algorithm without OAEP",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/780.html",
      "id": "CWE-780"
    },
    {
      "Description": "<b>CWE-781: Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code</b><br>The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/781.html",
      "id": "CWE-781"
    },
    {
      "Description": "<b>CWE-782: Exposed IOCTL with Insufficient Access Control</b><br>The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Exposed IOCTL with Insufficient Access Control",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/782.html",
      "id": "CWE-782"
    },
    {
      "Description": "<b>CWE-783: Operator Precedence Logic Error</b><br>The product uses an expression in which operator precedence causes incorrect logic to be used.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Operator Precedence Logic Error",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/783.html",
      "id": "CWE-783"
    },
    {
      "Description": "<b>CWE-784: Reliance on Cookies without Validation and Integrity Checking in a Security Decision</b><br>The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Reliance on Cookies without Validation and Integrity Checking in a Security Decision",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/784.html",
      "id": "CWE-784"
    },
    {
      "Description": "<b>CWE-785: Use of Path Manipulation Function without Maximum-sized Buffer</b><br>The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Path Manipulation Function without Maximum-sized Buffer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/785.html",
      "id": "CWE-785"
    },
    {
      "Description": "<b>CWE-789: Memory Allocation with Excessive Size Value</b><br>The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Memory Allocation with Excessive Size Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/789.html",
      "id": "CWE-789"
    },
    {
      "Description": "<b>CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</b><br>The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/79.html",
      "id": "CWE-79"
    },
    {
      "Description": "<b>CWE-790: Improper Filtering of Special Elements</b><br>The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
      "color": "#ff6200",
      "size": 18,
      "label": "Improper Filtering of Special Elements",
      "label_class": "node-label-medium",
      "type": "CWE",
      "abstraction": "Class",
      "url": "https://cwe.mitre.org/data/definitions/790.html",
      "id": "CWE-790"
    },
    {
      "Description": "<b>CWE-791: Incomplete Filtering of Special Elements</b><br>The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incomplete Filtering of Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/791.html",
      "id": "CWE-791"
    },
    {
      "Description": "<b>CWE-792: Incomplete Filtering of One or More Instances of Special Elements</b><br>The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incomplete Filtering of One or More Instances of Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/792.html",
      "id": "CWE-792"
    },
    {
      "Description": "<b>CWE-793: Only Filtering One Instance of a Special Element</b><br>The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Only Filtering One Instance of a Special Element",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/793.html",
      "id": "CWE-793"
    },
    {
      "Description": "<b>CWE-794: Incomplete Filtering of Multiple Instances of Special Elements</b><br>The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Incomplete Filtering of Multiple Instances of Special Elements",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/794.html",
      "id": "CWE-794"
    },
    {
      "Description": "<b>CWE-795: Only Filtering Special Elements at a Specified Location</b><br>The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Only Filtering Special Elements at a Specified Location",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/795.html",
      "id": "CWE-795"
    },
    {
      "Description": "<b>CWE-796: Only Filtering Special Elements Relative to a Marker</b><br>The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. \"at the beginning/end of a string; the second argument\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Only Filtering Special Elements Relative to a Marker",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/796.html",
      "id": "CWE-796"
    },
    {
      "Description": "<b>CWE-797: Only Filtering Special Elements at an Absolute Position</b><br>The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. \"byte number 10\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Only Filtering Special Elements at an Absolute Position",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/797.html",
      "id": "CWE-797"
    },
    {
      "Description": "<b>CWE-8: J2EE Misconfiguration: Entity Bean Declared Remote</b><br>When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Entity Bean Declared Remote",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/8.html",
      "id": "CWE-8"
    },
    {
      "Description": "<b>CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/80.html",
      "id": "CWE-80"
    },
    {
      "Description": "<b>CWE-804: Guessable CAPTCHA</b><br>The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Guessable CAPTCHA",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/804.html",
      "id": "CWE-804"
    },
    {
      "Description": "<b>CWE-805: Buffer Access with Incorrect Length Value</b><br>The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Buffer Access with Incorrect Length Value",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/805.html",
      "id": "CWE-805"
    },
    {
      "Description": "<b>CWE-806: Buffer Access Using Size of Source Buffer</b><br>The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Buffer Access Using Size of Source Buffer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/806.html",
      "id": "CWE-806"
    },
    {
      "Description": "<b>CWE-81: Improper Neutralization of Script in an Error Message Web Page</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Script in an Error Message Web Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/81.html",
      "id": "CWE-81"
    },
    {
      "Description": "<b>CWE-82: Improper Neutralization of Script in Attributes of IMG Tags in a Web Page</b><br>The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/82.html",
      "id": "CWE-82"
    },
    {
      "Description": "<b>CWE-83: Improper Neutralization of Script in Attributes in a Web Page</b><br>The product does not neutralize or incorrectly neutralizes \"javascript:\" or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Script in Attributes in a Web Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/83.html",
      "id": "CWE-83"
    },
    {
      "Description": "<b>CWE-822: Untrusted Pointer Dereference</b><br>The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Untrusted Pointer Dereference",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/822.html",
      "id": "CWE-822"
    },
    {
      "Description": "<b>CWE-823: Use of Out-of-range Pointer Offset</b><br>The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Out-of-range Pointer Offset",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/823.html",
      "id": "CWE-823"
    },
    {
      "Description": "<b>CWE-824: Access of Uninitialized Pointer</b><br>The product accesses or uses a pointer that has not been initialized.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access of Uninitialized Pointer",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/824.html",
      "id": "CWE-824"
    },
    {
      "Description": "<b>CWE-826: Premature Release of Resource During Expected Lifetime</b><br>The product releases a resource that is still intended to be used by itself or another actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Premature Release of Resource During Expected Lifetime",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/826.html",
      "id": "CWE-826"
    },
    {
      "Description": "<b>CWE-827: Improper Control of Document Type Definition</b><br>The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Control of Document Type Definition",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/827.html",
      "id": "CWE-827"
    },
    {
      "Description": "<b>CWE-829: Inclusion of Functionality from Untrusted Control Sphere</b><br>The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inclusion of Functionality from Untrusted Control Sphere",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/829.html",
      "id": "CWE-829"
    },
    {
      "Description": "<b>CWE-830: Inclusion of Web Functionality from an Untrusted Source</b><br>The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Inclusion of Web Functionality from an Untrusted Source",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/830.html",
      "id": "CWE-830"
    },
    {
      "Description": "<b>CWE-831: Signal Handler Function Associated with Multiple Signals</b><br>The product defines a function that is used as a handler for more than one signal.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Signal Handler Function Associated with Multiple Signals",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/831.html",
      "id": "CWE-831"
    },
    {
      "Description": "<b>CWE-832: Unlock of a Resource that is not Locked</b><br>The product attempts to unlock a resource that is not locked.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Unlock of a Resource that is not Locked",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/832.html",
      "id": "CWE-832"
    },
    {
      "Description": "<b>CWE-833: Deadlock</b><br>The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Deadlock",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/833.html",
      "id": "CWE-833"
    },
    {
      "Description": "<b>CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')</b><br>The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/835.html",
      "id": "CWE-835"
    },
    {
      "Description": "<b>CWE-836: Use of Password Hash Instead of Password for Authentication</b><br>The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Password Hash Instead of Password for Authentication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/836.html",
      "id": "CWE-836"
    },
    {
      "Description": "<b>CWE-837: Improper Enforcement of a Single, Unique Action</b><br>The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Enforcement of a Single, Unique Action",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/837.html",
      "id": "CWE-837"
    },
    {
      "Description": "<b>CWE-838: Inappropriate Encoding for Output Context</b><br>The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Inappropriate Encoding for Output Context",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/838.html",
      "id": "CWE-838"
    },
    {
      "Description": "<b>CWE-839: Numeric Range Comparison Without Minimum Check</b><br>The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Numeric Range Comparison Without Minimum Check",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/839.html",
      "id": "CWE-839"
    },
    {
      "Description": "<b>CWE-84: Improper Neutralization of Encoded URI Schemes in a Web Page</b><br>The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Encoded URI Schemes in a Web Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/84.html",
      "id": "CWE-84"
    },
    {
      "Description": "<b>CWE-841: Improper Enforcement of Behavioral Workflow</b><br>The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Enforcement of Behavioral Workflow",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/841.html",
      "id": "CWE-841"
    },
    {
      "Description": "<b>CWE-842: Placement of User into Incorrect Group</b><br>The product or the administrator places a user into an incorrect group.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Placement of User into Incorrect Group",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/842.html",
      "id": "CWE-842"
    },
    {
      "Description": "<b>CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')</b><br>The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/843.html",
      "id": "CWE-843"
    },
    {
      "Description": "<b>CWE-85: Doubled Character XSS Manipulations</b><br>The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Doubled Character XSS Manipulations",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/85.html",
      "id": "CWE-85"
    },
    {
      "Description": "<b>CWE-86: Improper Neutralization of Invalid Characters in Identifiers in Web Pages</b><br>The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/86.html",
      "id": "CWE-86"
    },
    {
      "Description": "<b>CWE-87: Improper Neutralization of Alternate XSS Syntax</b><br>The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Alternate XSS Syntax",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/87.html",
      "id": "CWE-87"
    },
    {
      "Description": "<b>CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')</b><br>The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/88.html",
      "id": "CWE-88"
    },
    {
      "Description": "<b>CWE-9: J2EE Misconfiguration: Weak Access Permissions for EJB Methods</b><br>If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.",
      "color": "#e8e66b",
      "size": 10,
      "label": "J2EE Misconfiguration: Weak Access Permissions for EJB Methods",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/9.html",
      "id": "CWE-9"
    },
    {
      "Description": "<b>CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</b><br>The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/90.html",
      "id": "CWE-90"
    },
    {
      "Description": "<b>CWE-910: Use of Expired File Descriptor</b><br>The product uses or accesses a file descriptor after it has been closed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Use of Expired File Descriptor",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/910.html",
      "id": "CWE-910"
    },
    {
      "Description": "<b>CWE-911: Improper Update of Reference Count</b><br>The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Update of Reference Count",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/911.html",
      "id": "CWE-911"
    },
    {
      "Description": "<b>CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')</b><br>The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/917.html",
      "id": "CWE-917"
    },
    {
      "Description": "<b>CWE-918: Server-Side Request Forgery (SSRF)</b><br>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Server-Side Request Forgery (SSRF)",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/918.html",
      "id": "CWE-918"
    },
    {
      "Description": "<b>CWE-92: DEPRECATED: Improper Sanitization of Custom Special Characters</b><br>This entry has been deprecated. It originally came from PLOVER, which sometimes defined \"other\" and \"miscellaneous\" categories in order to satisfy exhaustiveness requirements for taxonomies. Within the context of CWE, the use of a more abstract entry is preferred in mapping situations. CWE-75 is a more appropriate mapping.",
      "color": "#ffbb00",
      "size": 10,
      "label": "DEPRECATED: Improper Sanitization of Custom Special Characters",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/92.html",
      "id": "CWE-92"
    },
    {
      "Description": "<b>CWE-920: Improper Restriction of Power Consumption</b><br>The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Restriction of Power Consumption",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/920.html",
      "id": "CWE-920"
    },
    {
      "Description": "<b>CWE-921: Storage of Sensitive Data in a Mechanism without Access Control</b><br>The product stores sensitive information in a file system or device that does not have built-in access control.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Storage of Sensitive Data in a Mechanism without Access Control",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/921.html",
      "id": "CWE-921"
    },
    {
      "Description": "<b>CWE-924: Improper Enforcement of Message Integrity During Transmission in a Communication Channel</b><br>The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Enforcement of Message Integrity During Transmission in a Communication Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/924.html",
      "id": "CWE-924"
    },
    {
      "Description": "<b>CWE-925: Improper Verification of Intent by Broadcast Receiver</b><br>The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Verification of Intent by Broadcast Receiver",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/925.html",
      "id": "CWE-925"
    },
    {
      "Description": "<b>CWE-940: Improper Verification of Source of a Communication Channel</b><br>The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Verification of Source of a Communication Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/940.html",
      "id": "CWE-940"
    },
    {
      "Description": "<b>CWE-926: Improper Export of Android Application Components</b><br>The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Export of Android Application Components",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/926.html",
      "id": "CWE-926"
    },
    {
      "Description": "<b>CWE-927: Use of Implicit Intent for Sensitive Communication</b><br>The Android application uses an implicit intent for transmitting sensitive data to other applications.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Use of Implicit Intent for Sensitive Communication",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/927.html",
      "id": "CWE-927"
    },
    {
      "Description": "<b>CWE-939: Improper Authorization in Handler for Custom URL Scheme</b><br>The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Authorization in Handler for Custom URL Scheme",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/939.html",
      "id": "CWE-939"
    },
    {
      "Description": "<b>CWE-941: Incorrectly Specified Destination in a Communication Channel</b><br>The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Incorrectly Specified Destination in a Communication Channel",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/941.html",
      "id": "CWE-941"
    },
    {
      "Description": "<b>CWE-942: Permissive Cross-domain Policy with Untrusted Domains</b><br>The product uses a cross-domain policy file that includes domains that should not be trusted.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Permissive Cross-domain Policy with Untrusted Domains",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/942.html",
      "id": "CWE-942"
    },
    {
      "Description": "<b>CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/95.html",
      "id": "CWE-95"
    },
    {
      "Description": "<b>CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</b><br>The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
      "color": "#ffbb00",
      "size": 10,
      "label": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Base",
      "url": "https://cwe.mitre.org/data/definitions/96.html",
      "id": "CWE-96"
    },
    {
      "Description": "<b>CWE-97: Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</b><br>The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/97.html",
      "id": "CWE-97"
    },
    {
      "Description": "<b>CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</b><br>The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.",
      "color": "#e8e66b",
      "size": 10,
      "label": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "label_class": "node-label-small",
      "type": "CWE",
      "abstraction": "Variant",
      "url": "https://cwe.mitre.org/data/definitions/98.html",
      "id": "CWE-98"
    },
    {
      "Description": "<b>CAPEC-1: Accessing Functionality Not Properly Constrained by ACLs</b><br>In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to.",
      "color": "#75aaff",
      "size": 18,
      "label": "Accessing Functionality Not Properly Constrained by ACLs",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/1.html",
      "id": "CAPEC-1"
    },
    {
      "Description": "<b>CAPEC-122: Privilege Abuse</b><br>An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources.",
      "color": "#2176ff",
      "size": 30,
      "label": "Privilege Abuse",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/122.html",
      "id": "CAPEC-122"
    },
    {
      "Description": "<b>CAPEC-10: Buffer Overflow via Environment Variables</b><br>This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
      "color": "#94ebff",
      "size": 10,
      "label": "Buffer Overflow via Environment Variables",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/10.html",
      "id": "CAPEC-10"
    },
    {
      "Description": "<b>CAPEC-100: Overflow Buffers</b><br>Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
      "color": "#75aaff",
      "size": 18,
      "label": "Overflow Buffers",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/100.html",
      "id": "CAPEC-100"
    },
    {
      "Description": "<b>CAPEC-123: Buffer Manipulation</b><br>An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
      "color": "#2176ff",
      "size": 30,
      "label": "Buffer Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/123.html",
      "id": "CAPEC-123"
    },
    {
      "Description": "<b>CAPEC-101: Server Side Include (SSI) Injection</b><br>An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands.",
      "color": "#94ebff",
      "size": 10,
      "label": "Server Side Include (SSI) Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/101.html",
      "id": "CAPEC-101"
    },
    {
      "Description": "<b>CAPEC-253: Remote Code Inclusion</b><br>The attacker forces an application to load arbitrary code files from a remote location. The attacker could use this to try to load old versions of library files that have known vulnerabilities, to load malicious files that the attacker placed on the remote machine, or to otherwise change the functionality of the targeted application in unexpected ways.",
      "color": "#75aaff",
      "size": 18,
      "label": "Remote Code Inclusion",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/253.html",
      "id": "CAPEC-253"
    },
    {
      "Description": "<b>CAPEC-102: Session Sidejacking</b><br>Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim. This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.",
      "color": "#94ebff",
      "size": 10,
      "label": "Session Sidejacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/102.html",
      "id": "CAPEC-102"
    },
    {
      "Description": "<b>CAPEC-593: Session Hijacking</b><br>This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
      "color": "#75aaff",
      "size": 18,
      "label": "Session Hijacking",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/593.html",
      "id": "CAPEC-593"
    },
    {
      "Description": "<b>CAPEC-103: Clickjacking</b><br>An adversary tricks a victim into unknowingly initiating some action in one system while interacting with the UI from a seemingly completely different, usually an adversary controlled or intended, system.",
      "color": "#75aaff",
      "size": 18,
      "label": "Clickjacking",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/103.html",
      "id": "CAPEC-103"
    },
    {
      "Description": "<b>CAPEC-173: Action Spoofing</b><br>An adversary is able to disguise one action for another and therefore trick a user into initiating one type of action when they intend to initiate a different action. For example, a user might be led to believe that clicking a button will submit a query, but in fact it downloads software. Adversaries may perform this attack through social means, such as by simply convincing a victim to perform the action or relying on a user's natural inclination to do so, or through technical means, such as a clickjacking attack where a user sees one interface but is actually interacting with a second, invisible, interface.",
      "color": "#2176ff",
      "size": 30,
      "label": "Action Spoofing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/173.html",
      "id": "CAPEC-173"
    },
    {
      "Description": "<b>CAPEC-104: Cross Zone Scripting</b><br>An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security.",
      "color": "#75aaff",
      "size": 18,
      "label": "Cross Zone Scripting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/104.html",
      "id": "CAPEC-104"
    },
    {
      "Description": "<b>CAPEC-233: Privilege Escalation</b><br>An adversary exploits a weakness enabling them to elevate their privilege and perform an action that they are not supposed to be authorized to perform.",
      "color": "#2176ff",
      "size": 30,
      "label": "Privilege Escalation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/233.html",
      "id": "CAPEC-233"
    },
    {
      "Description": "<b>CAPEC-105: HTTP Request Splitting</b><br>An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to split a single HTTP request into multiple unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server). \n See CanPrecede relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Request Splitting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/105.html",
      "id": "CAPEC-105"
    },
    {
      "Description": "<b>CAPEC-220: Client-Server Protocol Manipulation</b><br>An adversary takes advantage of weaknesses in the protocol by which a client and server are communicating to perform unexpected actions. Communication protocols are necessary to transfer messages between client and server applications. Moreover, different protocols may be used for different types of interactions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Client-Server Protocol Manipulation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/220.html",
      "id": "CAPEC-220"
    },
    {
      "Description": "<b>CAPEC-107: Cross Site Tracing</b><br>Cross Site Tracing (XST) enables an adversary to steal the victim's session cookie and possibly other authentication credentials transmitted in the header of the HTTP request when the victim's browser communicates to a destination system's web server.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross Site Tracing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/107.html",
      "id": "CAPEC-107"
    },
    {
      "Description": "<b>CAPEC-108: Command Line Execution through SQL Injection</b><br>An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
      "color": "#94ebff",
      "size": 10,
      "label": "Command Line Execution through SQL Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/108.html",
      "id": "CAPEC-108"
    },
    {
      "Description": "<b>CAPEC-66: SQL Injection</b><br>This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input.",
      "color": "#75aaff",
      "size": 18,
      "label": "SQL Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/66.html",
      "id": "CAPEC-66"
    },
    {
      "Description": "<b>CAPEC-109: Object Relational Mapping Injection</b><br>An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject their own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
      "color": "#94ebff",
      "size": 10,
      "label": "Object Relational Mapping Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/109.html",
      "id": "CAPEC-109"
    },
    {
      "Description": "<b>CAPEC-11: Cause Web Server Misclassification</b><br>An attack of this type exploits a Web server's decision to take action based on filename or file extension. Because different file types are handled by different server processes, misclassification may force the Web server to take unexpected action, or expected actions in an unexpected sequence. This may cause the server to exhaust resources, supply debug or system data to the attacker, or bind an attacker to a remote process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cause Web Server Misclassification",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/11.html",
      "id": "CAPEC-11"
    },
    {
      "Description": "<b>CAPEC-635: Alternative Execution Due to Deceptive Filenames</b><br>The extension of a file name is often used in various contexts to determine the application that is used to open and use it. If an attacker can cause an alternative application to be used, it may be able to execute malicious code, cause a denial of service or expose sensitive information.",
      "color": "#75aaff",
      "size": 18,
      "label": "Alternative Execution Due to Deceptive Filenames",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/635.html",
      "id": "CAPEC-635"
    },
    {
      "Description": "<b>CAPEC-110: SQL Injection through SOAP Parameter Tampering</b><br>An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
      "color": "#94ebff",
      "size": 10,
      "label": "SQL Injection through SOAP Parameter Tampering",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/110.html",
      "id": "CAPEC-110"
    },
    {
      "Description": "<b>CAPEC-111: JSON Hijacking (aka JavaScript Hijacking)</b><br>An attacker targets a system that uses JavaScript Object Notation (JSON) as a transport mechanism between the client and the server (common in Web 2.0 systems using AJAX) to steal possibly confidential information transmitted from the server back to the client inside the JSON object by taking advantage of the loophole in the browser's Same Origin Policy that does not prohibit JavaScript from one website to be included and executed in the context of another website.",
      "color": "#75aaff",
      "size": 18,
      "label": "JSON Hijacking (aka JavaScript Hijacking)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/111.html",
      "id": "CAPEC-111"
    },
    {
      "Description": "<b>CAPEC-212: Functionality Misuse</b><br>An adversary leverages a legitimate capability of an application in such a way as to achieve a negative technical impact. The system functionality is not altered or modified but used in a way that was not intended. This is often accomplished through the overuse of a specific functionality or by leveraging functionality with design flaws that enables the adversary to gain access to unauthorized, sensitive data.",
      "color": "#2176ff",
      "size": 30,
      "label": "Functionality Misuse",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/212.html",
      "id": "CAPEC-212"
    },
    {
      "Description": "<b>CAPEC-112: Brute Force</b><br>In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset.",
      "color": "#2176ff",
      "size": 30,
      "label": "Brute Force",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/112.html",
      "id": "CAPEC-112"
    },
    {
      "Description": "<b>CAPEC-113: Interface Manipulation</b><br>An adversary manipulates the use or processing of an interface (e.g. Application Programming Interface (API) or System-on-Chip (SoC)) resulting in an adverse impact upon the security of the system implementing the interface. This can allow the adversary to bypass access control and/or execute functionality not intended by the interface implementation, possibly compromising the system which integrates the interface. Interface manipulation can take on a number of forms including forcing the unexpected use of an interface or the use of an interface in an unintended way.",
      "color": "#2176ff",
      "size": 30,
      "label": "Interface Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/113.html",
      "id": "CAPEC-113"
    },
    {
      "Description": "<b>CAPEC-114: Authentication Abuse</b><br>An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
      "color": "#2176ff",
      "size": 30,
      "label": "Authentication Abuse",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/114.html",
      "id": "CAPEC-114"
    },
    {
      "Description": "<b>CAPEC-115: Authentication Bypass</b><br>An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
      "color": "#2176ff",
      "size": 30,
      "label": "Authentication Bypass",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/115.html",
      "id": "CAPEC-115"
    },
    {
      "Description": "<b>CAPEC-116: Excavation</b><br>An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes.",
      "color": "#2176ff",
      "size": 30,
      "label": "Excavation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/116.html",
      "id": "CAPEC-116"
    },
    {
      "Description": "<b>CAPEC-117: Interception</b><br>An adversary monitors data streams to or from the target for information gathering purposes. This attack may be undertaken to solely gather sensitive information or to support a further attack against the target. This attack pattern can involve sniffing network traffic as well as other types of data streams (e.g. radio). The adversary can attempt to initiate the establishment of a data stream or passively observe the communications as they unfold. In all variants of this attack, the adversary is not the intended recipient of the data stream. In contrast to other means of gathering information (e.g., targeting data leaks), the adversary must actively position themself so as to observe explicit data channels (e.g. network traffic) and read the content. However, this attack differs from a Adversary-In-the-Middle (CAPEC-94) attack, as the adversary does not alter the content of the communications nor forward data to the intended recipient.",
      "color": "#2176ff",
      "size": 30,
      "label": "Interception",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/117.html",
      "id": "CAPEC-117"
    },
    {
      "Description": "<b>CAPEC-12: Choosing Message Identifier</b><br>This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
      "color": "#75aaff",
      "size": 18,
      "label": "Choosing Message Identifier",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/12.html",
      "id": "CAPEC-12"
    },
    {
      "Description": "<b>CAPEC-216: Communication Channel Manipulation</b><br>An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.",
      "color": "#2176ff",
      "size": 30,
      "label": "Communication Channel Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/216.html",
      "id": "CAPEC-216"
    },
    {
      "Description": "<b>CAPEC-120: Double Encoding</b><br>The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. This may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as those that might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings, but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target.",
      "color": "#94ebff",
      "size": 10,
      "label": "Double Encoding",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/120.html",
      "id": "CAPEC-120"
    },
    {
      "Description": "<b>CAPEC-267: Leverage Alternate Encoding</b><br>An adversary leverages the possibility to encode potentially harmful input or content used by applications such that the applications are ineffective at validating this encoding standard.",
      "color": "#75aaff",
      "size": 18,
      "label": "Leverage Alternate Encoding",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/267.html",
      "id": "CAPEC-267"
    },
    {
      "Description": "<b>CAPEC-121: Exploit Non-Production Interfaces</b><br>An adversary exploits a sample, demonstration, test, or debug interface that is unintentionally enabled on a production system, with the goal of gleaning information or leveraging functionality that would otherwise be unavailable.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploit Non-Production Interfaces",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/121.html",
      "id": "CAPEC-121"
    },
    {
      "Description": "<b>CAPEC-124: Shared Resource Manipulation</b><br>An adversary exploits a resource shared between multiple applications, an application pool or hardware pin multiplexing to affect behavior. Resources may be shared between multiple applications or between multiple threads of a single application. Resource sharing is usually accomplished through mutual access to a single memory location or multiplexed hardware pins. If an adversary can manipulate this shared resource (usually by co-opting one of the applications or threads) the other applications or threads using the shared resource will often continue to trust the validity of the compromised shared resource and use it in their calculations. This can result in invalid trust assumptions, corruption of additional data through the normal operations of the other users of the shared resource, or even cause a crash or compromise of the sharing applications.",
      "color": "#2176ff",
      "size": 30,
      "label": "Shared Resource Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/124.html",
      "id": "CAPEC-124"
    },
    {
      "Description": "<b>CAPEC-125: Flooding</b><br>An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target.",
      "color": "#2176ff",
      "size": 30,
      "label": "Flooding",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/125.html",
      "id": "CAPEC-125"
    },
    {
      "Description": "<b>CAPEC-126: Path Traversal</b><br>An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files.",
      "color": "#75aaff",
      "size": 18,
      "label": "Path Traversal",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/126.html",
      "id": "CAPEC-126"
    },
    {
      "Description": "<b>CAPEC-153: Input Data Manipulation</b><br>An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target.",
      "color": "#2176ff",
      "size": 30,
      "label": "Input Data Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/153.html",
      "id": "CAPEC-153"
    },
    {
      "Description": "<b>CAPEC-127: Directory Indexing</b><br>An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Directory Indexing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/127.html",
      "id": "CAPEC-127"
    },
    {
      "Description": "<b>CAPEC-54: Query System for Information</b><br>An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide.",
      "color": "#75aaff",
      "size": 18,
      "label": "Query System for Information",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/54.html",
      "id": "CAPEC-54"
    },
    {
      "Description": "<b>CAPEC-128: Integer Attacks</b><br>An attacker takes advantage of the structure of integer variables to cause these variables to assume values that are not expected by an application. For example, adding one to the largest positive integer in a signed integer variable results in a negative number. Negative numbers may be illegal in an application and the application may prevent an attacker from providing them directly, but the application may not consider that adding two positive numbers can create a negative number do to the structure of integer storage formats.",
      "color": "#75aaff",
      "size": 18,
      "label": "Integer Attacks",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/128.html",
      "id": "CAPEC-128"
    },
    {
      "Description": "<b>CAPEC-129: Pointer Manipulation</b><br>This attack pattern involves an adversary manipulating a pointer within a target application resulting in the application accessing an unintended memory location. This can result in the crashing of the application or, for certain pointer values, access to data that would not normally be possible or the execution of arbitrary code. Since pointers are simply integer variables, Integer Attacks may often be used in Pointer Attacks.",
      "color": "#2176ff",
      "size": 30,
      "label": "Pointer Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/129.html",
      "id": "CAPEC-129"
    },
    {
      "Description": "<b>CAPEC-13: Subverting Environment Variable Values</b><br>The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Subverting Environment Variable Values",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/13.html",
      "id": "CAPEC-13"
    },
    {
      "Description": "<b>CAPEC-77: Manipulating User-Controlled Variables</b><br>This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating User-Controlled Variables",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/77.html",
      "id": "CAPEC-77"
    },
    {
      "Description": "<b>CAPEC-130: Excessive Allocation</b><br>An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.",
      "color": "#2176ff",
      "size": 30,
      "label": "Excessive Allocation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/130.html",
      "id": "CAPEC-130"
    },
    {
      "Description": "<b>CAPEC-131: Resource Leak Exposure</b><br>An adversary utilizes a resource leak on the target to deplete the quantity of the resource available to service legitimate requests.",
      "color": "#2176ff",
      "size": 30,
      "label": "Resource Leak Exposure",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/131.html",
      "id": "CAPEC-131"
    },
    {
      "Description": "<b>CAPEC-132: Symlink Attack</b><br>An adversary positions a symbolic link in such a manner that the targeted user or application accesses the link's endpoint, assuming that it is accessing a file with the link's name.",
      "color": "#94ebff",
      "size": 10,
      "label": "Symlink Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/132.html",
      "id": "CAPEC-132"
    },
    {
      "Description": "<b>CAPEC-159: Redirect Access to Libraries</b><br>An adversary exploits a weakness in the way an application searches for external libraries to manipulate the execution flow to point to an adversary supplied library or code base. This pattern of attack allows the adversary to compromise the application or server via the execution of unauthorized code. An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. If an adversary can redirect an application's attempts to access these libraries to other libraries that the adversary supplies, the adversary will be able to force the targeted application to execute arbitrary code. This is especially dangerous if the targeted application has enhanced privileges. Access can be redirected through a number of techniques, including the use of symbolic links, search path modification, and relative path manipulation.",
      "color": "#75aaff",
      "size": 18,
      "label": "Redirect Access to Libraries",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/159.html",
      "id": "CAPEC-159"
    },
    {
      "Description": "<b>CAPEC-133: Try All Common Switches</b><br>An attacker attempts to invoke all common switches and options in the target application for the purpose of discovering weaknesses in the target. For example, in some applications, adding a --debug switch causes debugging information to be displayed, which can sometimes reveal sensitive processing or configuration information to an attacker. This attack differs from other forms of API abuse in that the attacker is indiscriminately attempting to invoke options in the hope that one of them will work rather than specifically targeting a known option. Nonetheless, even if the attacker is familiar with the published options of a targeted application this attack method may still be fruitful as it might discover unpublicized functionality.",
      "color": "#75aaff",
      "size": 18,
      "label": "Try All Common Switches",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/133.html",
      "id": "CAPEC-133"
    },
    {
      "Description": "<b>CAPEC-134: Email Injection</b><br>An adversary manipulates the headers and content of an email message by injecting data via the use of delimiter characters native to the protocol.",
      "color": "#75aaff",
      "size": 18,
      "label": "Email Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/134.html",
      "id": "CAPEC-134"
    },
    {
      "Description": "<b>CAPEC-137: Parameter Injection</b><br>An adversary manipulates the content of request parameters for the purpose of undermining the security of the target. Some parameter encodings use text characters as separators. For example, parameters in a HTTP GET message are encoded as name-value pairs separated by an ampersand (&). If an attacker can supply text strings that are used to fill in these parameters, then they can inject special characters used in the encoding scheme to add or modify parameters. For example, if user input is fed directly into an HTTP GET request and the user provides the value \"myInput&new_param=myValue\", then the input parameter is set to myInput, but a new parameter (new_param) is also added with a value of myValue. This can significantly change the meaning of the query that is processed by the server. Any encoding scheme where parameters are identified and separated by text characters is potentially vulnerable to this attack - the HTTP GET encoding used above is just one example.",
      "color": "#2176ff",
      "size": 30,
      "label": "Parameter Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/137.html",
      "id": "CAPEC-137"
    },
    {
      "Description": "<b>CAPEC-135: Format String Injection</b><br>An adversary includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An adversary can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the adversary can write to the program stack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Format String Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/135.html",
      "id": "CAPEC-135"
    },
    {
      "Description": "<b>CAPEC-136: LDAP Injection</b><br>An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
      "color": "#75aaff",
      "size": 18,
      "label": "LDAP Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/136.html",
      "id": "CAPEC-136"
    },
    {
      "Description": "<b>CAPEC-248: Command Injection</b><br>An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.",
      "color": "#2176ff",
      "size": 30,
      "label": "Command Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/248.html",
      "id": "CAPEC-248"
    },
    {
      "Description": "<b>CAPEC-138: Reflection Injection</b><br>An adversary supplies a value to the target application which is then used by reflection methods to identify a class, method, or field. For example, in the Java programming language the reflection libraries permit an application to inspect, load, and invoke classes and their components by name. If an adversary can control the input into these methods including the name of the class/method/field or the parameters passed to methods, they can cause the targeted application to invoke incorrect methods, read random fields, or even to load and utilize malicious classes that the adversary created. This can lead to the application revealing sensitive information, returning incorrect results, or even having the adversary take control of the targeted application.",
      "color": "#75aaff",
      "size": 18,
      "label": "Reflection Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/138.html",
      "id": "CAPEC-138"
    },
    {
      "Description": "<b>CAPEC-139: Relative Path Traversal</b><br>An attacker exploits a weakness in input validation on the target by supplying a specially constructed path utilizing dot and slash characters for the purpose of obtaining access to arbitrary files or resources. An attacker modifies a known path on the target in order to reach material that is not available through intended channels. These attacks normally involve adding additional path separators (/ or \\) and/or dots (.), or encodings thereof, in various combinations in order to reach parent directories or entirely separate trees of the target's directory structure.",
      "color": "#94ebff",
      "size": 10,
      "label": "Relative Path Traversal",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/139.html",
      "id": "CAPEC-139"
    },
    {
      "Description": "<b>CAPEC-14: Client-side Injection-induced Buffer Overflow</b><br>This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.",
      "color": "#94ebff",
      "size": 10,
      "label": "Client-side Injection-induced Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/14.html",
      "id": "CAPEC-14"
    },
    {
      "Description": "<b>CAPEC-140: Bypassing of Intermediate Forms in Multiple-Form Sets</b><br>Some web applications require users to submit information through an ordered sequence of web forms. This is often done if there is a very large amount of information being collected or if information on earlier forms is used to pre-populate fields or determine which additional information the application needs to collect. An attacker who knows the names of the various forms in the sequence may be able to explicitly type in the name of a later form and navigate to it without first going through the previous forms. This can result in incomplete collection of information, incorrect assumptions about the information submitted by the attacker, or other problems that can impair the functioning of the application.",
      "color": "#75aaff",
      "size": 18,
      "label": "Bypassing of Intermediate Forms in Multiple-Form Sets",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/140.html",
      "id": "CAPEC-140"
    },
    {
      "Description": "<b>CAPEC-74: Manipulating State</b><br>The adversary modifies state information maintained by the target software or causes a state transition in hardware. If successful, the target will use this tainted state and execute in an unintended manner. \n State management is an important function within a software application. User state maintained by the application can include usernames, payment information, browsing history as well as application-specific contents such as items in a shopping cart. Manipulating user state can be employed by an adversary to elevate privilege, conduct fraudulent transactions or otherwise modify the flow of the application to derive certain benefits. \n If there is a hardware logic error in a finite state machine, the adversary can use this to put the system in an undefined state which could cause a denial of service or exposure of secure data.",
      "color": "#2176ff",
      "size": 30,
      "label": "Manipulating State",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/74.html",
      "id": "CAPEC-74"
    },
    {
      "Description": "<b>CAPEC-141: Cache Poisoning</b><br>An attacker exploits the functionality of cache technologies to cause specific data to be cached that aids the attackers' objectives. This describes any attack whereby an attacker places incorrect or harmful material in cache. The targeted cache can be an application's cache (e.g. a web browser cache) or a public cache (e.g. a DNS or ARP cache). Until the cache is refreshed, most applications or clients will treat the corrupted cache value as valid. This can lead to a wide range of exploits including redirecting web browsers towards sites that install malware and repeatedly incorrect calculations based on the incorrect value.",
      "color": "#75aaff",
      "size": 18,
      "label": "Cache Poisoning",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/141.html",
      "id": "CAPEC-141"
    },
    {
      "Description": "<b>CAPEC-161: Infrastructure Manipulation</b><br>An attacker exploits characteristics of the infrastructure of a network entity in order to perpetrate attacks or information gathering on network objects or effect a change in the ordinary information flow between network objects. Most often, this involves manipulation of the routing of network messages so, instead of arriving at their proper destination, they are directed towards an entity of the attackers' choosing, usually a server controlled by the attacker. The victim is often unaware that their messages are not being processed correctly. For example, a targeted client may believe they are connecting to their own bank but, in fact, be connecting to a Pharming site controlled by the attacker which then collects the user's login information in order to hijack the actual bank account.",
      "color": "#2176ff",
      "size": 30,
      "label": "Infrastructure Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/161.html",
      "id": "CAPEC-161"
    },
    {
      "Description": "<b>CAPEC-142: DNS Cache Poisoning</b><br>A domain name server translates a domain name (such as www.example.com) into an IP address that Internet hosts use to contact Internet resources. An adversary modifies a public DNS cache to cause certain names to resolve to incorrect addresses that the adversary specifies. The result is that client applications that rely upon the targeted cache for domain name resolution will be directed not to the actual address of the specified domain name but to some other address. Adversaries can use this to herd clients to sites that install malware on the victim's computer or to masquerade as part of a Pharming attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Cache Poisoning",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/142.html",
      "id": "CAPEC-142"
    },
    {
      "Description": "<b>CAPEC-143: Detect Unpublicized Web Pages</b><br>An adversary searches a targeted web site for web pages that have not been publicized. In doing this, the adversary may be able to gain access to information that the targeted site did not intend to make public.",
      "color": "#94ebff",
      "size": 10,
      "label": "Detect Unpublicized Web Pages",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/143.html",
      "id": "CAPEC-143"
    },
    {
      "Description": "<b>CAPEC-150: Collect Data from Common Resource Locations</b><br>An adversary exploits well-known locations for resources for the purposes of undermining the security of the target. In many, if not most systems, files and resources are organized in a default tree structure. This can be useful for adversaries because they often know where to look for resources or files that are necessary for attacks. Even when the precise location of a targeted resource may not be known, naming conventions may indicate a small area of the target machine's file tree where the resources are typically located. For example, configuration files are normally stored in the /etc director on Unix systems. Adversaries can take advantage of this to commit other types of attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Collect Data from Common Resource Locations",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/150.html",
      "id": "CAPEC-150"
    },
    {
      "Description": "<b>CAPEC-144: Detect Unpublicized Web Services</b><br>An adversary searches a targeted web site for web services that have not been publicized. This attack can be especially dangerous since unpublished but available services may not have adequate security controls placed upon them given that an administrator may believe they are unreachable.",
      "color": "#94ebff",
      "size": 10,
      "label": "Detect Unpublicized Web Services",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/144.html",
      "id": "CAPEC-144"
    },
    {
      "Description": "<b>CAPEC-145: Checksum Spoofing</b><br>An adversary spoofs a checksum message for the purpose of making a payload appear to have a valid corresponding checksum. Checksums are used to verify message integrity. They consist of some value based on the value of the message they are protecting. Hash codes are a common checksum mechanism. Both the sender and recipient are able to compute the checksum based on the contents of the message. If the message contents change between the sender and recipient, the sender and recipient will compute different checksum values. Since the sender's checksum value is transmitted with the message, the recipient would know that a modification occurred. In checksum spoofing an adversary modifies the message body and then modifies the corresponding checksum so that the recipient's checksum calculation will match the checksum (created by the adversary) in the message. This would prevent the recipient from realizing that a change occurred.",
      "color": "#94ebff",
      "size": 10,
      "label": "Checksum Spoofing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/145.html",
      "id": "CAPEC-145"
    },
    {
      "Description": "<b>CAPEC-148: Content Spoofing</b><br>An adversary modifies content to make it contain something other than what the original content producer intended while keeping the apparent source of the content unchanged. The term content spoofing is most often used to describe modification of web pages hosted by a target to display the adversary's content instead of the owner's content. However, any content can be spoofed, including the content of email messages, file transfers, or the content of other network communication protocols. Content can be modified at the source (e.g. modifying the source file for a web page) or in transit (e.g. intercepting and modifying a message between the sender and recipient). Usually, the adversary will attempt to hide the fact that the content has been modified, but in some cases, such as with web site defacement, this is not necessary. Content Spoofing can lead to malware exposure, financial fraud (if the content governs financial transactions), privacy violations, and other unwanted outcomes.",
      "color": "#2176ff",
      "size": 30,
      "label": "Content Spoofing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/148.html",
      "id": "CAPEC-148"
    },
    {
      "Description": "<b>CAPEC-146: XML Schema Poisoning</b><br>An adversary corrupts or modifies the content of XML schema information passed between a client and server for the purpose of undermining the security of the target. XML Schemas provide the structure and content definitions for XML documents. Schema poisoning is the ability to manipulate a schema either by replacing or modifying it to compromise the programs that process documents that use this schema.",
      "color": "#94ebff",
      "size": 10,
      "label": "XML Schema Poisoning",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/146.html",
      "id": "CAPEC-146"
    },
    {
      "Description": "<b>CAPEC-271: Schema Poisoning</b><br>An adversary corrupts or modifies the content of a schema for the purpose of undermining the security of the target. Schemas provide the structure and content definitions for resources used by an application. By replacing or modifying a schema, the adversary can affect how the application handles or interprets a resource, often leading to possible denial of service, entering into an unexpected state, or recording incomplete data.",
      "color": "#75aaff",
      "size": 18,
      "label": "Schema Poisoning",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/271.html",
      "id": "CAPEC-271"
    },
    {
      "Description": "<b>CAPEC-147: XML Ping of the Death</b><br>An attacker initiates a resource depletion attack where a large number of small XML messages are delivered at a sufficiently rapid rate to cause a denial of service or crash of the target. Transactions such as repetitive SOAP transactions can deplete resources faster than a simple flooding attack because of the additional resources used by the SOAP protocol and the resources necessary to process SOAP messages. The transactions used are immaterial as long as they cause resource utilization on the target. In other words, this is a normal flooding attack augmented by using messages that will require extra processing on the target.",
      "color": "#94ebff",
      "size": 10,
      "label": "XML Ping of the Death",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/147.html",
      "id": "CAPEC-147"
    },
    {
      "Description": "<b>CAPEC-528: XML Flood</b><br>An adversary may execute a flooding attack using XML messages with the intent to deny legitimate users access to a web service. These attacks are accomplished by sending a large number of XML based requests and letting the service attempt to parse each one. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing.",
      "color": "#75aaff",
      "size": 18,
      "label": "XML Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/528.html",
      "id": "CAPEC-528"
    },
    {
      "Description": "<b>CAPEC-149: Explore for Predictable Temporary File Names</b><br>An attacker explores a target to identify the names and locations of predictable temporary files for the purpose of launching further attacks against the target. This involves analyzing naming conventions and storage locations of the temporary files created by a target application. If an attacker can predict the names of temporary files they can use this information to mount other attacks, such as information gathering and symlink attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Explore for Predictable Temporary File Names",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/149.html",
      "id": "CAPEC-149"
    },
    {
      "Description": "<b>CAPEC-497: File Discovery</b><br>An adversary engages in probing and exploration activities to determine if common key files exists. Such files often contain configuration and security parameters of the targeted application, system or network. Using this knowledge may often pave the way for more damaging attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "File Discovery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/497.html",
      "id": "CAPEC-497"
    },
    {
      "Description": "<b>CAPEC-15: Command Delimiters</b><br>An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
      "color": "#75aaff",
      "size": 18,
      "label": "Command Delimiters",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/15.html",
      "id": "CAPEC-15"
    },
    {
      "Description": "<b>CAPEC-151: Identity Spoofing</b><br>Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
      "color": "#2176ff",
      "size": 30,
      "label": "Identity Spoofing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/151.html",
      "id": "CAPEC-151"
    },
    {
      "Description": "<b>CAPEC-154: Resource Location Spoofing</b><br>An adversary deceives an application or user and convinces them to request a resource from an unintended location. By spoofing the location, the adversary can cause an alternate resource to be used, often one that the adversary controls and can be used to help them achieve their malicious goals.",
      "color": "#2176ff",
      "size": 30,
      "label": "Resource Location Spoofing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/154.html",
      "id": "CAPEC-154"
    },
    {
      "Description": "<b>CAPEC-155: Screen Temporary Files for Sensitive Information</b><br>An adversary exploits the temporary, insecure storage of information by monitoring the content of files used to store temp data during an application's routine execution flow. Many applications use temporary files to accelerate processing or to provide records of state across multiple executions of the application. Sometimes, however, these temporary files may end up storing sensitive information. By screening an application's temporary files, an adversary might be able to discover such sensitive information. For example, web browsers often cache content to accelerate subsequent lookups. If the content contains sensitive information then the adversary could recover this from the web cache.",
      "color": "#94ebff",
      "size": 10,
      "label": "Screen Temporary Files for Sensitive Information",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/155.html",
      "id": "CAPEC-155"
    },
    {
      "Description": "<b>CAPEC-157: Sniffing Attacks</b><br>In this attack pattern, the adversary intercepts information transmitted between two third parties. The adversary must be able to observe, read, and/or hear the communication traffic, but not necessarily block the communication or change its content. Any transmission medium can theoretically be sniffed if the adversary can examine the contents between the sender and recipient. Sniffing Attacks are similar to Adversary-In-The-Middle attacks (CAPEC-94), but are entirely passive. AiTM attacks are predominantly active and often alter the content of the communications themselves.",
      "color": "#75aaff",
      "size": 18,
      "label": "Sniffing Attacks",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/157.html",
      "id": "CAPEC-157"
    },
    {
      "Description": "<b>CAPEC-158: Sniffing Network Traffic</b><br>In this attack pattern, the adversary monitors network traffic between nodes of a public or multicast network in an attempt to capture sensitive information at the protocol level. Network sniffing applications can reveal TCP/IP, DNS, Ethernet, and other low-level network communication information. The adversary takes a passive role in this attack pattern and simply observes and analyzes the traffic. The adversary may precipitate or indirectly influence the content of the observed transaction, but is never the intended recipient of the target information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Sniffing Network Traffic",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/158.html",
      "id": "CAPEC-158"
    },
    {
      "Description": "<b>CAPEC-16: Dictionary-based Password Attack</b><br>An attacker tries each of the words in a dictionary as passwords to gain access to the system via some user's account. If the password chosen by the user was a word within the dictionary, this attack will be successful (in the absence of other mitigations). This is a specific instance of the password brute forcing attack pattern. \n Dictionary Attacks differ from similar attacks such as Password Spraying (CAPEC-565) and Credential Stuffing (CAPEC-600), since they leverage unknown username/password combinations and don't care about inducing account lockouts.",
      "color": "#94ebff",
      "size": 10,
      "label": "Dictionary-based Password Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/16.html",
      "id": "CAPEC-16"
    },
    {
      "Description": "<b>CAPEC-49: Password Brute Forcing</b><br>An adversary tries every possible value for a password until they succeed. A brute force attack, if feasible computationally, will always be successful because it will essentially go through all possible passwords given the alphabet used (lower case letters, upper case letters, numbers, symbols, etc.) and the maximum length of the password.",
      "color": "#75aaff",
      "size": 18,
      "label": "Password Brute Forcing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/49.html",
      "id": "CAPEC-49"
    },
    {
      "Description": "<b>CAPEC-160: Exploit Script-Based APIs</b><br>Some APIs support scripting instructions as arguments. Methods that take scripted instructions (or references to scripted instructions) can be very flexible and powerful. However, if an attacker can specify the script that serves as input to these methods they can gain access to a great deal of functionality. For example, HTML pages support <script> tags that allow scripting languages to be embedded in the page and then interpreted by the receiving web browser. If the content provider is malicious, these scripts can compromise the client application. Some applications may even execute the scripts under their own identity (rather than the identity of the user providing the script) which can allow attackers to perform activities that would otherwise be denied to them.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploit Script-Based APIs",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/160.html",
      "id": "CAPEC-160"
    },
    {
      "Description": "<b>CAPEC-162: Manipulating Hidden Fields</b><br>An adversary exploits a weakness in the server's trust of client-side processing by modifying data on the client-side, such as price information, and then submitting this data to the server, which processes the modified data. For example, eShoplifting is a data manipulation attack against an on-line merchant during a purchasing transaction. The manipulation of price, discount or quantity fields in the transaction message allows the adversary to acquire items at a lower cost than the merchant intended. The adversary performs a normal purchasing transaction but edits hidden fields within the HTML form response that store price or other information to give themselves a better deal. The merchant then uses the modified pricing information in calculating the cost of the selected items.",
      "color": "#94ebff",
      "size": 10,
      "label": "Manipulating Hidden Fields",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/162.html",
      "id": "CAPEC-162"
    },
    {
      "Description": "<b>CAPEC-163: Spear Phishing</b><br>An adversary targets a specific user or group with a Phishing (CAPEC-98) attack tailored to a category of users in order to have maximum relevance and deceptive capability. Spear Phishing is an enhanced version of the Phishing attack targeted to a specific user or group. The quality of the targeted email is usually enhanced by appearing to come from a known or trusted entity. If the email account of some trusted entity has been compromised the message may be digitally signed. The message will contain information specific to the targeted users that will enhance the probability that they will follow the URL to the compromised site. For example, the message may indicate knowledge of the targets employment, residence, interests, or other information that suggests familiarity. As soon as the user follows the instructions in the message, the attack proceeds as a standard Phishing attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Spear Phishing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/163.html",
      "id": "CAPEC-163"
    },
    {
      "Description": "<b>CAPEC-98: Phishing</b><br>Phishing is a social engineering technique where an attacker masquerades as a legitimate entity with which the victim might do business in order to prompt the user to reveal some confidential information (very frequently authentication credentials) that can later be used by an attacker. Phishing is essentially a form of information gathering or \"fishing\" for information.",
      "color": "#75aaff",
      "size": 18,
      "label": "Phishing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/98.html",
      "id": "CAPEC-98"
    },
    {
      "Description": "<b>CAPEC-164: Mobile Phishing</b><br>An adversary targets mobile phone users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Mobile Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a text or SMS message, rather than email. The user is enticed to provide information or visit a compromised web site via this message. Apart from the manner in which the attack is initiated, the attack proceeds as a standard Phishing attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Mobile Phishing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/164.html",
      "id": "CAPEC-164"
    },
    {
      "Description": "<b>CAPEC-165: File Manipulation</b><br>An attacker modifies file contents or attributes (such as extensions or names) of files in a manner to cause incorrect processing by an application. Attackers use this class of attacks to cause applications to enter unstable states, overwrite or expose sensitive information, and even execute arbitrary code with the application's privileges. This class of attacks differs from attacks on configuration information (even if file-based) in that file manipulation causes the file processing to result in non-standard behaviors, such as buffer overflows or use of the incorrect interpreter. Configuration attacks rely on the application interpreting files correctly in order to insert harmful configuration information. Likewise, resource location attacks rely on controlling an application's ability to locate files, whereas File Manipulation attacks do not require the application to look in a non-default location, although the two classes of attacks are often combined.",
      "color": "#2176ff",
      "size": 30,
      "label": "File Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/165.html",
      "id": "CAPEC-165"
    },
    {
      "Description": "<b>CAPEC-166: Force the System to Reset Values</b><br>An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Force the System to Reset Values",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/166.html",
      "id": "CAPEC-166"
    },
    {
      "Description": "<b>CAPEC-167: White Box Reverse Engineering</b><br>An attacker discovers the structure, function, and composition of a type of computer software through white box analysis techniques. White box techniques involve methods which can be applied to a piece of software when an executable or some other compiled object can be directly subjected to analysis, revealing at least a portion of its machine instructions that can be observed upon execution.",
      "color": "#75aaff",
      "size": 18,
      "label": "White Box Reverse Engineering",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/167.html",
      "id": "CAPEC-167"
    },
    {
      "Description": "<b>CAPEC-188: Reverse Engineering</b><br>An adversary discovers the structure, function, and composition of an object, resource, or system by using a variety of analysis techniques to effectively determine how the analyzed entity was constructed or operates. The goal of reverse engineering is often to duplicate the function, or a part of the function, of an object in order to duplicate or \"back engineer\" some aspect of its functioning. Reverse engineering techniques can be applied to mechanical objects, electronic devices, or software, although the methodology and techniques involved in each type of analysis differ widely.",
      "color": "#2176ff",
      "size": 30,
      "label": "Reverse Engineering",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/188.html",
      "id": "CAPEC-188"
    },
    {
      "Description": "<b>CAPEC-168: Windows ::DATA Alternate Data Stream</b><br>An attacker exploits the functionality of Microsoft NTFS Alternate Data Streams (ADS) to undermine system security. ADS allows multiple \"files\" to be stored in one directory entry referenced as filename:streamname. One or more alternate data streams may be stored in any file or directory. Normal Microsoft utilities do not show the presence of an ADS stream attached to a file. The additional space for the ADS is not recorded in the displayed file size. The additional space for ADS is accounted for in the used space on the volume. An ADS can be any type of file. ADS are copied by standard Microsoft utilities between NTFS volumes. ADS can be used by an attacker or intruder to hide tools, scripts, and data from detection by normal system utilities. Many anti-virus programs do not check for or scan ADS. Windows Vista does have a switch (-R) on the command line DIR command that will display alternate streams.",
      "color": "#94ebff",
      "size": 10,
      "label": "Windows ::DATA Alternate Data Stream",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/168.html",
      "id": "CAPEC-168"
    },
    {
      "Description": "<b>CAPEC-636: Hiding Malicious Data or Code within Files</b><br>Files on various operating systems can have a complex format which allows for the storage of other data, in addition to its contents. Often this is metadata about the file, such as a cached thumbnail for an image file. Unless utilities are invoked in a particular way, this data is not visible during the normal use of the file. It is possible for an attacker to store malicious data or code using these facilities, which would be difficult to discover.",
      "color": "#75aaff",
      "size": 18,
      "label": "Hiding Malicious Data or Code within Files",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/636.html",
      "id": "CAPEC-636"
    },
    {
      "Description": "<b>CAPEC-169: Footprinting</b><br>An adversary engages in probing and exploration activities to identify constituents and properties of the target.",
      "color": "#2176ff",
      "size": 30,
      "label": "Footprinting",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/169.html",
      "id": "CAPEC-169"
    },
    {
      "Description": "<b>CAPEC-17: Using Malicious Files</b><br>An attack of this type exploits a system's configuration that allows an adversary to either directly access an executable file, for example through shell access; or in a possible worst case allows an adversary to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface.",
      "color": "#75aaff",
      "size": 18,
      "label": "Using Malicious Files",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/17.html",
      "id": "CAPEC-17"
    },
    {
      "Description": "<b>CAPEC-170: Web Application Fingerprinting</b><br>An attacker sends a series of probes to a web application in order to elicit version-dependent and type-dependent behavior that assists in identifying the target. An attacker could learn information such as software versions, error pages, and response headers, variations in implementations of the HTTP protocol, directory structures, and other similar information about the targeted service. This information can then be used by an attacker to formulate a targeted attack plan. While web application fingerprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Web Application Fingerprinting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/170.html",
      "id": "CAPEC-170"
    },
    {
      "Description": "<b>CAPEC-541: Application Fingerprinting</b><br>An adversary engages in fingerprinting activities to determine the type or version of an application installed on a remote target.",
      "color": "#75aaff",
      "size": 18,
      "label": "Application Fingerprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/541.html",
      "id": "CAPEC-541"
    },
    {
      "Description": "<b>CAPEC-174: Flash Parameter Injection</b><br>An adversary takes advantage of improper data validation to inject malicious global parameters into a Flash file embedded within an HTML document. Flash files can leverage user-submitted data to configure the Flash document and access the embedding HTML document.",
      "color": "#94ebff",
      "size": 10,
      "label": "Flash Parameter Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/174.html",
      "id": "CAPEC-174"
    },
    {
      "Description": "<b>CAPEC-182: Flash Injection</b><br>An attacker tricks a victim to execute malicious flash content that executes commands or makes flash calls specified by the attacker. One example of this attack is cross-site flashing, an attacker controlled parameter to a reference call loads from content specified by the attacker.",
      "color": "#75aaff",
      "size": 18,
      "label": "Flash Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/182.html",
      "id": "CAPEC-182"
    },
    {
      "Description": "<b>CAPEC-175: Code Inclusion</b><br>An adversary exploits a weakness on the target to force arbitrary code to be retrieved locally or from a remote location and executed. This differs from code injection in that code injection involves the direct inclusion of code while code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
      "color": "#2176ff",
      "size": 30,
      "label": "Code Inclusion",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/175.html",
      "id": "CAPEC-175"
    },
    {
      "Description": "<b>CAPEC-176: Configuration/Environment Manipulation</b><br>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.",
      "color": "#2176ff",
      "size": 30,
      "label": "Configuration/Environment Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/176.html",
      "id": "CAPEC-176"
    },
    {
      "Description": "<b>CAPEC-177: Create files with the same name as files protected with a higher classification</b><br>An attacker exploits file location algorithms in an operating system or application by creating a file with the same name as a protected or privileged file. The attacker could manipulate the system if the attacker-created file is trusted by the operating system or an application component that attempts to load the original file. Applications often load or include external files, such as libraries or configuration files. These files should be protected against malicious manipulation. However, if the application only uses the name of the file when locating it, an attacker may be able to create a file with the same name and place it in a directory that the application will search before the directory with the legitimate file is searched. Because the attackers' file is discovered first, it would be used by the target application. This attack can be extremely destructive if the referenced file is executable and/or is granted special privileges based solely on having a particular name.",
      "color": "#94ebff",
      "size": 10,
      "label": "Create files with the same name as files protected with a higher classification",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/177.html",
      "id": "CAPEC-177"
    },
    {
      "Description": "<b>CAPEC-178: Cross-Site Flashing</b><br>An attacker is able to trick the victim into executing a Flash document that passes commands or calls to a Flash player browser plugin, allowing the attacker to exploit native Flash functionality in the client browser. This attack pattern occurs where an attacker can provide a crafted link to a Flash document (SWF file) which, when followed, will cause additional malicious instructions to be executed. The attacker does not need to serve or control the Flash document. The attack takes advantage of the fact that Flash files can reference external URLs. If variables that serve as URLs that the Flash application references can be controlled through parameters, then by creating a link that includes values for those parameters, an attacker can cause arbitrary content to be referenced and possibly executed by the targeted Flash application.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross-Site Flashing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/178.html",
      "id": "CAPEC-178"
    },
    {
      "Description": "<b>CAPEC-179: Calling Micro-Services Directly</b><br>An attacker is able to discover and query Micro-services at a web location and thereby expose the Micro-services to further exploitation by gathering information about their implementation and function. Micro-services in web pages allow portions of a page to connect to the server and update content without needing to cause the entire page to update. This allows user activity to change portions of the page more quickly without causing disruptions elsewhere.",
      "color": "#75aaff",
      "size": 18,
      "label": "Calling Micro-Services Directly",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/179.html",
      "id": "CAPEC-179"
    },
    {
      "Description": "<b>CAPEC-554: Functionality Bypass</b><br>An adversary attacks a system by bypassing some or all functionality intended to protect it. Often, a system user will think that protection is in place, but the functionality behind those protections has been disabled by the adversary.",
      "color": "#2176ff",
      "size": 30,
      "label": "Functionality Bypass",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/554.html",
      "id": "CAPEC-554"
    },
    {
      "Description": "<b>CAPEC-18: XSS Targeting Non-Script Elements</b><br>This attack is a form of Cross-Site Scripting (XSS) where malicious scripts are embedded in elements that are not expected to host scripts such as image tags (<img>), comments in XML documents (< !-CDATA->), etc. These tags may not be subject to the same input validation, output validation, and other content filtering and checking routines, so this can create an opportunity for an adversary to tunnel through the application's elements and launch a XSS attack through other elements. As with all remote attacks, it is important to differentiate the ability to launch an attack (such as probing an internal network for unpatched servers) and the ability of the remote adversary to collect and interpret the output of said attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Targeting Non-Script Elements",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/18.html",
      "id": "CAPEC-18"
    },
    {
      "Description": "<b>CAPEC-591: Reflected XSS</b><br>This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is \"reflected\" off a vulnerable web application and then executed by a victim's browser. The process starts with an adversary delivering a malicious script to a victim and convincing the victim to send the script to the vulnerable web application.",
      "color": "#94ebff",
      "size": 10,
      "label": "Reflected XSS",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/591.html",
      "id": "CAPEC-591"
    },
    {
      "Description": "<b>CAPEC-592: Stored XSS</b><br>An adversary utilizes a form of Cross-site Scripting (XSS) where a malicious script is persistently \"stored\" within the data storage of a vulnerable web application as valid input.",
      "color": "#94ebff",
      "size": 10,
      "label": "Stored XSS",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/592.html",
      "id": "CAPEC-592"
    },
    {
      "Description": "<b>CAPEC-588: DOM-Based XSS</b><br>This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users.",
      "color": "#94ebff",
      "size": 10,
      "label": "DOM-Based XSS",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/588.html",
      "id": "CAPEC-588"
    },
    {
      "Description": "<b>CAPEC-180: Exploiting Incorrectly Configured Access Control Security Levels</b><br>An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the system or network. Sensitive functionality should always be protected with access controls. However configuring all but the most trivial access control systems can be very complicated and there are many opportunities for mistakes. If an attacker can learn of incorrectly configured access security settings, they may be able to exploit this in an attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploiting Incorrectly Configured Access Control Security Levels",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/180.html",
      "id": "CAPEC-180"
    },
    {
      "Description": "<b>CAPEC-181: Flash File Overlay</b><br>An attacker creates a transparent overlay using flash in order to intercept user actions for the purpose of performing a clickjacking attack. In this technique, the Flash file provides a transparent overlay over HTML content. Because the Flash application is on top of the content, user actions, such as clicks, are caught by the Flash application rather than the underlying HTML. The action is then interpreted by the overlay to perform the actions the attacker wishes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Flash File Overlay",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/181.html",
      "id": "CAPEC-181"
    },
    {
      "Description": "<b>CAPEC-183: IMAP/SMTP Command Injection</b><br>An adversary exploits weaknesses in input validation on web-mail servers to execute commands on the IMAP/SMTP server. Web-mail servers often sit between the Internet and the IMAP or SMTP mail server. User requests are received by the web-mail servers which then query the back-end mail server for the requested information and return this response to the user. In an IMAP/SMTP command injection attack, mail-server commands are embedded in parts of the request sent to the web-mail server. If the web-mail server fails to adequately sanitize these requests, these commands are then sent to the back-end mail server when it is queried by the web-mail server, where the commands are then executed. This attack can be especially dangerous since administrators may assume that the back-end server is protected against direct Internet access and therefore may not secure it adequately against the execution of malicious commands.",
      "color": "#75aaff",
      "size": 18,
      "label": "IMAP/SMTP Command Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/183.html",
      "id": "CAPEC-183"
    },
    {
      "Description": "<b>CAPEC-184: Software Integrity Attack</b><br>An attacker initiates a series of events designed to cause a user, program, server, or device to perform actions which undermine the integrity of software code, device data structures, or device firmware, achieving the modification of the target's integrity to achieve an insecure state.",
      "color": "#2176ff",
      "size": 30,
      "label": "Software Integrity Attack",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/184.html",
      "id": "CAPEC-184"
    },
    {
      "Description": "<b>CAPEC-185: Malicious Software Download</b><br>An attacker uses deceptive methods to cause a user or an automated process to download and install dangerous code that originates from an attacker controlled source. There are several variations to this strategy of attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malicious Software Download",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/185.html",
      "id": "CAPEC-185"
    },
    {
      "Description": "<b>CAPEC-186: Malicious Software Update</b><br>An adversary uses deceptive methods to cause a user or an automated process to download and install dangerous code believed to be a valid update that originates from an adversary controlled source.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malicious Software Update",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/186.html",
      "id": "CAPEC-186"
    },
    {
      "Description": "<b>CAPEC-187: Malicious Automated Software Update via Redirection</b><br>An attacker exploits two layers of weaknesses in server or client software for automated update mechanisms to undermine the integrity of the target code-base. The first weakness involves a failure to properly authenticate a server as a source of update or patch content. This type of weakness typically results from authentication mechanisms which can be defeated, allowing a hostile server to satisfy the criteria that establish a trust relationship. The second weakness is a systemic failure to validate the identity and integrity of code downloaded from a remote location, hence the inability to distinguish malicious code from a legitimate update.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Automated Software Update via Redirection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/187.html",
      "id": "CAPEC-187"
    },
    {
      "Description": "<b>CAPEC-189: Black Box Reverse Engineering</b><br>An adversary discovers the structure, function, and composition of a type of computer software through black box analysis techniques. 'Black Box' methods involve interacting with the software indirectly, in the absence of direct access to the executable object. Such analysis typically involves interacting with the software at the boundaries of where the software interfaces with a larger execution environment, such as input-output vectors, libraries, or APIs. Black Box Reverse Engineering also refers to gathering physical side effects of a hardware device, such as electromagnetic radiation or sounds.",
      "color": "#75aaff",
      "size": 18,
      "label": "Black Box Reverse Engineering",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/189.html",
      "id": "CAPEC-189"
    },
    {
      "Description": "<b>CAPEC-19: Embedding Scripts within Scripts</b><br>An adversary leverages the capability to execute their own script by embedding it within other scripts that the target software is likely to execute due to programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts.",
      "color": "#75aaff",
      "size": 18,
      "label": "Embedding Scripts within Scripts",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/19.html",
      "id": "CAPEC-19"
    },
    {
      "Description": "<b>CAPEC-242: Code Injection</b><br>An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
      "color": "#2176ff",
      "size": 30,
      "label": "Code Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/242.html",
      "id": "CAPEC-242"
    },
    {
      "Description": "<b>CAPEC-190: Reverse Engineer an Executable to Expose Assumed Hidden Functionality</b><br>An attacker analyzes a binary file or executable for the purpose of discovering the structure, function, and possibly source-code of the file by using a variety of analysis techniques to effectively determine how the software functions and operates. This type of analysis is also referred to as Reverse Code Engineering, as techniques exist for extracting source code from an executable. Several techniques are often employed for this purpose, both black box and white box. The use of computer bus analyzers and packet sniffers allows the binary to be studied at a level of interactions with its computing environment, such as a host OS, inter-process communication, and/or network communication. This type of analysis falls into the 'black box' category because it involves behavioral analysis of the software without reference to source code, object code, or protocol specifications.",
      "color": "#94ebff",
      "size": 10,
      "label": "Reverse Engineer an Executable to Expose Assumed Hidden Functionality",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/190.html",
      "id": "CAPEC-190"
    },
    {
      "Description": "<b>CAPEC-191: Read Sensitive Constants Within an Executable</b><br>An adversary engages in activities to discover any sensitive constants present within the compiled code of an executable. These constants may include literal ASCII strings within the file itself, or possibly strings hard-coded into particular routines that can be revealed by code refactoring methods including static and dynamic analysis.",
      "color": "#94ebff",
      "size": 10,
      "label": "Read Sensitive Constants Within an Executable",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/191.html",
      "id": "CAPEC-191"
    },
    {
      "Description": "<b>CAPEC-192: Protocol Analysis</b><br>An adversary engages in activities to decipher and/or decode protocol information for a network or application communication protocol used for transmitting information between interconnected nodes or systems on a packet-switched data network. While this type of analysis involves the analysis of a networking protocol inherently, it does not require the presence of an actual or physical network.",
      "color": "#2176ff",
      "size": 30,
      "label": "Protocol Analysis",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/192.html",
      "id": "CAPEC-192"
    },
    {
      "Description": "<b>CAPEC-193: PHP Remote File Inclusion</b><br>In this pattern the adversary is able to load and execute arbitrary code remotely available from the application. This is usually accomplished through an insecurely configured PHP runtime environment and an improperly sanitized \"include\" or \"require\" call, which the user can then control to point to any web-accessible file. This allows adversaries to hijack the targeted application and force it to execute their own instructions.",
      "color": "#94ebff",
      "size": 10,
      "label": "PHP Remote File Inclusion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/193.html",
      "id": "CAPEC-193"
    },
    {
      "Description": "<b>CAPEC-194: Fake the Source of Data</b><br>An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
      "color": "#75aaff",
      "size": 18,
      "label": "Fake the Source of Data",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/194.html",
      "id": "CAPEC-194"
    },
    {
      "Description": "<b>CAPEC-195: Principal Spoof</b><br>A Principal Spoof is a form of Identity Spoofing where an adversary pretends to be some other person in an interaction. This is often accomplished by crafting a message (either written, verbal, or visual) that appears to come from a person other than the adversary. Phishing and Pharming attacks often attempt to do this so that their attempts to gather sensitive information appear to come from a legitimate source. A Principal Spoof does not use stolen or spoofed authentication credentials, instead relying on the appearance and content of the message to reflect identity.",
      "color": "#75aaff",
      "size": 18,
      "label": "Principal Spoof",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/195.html",
      "id": "CAPEC-195"
    },
    {
      "Description": "<b>CAPEC-196: Session Credential Falsification through Forging</b><br>An attacker creates a false but functional session credential in order to gain or usurp access to a service. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. If an attacker is able to forge valid session credentials they may be able to bypass authentication or piggy-back off some other authenticated user's session. This attack differs from Reuse of Session IDs and Session Sidejacking attacks in that in the latter attacks an attacker uses a previous or existing credential without modification while, in a forging attack, the attacker must create their own credential, although it may be based on previously observed credentials.",
      "color": "#75aaff",
      "size": 18,
      "label": "Session Credential Falsification through Forging",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/196.html",
      "id": "CAPEC-196"
    },
    {
      "Description": "<b>CAPEC-21: Exploitation of Trusted Identifiers</b><br>An adversary guesses, obtains, or \"rides\" a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service.",
      "color": "#2176ff",
      "size": 30,
      "label": "Exploitation of Trusted Identifiers",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/21.html",
      "id": "CAPEC-21"
    },
    {
      "Description": "<b>CAPEC-197: Exponential Data Expansion</b><br>An adversary submits data to a target application which contains nested exponential data expansion to produce excessively large output. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. However, this capability can be abused to create excessive demands on a processor's CPU and memory. A small number of nested expansions can result in an exponential growth in demands on memory.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exponential Data Expansion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/197.html",
      "id": "CAPEC-197"
    },
    {
      "Description": "<b>CAPEC-230: Serialized Data with Nested Payloads</b><br>Applications often need to transform data in and out of a data format (e.g., XML and YAML) by using a parser. It may be possible for an adversary to inject data that may have an adverse effect on the parser when it is being processed. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. By nesting these structures, causing the data to be repeatedly substituted, an adversary can cause the parser to consume more resources while processing, causing excessive memory consumption and CPU utilization.",
      "color": "#75aaff",
      "size": 18,
      "label": "Serialized Data with Nested Payloads",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/230.html",
      "id": "CAPEC-230"
    },
    {
      "Description": "<b>CAPEC-198: XSS Targeting Error Pages</b><br>An adversary distributes a link (or possibly some other query structure) with a request to a third party web server that is malformed and also contains a block of exploit code in order to have the exploit become live code in the resulting error page.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Targeting Error Pages",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/198.html",
      "id": "CAPEC-198"
    },
    {
      "Description": "<b>CAPEC-199: XSS Using Alternate Syntax</b><br>An adversary uses alternate forms of keywords or commands that result in the same action as the primary form but which may not be caught by filters. For example, many keywords are processed in a case insensitive manner. If the site's web filtering algorithm does not convert all tags into a consistent case before the comparison with forbidden keywords it is possible to bypass filters (e.g., incomplete black lists) by using an alternate case structure. For example, the \"script\" tag using the alternate forms of \"Script\" or \"ScRiPt\" may bypass filters where \"script\" is the only form tested. Other variants using different syntax representations are also possible as well as using pollution meta-characters or entities that are eventually ignored by the rendering engine. The attack can result in the execution of otherwise prohibited functionality.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Using Alternate Syntax",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/199.html",
      "id": "CAPEC-199"
    },
    {
      "Description": "<b>CAPEC-2: Inducing Account Lockout</b><br>An attacker leverages the security functionality of the system aimed at thwarting potential attacks to launch a denial of service attack against a legitimate system user. Many systems, for instance, implement a password throttling mechanism that locks an account after a certain number of incorrect log in attempts. An attacker can leverage this throttling mechanism to lock a legitimate user out of their own account. The weakness that is being leveraged by an attacker is the very security feature that has been put in place to counteract attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Inducing Account Lockout",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/2.html",
      "id": "CAPEC-2"
    },
    {
      "Description": "<b>CAPEC-20: Encryption Brute Forcing</b><br>An attacker, armed with the cipher text and the encryption algorithm used, performs an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext.",
      "color": "#75aaff",
      "size": 18,
      "label": "Encryption Brute Forcing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/20.html",
      "id": "CAPEC-20"
    },
    {
      "Description": "<b>CAPEC-200: Removal of filters: Input filters, output filters, data masking</b><br>An attacker removes or disables filtering mechanisms on the target application. Input filters prevent invalid data from being sent to an application (for example, overly large inputs that might cause a buffer overflow or other malformed inputs that may not be correctly handled by an application). Input filters might also be designed to constrained executable content.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removal of filters: Input filters, output filters, data masking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/200.html",
      "id": "CAPEC-200"
    },
    {
      "Description": "<b>CAPEC-207: Removing Important Client Functionality</b><br>An adversary removes or disables functionality on the client that the server assumes to be present and trustworthy.",
      "color": "#75aaff",
      "size": 18,
      "label": "Removing Important Client Functionality",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/207.html",
      "id": "CAPEC-207"
    },
    {
      "Description": "<b>CAPEC-201: Serialized Data External Linking</b><br>An adversary creates a serialized data file (e.g. XML, YAML, etc...) that contains an external data reference. Because serialized data parsers may not validate documents with external references, there may be no checks on the nature of the reference in the external data. This can allow an adversary to open arbitrary files or connections, which may further lead to the adversary gaining access to information on the system that they would normally be unable to obtain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Serialized Data External Linking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/201.html",
      "id": "CAPEC-201"
    },
    {
      "Description": "<b>CAPEC-278: Web Services Protocol Manipulation</b><br>An adversary manipulates a web service related protocol to cause a web application or service to react differently than intended. This can either be performed through the manipulation of call parameters to include unexpected values, or by changing the called function to one that should normally be restricted or limited. By leveraging this pattern of attack, the adversary is able to gain access to data or resources normally restricted, or to cause the application or service to crash.",
      "color": "#75aaff",
      "size": 18,
      "label": "Web Services Protocol Manipulation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/278.html",
      "id": "CAPEC-278"
    },
    {
      "Description": "<b>CAPEC-202: Create Malicious Client</b><br>An adversary creates a client application to interface with a target service where the client violates assumptions the service makes about clients. Services that have designated client applications (as opposed to services that use general client applications, such as IMAP or POP mail servers which can interact with any IMAP or POP client) may assume that the client will follow specific procedures.",
      "color": "#75aaff",
      "size": 18,
      "label": "Create Malicious Client",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/202.html",
      "id": "CAPEC-202"
    },
    {
      "Description": "<b>CAPEC-22: Exploiting Trust in Client</b><br>An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
      "color": "#2176ff",
      "size": 30,
      "label": "Exploiting Trust in Client",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/22.html",
      "id": "CAPEC-22"
    },
    {
      "Description": "<b>CAPEC-203: Manipulate Registry Information</b><br>An adversary exploits a weakness in authorization in order to modify content within a registry (e.g., Windows Registry, Mac plist, application registry). Editing registry information can permit the adversary to hide configuration information or remove indicators of compromise to cover up activity. Many applications utilize registries to store configuration and service information. As such, modification of registry information can affect individual services (affecting billing, authorization, or even allowing for identity spoofing) or the overall configuration of a targeted application. For example, both Java RMI and SOAP use registries to track available services. Changing registry values is sometimes a preliminary step towards completing another attack pattern, but given the long term usage of many registry values, manipulation of registry information could be its own end.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulate Registry Information",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/203.html",
      "id": "CAPEC-203"
    },
    {
      "Description": "<b>CAPEC-204: Lifting Sensitive Data Embedded in Cache</b><br>An adversary examines a target application's cache, or a browser cache, for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Lifting Sensitive Data Embedded in Cache",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/204.html",
      "id": "CAPEC-204"
    },
    {
      "Description": "<b>CAPEC-206: Signing Malicious Code</b><br>The adversary extracts credentials used for code signing from a production environment and then uses these credentials to sign malicious content with the developer's key. Many developers use signing keys to sign code or hashes of code. When users or applications verify the signatures are accurate they are led to believe that the code came from the owner of the signing key and that the code has not been modified since the signature was applied. If the adversary has extracted the signing credentials then they can use those credentials to sign their own code bundles. Users or tools that verify the signatures attached to the code will likely assume the code came from the legitimate developer and install or run the code, effectively allowing the adversary to execute arbitrary code on the victim's computer. This differs from CAPEC-673, because the adversary is performing the code signing.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signing Malicious Code",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/206.html",
      "id": "CAPEC-206"
    },
    {
      "Description": "<b>CAPEC-444: Development Alteration</b><br>An adversary modifies a technology, product, or component during its development to acheive a negative impact once the system is deployed. The goal of the adversary is to modify the system in such a way that the negative impact can be leveraged when the system is later deployed. Development alteration attacks may include attacks that insert malicious logic into the system's software, modify or replace hardware components, and other attacks which negatively impact the system during development. These attacks generally require insider access to modify source code or to tamper with hardware components. The product is then delivered to the user where the negative impact can be leveraged at a later time.",
      "color": "#75aaff",
      "size": 18,
      "label": "Development Alteration",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/444.html",
      "id": "CAPEC-444"
    },
    {
      "Description": "<b>CAPEC-208: Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements</b><br>An attacker removes or modifies the logic on a client associated with monetary calculations resulting in incorrect information being sent to the server. A server may rely on a client to correctly compute monetary information. For example, a server might supply a price for an item and then rely on the client to correctly compute the total cost of a purchase given the number of items the user is buying. If the attacker can remove or modify the logic that controls these calculations, they can return incorrect values to the server. The attacker can use this to make purchases for a fraction of the legitimate cost or otherwise avoid correct billing for activities.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/208.html",
      "id": "CAPEC-208"
    },
    {
      "Description": "<b>CAPEC-209: XSS Using MIME Type Mismatch</b><br>An adversary creates a file with scripting content but where the specified MIME type of the file is such that scripting is not expected. The adversary tricks the victim into accessing a URL that responds with the script file. Some browsers will detect that the specified MIME type of the file does not match the actual type of its content and will automatically switch to using an interpreter for the real content type. If the browser does not invoke script filters before doing this, the adversary's script may run on the target unsanitized, possibly revealing the victim's cookies or executing arbitrary script in their browser.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Using MIME Type Mismatch",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/209.html",
      "id": "CAPEC-209"
    },
    {
      "Description": "<b>CAPEC-215: Fuzzing for application mapping</b><br>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash.",
      "color": "#94ebff",
      "size": 10,
      "label": "Fuzzing for application mapping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/215.html",
      "id": "CAPEC-215"
    },
    {
      "Description": "<b>CAPEC-28: Fuzzing</b><br>In this attack pattern, the adversary leverages fuzzing to try to identify weaknesses in the system. Fuzzing is a software security and functionality testing method that feeds randomly constructed input to the system and looks for an indication that a failure in response to that input has occurred. Fuzzing treats the system as a black box and is totally free from any preconceptions or assumptions about the system. Fuzzing can help an attacker discover certain assumptions made about user input in the system. Fuzzing gives an attacker a quick way of potentially uncovering some of these assumptions despite not necessarily knowing anything about the internals of the system. These assumptions can then be turned against the system by specially crafting user input that may allow an attacker to achieve their goals.",
      "color": "#2176ff",
      "size": 30,
      "label": "Fuzzing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/28.html",
      "id": "CAPEC-28"
    },
    {
      "Description": "<b>CAPEC-217: Exploiting Incorrectly Configured SSL/TLS</b><br>An adversary takes advantage of incorrectly configured SSL/TLS communications that enables access to data intended to be encrypted. The adversary may also use this type of attack to inject commands or other traffic into the encrypted stream to cause compromise of either the client or server.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploiting Incorrectly Configured SSL/TLS",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/217.html",
      "id": "CAPEC-217"
    },
    {
      "Description": "<b>CAPEC-218: Spoofing of UDDI/ebXML Messages</b><br>An attacker spoofs a UDDI, ebXML, or similar message in order to impersonate a service provider in an e-business transaction. UDDI, ebXML, and similar standards are used to identify businesses in e-business transactions. Among other things, they identify a particular participant, WSDL information for SOAP transactions, and supported communication protocols, including security protocols. By spoofing one of these messages an attacker could impersonate a legitimate business in a transaction or could manipulate the protocols used between a client and business. This could result in disclosure of sensitive information, loss of message integrity, or even financial fraud.",
      "color": "#94ebff",
      "size": 10,
      "label": "Spoofing of UDDI/ebXML Messages",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/218.html",
      "id": "CAPEC-218"
    },
    {
      "Description": "<b>CAPEC-219: XML Routing Detour Attacks</b><br>An attacker subverts an intermediate system used to process XML content and forces the intermediate to modify and/or re-route the processing of the content. XML Routing Detour Attacks are Adversary in the Middle type attacks (CAPEC-94). The attacker compromises or inserts an intermediate system in the processing of the XML message. For example, WS-Routing can be used to specify a series of nodes or intermediaries through which content is passed. If any of the intermediate nodes in this route are compromised by an attacker they could be used for a routing detour attack. From the compromised system the attacker is able to route the XML process to other nodes of their choice and modify the responses so that the normal chain of processing is unaware of the interception. This system can forward the message to an outside entity and hide the forwarding and processing from the legitimate processing systems by altering the header information.",
      "color": "#75aaff",
      "size": 18,
      "label": "XML Routing Detour Attacks",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/219.html",
      "id": "CAPEC-219"
    },
    {
      "Description": "<b>CAPEC-94: Adversary in the Middle (AiTM)</b><br>An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
      "color": "#2176ff",
      "size": 30,
      "label": "Adversary in the Middle (AiTM)",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/94.html",
      "id": "CAPEC-94"
    },
    {
      "Description": "<b>CAPEC-272: Protocol Manipulation</b><br>An adversary subverts a communications protocol to perform an attack. This type of attack can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
      "color": "#2176ff",
      "size": 30,
      "label": "Protocol Manipulation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/272.html",
      "id": "CAPEC-272"
    },
    {
      "Description": "<b>CAPEC-221: Data Serialization External Entities Blowup</b><br>This attack takes advantage of the entity replacement property of certain data serialization languages (e.g., XML, YAML, etc.) where the value of the replacement is a URI. A well-crafted file could have the entity refer to a URI that consumes a large amount of resources to create a denial of service condition. This can cause the system to either freeze, crash, or execute arbitrary code depending on the URI.",
      "color": "#94ebff",
      "size": 10,
      "label": "Data Serialization External Entities Blowup",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/221.html",
      "id": "CAPEC-221"
    },
    {
      "Description": "<b>CAPEC-231: Oversized Serialized Data Payloads</b><br>An adversary injects oversized serialized data payloads into a parser during data processing to produce adverse effects upon the parser such as exhausting system resources and arbitrary code execution.",
      "color": "#75aaff",
      "size": 18,
      "label": "Oversized Serialized Data Payloads",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/231.html",
      "id": "CAPEC-231"
    },
    {
      "Description": "<b>CAPEC-222: iFrame Overlay</b><br>In an iFrame overlay attack the victim is tricked into unknowingly initiating some action in one system while interacting with the UI from seemingly completely different system.",
      "color": "#94ebff",
      "size": 10,
      "label": "iFrame Overlay",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/222.html",
      "id": "CAPEC-222"
    },
    {
      "Description": "<b>CAPEC-224: Fingerprinting</b><br>An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Most commonly, fingerprinting is done to determine operating system and application versions. Fingerprinting can be done passively as well as actively. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.",
      "color": "#2176ff",
      "size": 30,
      "label": "Fingerprinting",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/224.html",
      "id": "CAPEC-224"
    },
    {
      "Description": "<b>CAPEC-226: Session Credential Falsification through Manipulation</b><br>An attacker manipulates an existing credential in order to gain access to a target application. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. An attacker may be able to manipulate a credential sniffed from an existing connection in order to gain access to a target server.",
      "color": "#94ebff",
      "size": 10,
      "label": "Session Credential Falsification through Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/226.html",
      "id": "CAPEC-226"
    },
    {
      "Description": "<b>CAPEC-227: Sustained Client Engagement</b><br>An adversary attempts to deny legitimate users access to a resource by continually engaging a specific resource in an attempt to keep the resource tied up as long as possible. The adversary's primary goal is not to crash or flood the target, which would alert defenders; rather it is to repeatedly perform actions or abuse algorithmic flaws such that a given resource is tied up and not available to a legitimate user. By carefully crafting a requests that keep the resource engaged through what is seemingly benign requests, legitimate users are limited or completely denied access to the resource.",
      "color": "#2176ff",
      "size": 30,
      "label": "Sustained Client Engagement",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/227.html",
      "id": "CAPEC-227"
    },
    {
      "Description": "<b>CAPEC-228: DTD Injection</b><br>An attacker injects malicious content into an application's DTD in an attempt to produce a negative technical impact. DTDs are used to describe how XML documents are processed. Certain malformed DTDs (for example, those with excessive entity expansion as described in CAPEC 197) can cause the XML parsers that process the DTDs to consume excessive resources resulting in resource depletion.",
      "color": "#94ebff",
      "size": 10,
      "label": "DTD Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/228.html",
      "id": "CAPEC-228"
    },
    {
      "Description": "<b>CAPEC-250: XML Injection</b><br>An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information.",
      "color": "#75aaff",
      "size": 18,
      "label": "XML Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/250.html",
      "id": "CAPEC-250"
    },
    {
      "Description": "<b>CAPEC-229: Serialized Data Parameter Blowup</b><br>This attack exploits certain serialized data parsers (e.g., XML, YAML, etc.) which manage data in an inefficient manner. The attacker crafts an serialized data file with multiple configuration parameters in the same dataset. In a vulnerable parser, this results in a denial of service condition where CPU resources are exhausted because of the parsing algorithm. The weakness being exploited is tied to parser implementation and not language specific.",
      "color": "#94ebff",
      "size": 10,
      "label": "Serialized Data Parameter Blowup",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/229.html",
      "id": "CAPEC-229"
    },
    {
      "Description": "<b>CAPEC-23: File Content Injection</b><br>An adversary poisons files with a malicious payload (targeting the file systems accessible by the target software), which may be passed through by standard channels such as via email, and standard web content like PDF and multimedia files. The adversary exploits known vulnerabilities or handling routines in the target processes, in order to exploit the host's trust in executing remote content, including binary files.",
      "color": "#75aaff",
      "size": 18,
      "label": "File Content Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/23.html",
      "id": "CAPEC-23"
    },
    {
      "Description": "<b>CAPEC-234: Hijacking a privileged process</b><br>An adversary gains control of a process that is assigned elevated privileges in order to execute arbitrary code with those privileges. Some processes are assigned elevated privileges on an operating system, usually through association with a particular user, group, or role. If an attacker can hijack this process, they will be able to assume its level of privilege in order to execute their own code.",
      "color": "#75aaff",
      "size": 18,
      "label": "Hijacking a privileged process",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/234.html",
      "id": "CAPEC-234"
    },
    {
      "Description": "<b>CAPEC-237: Escaping a Sandbox by Calling Code in Another Language</b><br>The attacker may submit malicious code of another language to obtain access to privileges that were not intentionally exposed by the sandbox, thus escaping the sandbox. For instance, Java code cannot perform unsafe operations, such as modifying arbitrary memory locations, due to restrictions placed on it by the Byte code Verifier and the JVM. If allowed, Java code can call directly into native C code, which may perform unsafe operations, such as call system calls and modify arbitrary memory locations on their behalf. To provide isolation, Java does not grant untrusted code with unmediated access to native C code. Instead, the sandboxed code is typically allowed to call some subset of the pre-existing native code that is part of standard libraries.",
      "color": "#94ebff",
      "size": 10,
      "label": "Escaping a Sandbox by Calling Code in Another Language",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/237.html",
      "id": "CAPEC-237"
    },
    {
      "Description": "<b>CAPEC-480: Escaping Virtualization</b><br>An adversary gains access to an application, service, or device with the privileges of an authorized or privileged user by escaping the confines of a virtualized environment. The adversary is then able to access resources or execute unauthorized code within the host environment, generally with the privileges of the user running the virtualized process. Successfully executing an attack of this type is often the first step in executing more complex attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Escaping Virtualization",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/480.html",
      "id": "CAPEC-480"
    },
    {
      "Description": "<b>CAPEC-24: Filter Failure through Buffer Overflow</b><br>In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
      "color": "#94ebff",
      "size": 10,
      "label": "Filter Failure through Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/24.html",
      "id": "CAPEC-24"
    },
    {
      "Description": "<b>CAPEC-240: Resource Injection</b><br>An adversary exploits weaknesses in input validation by manipulating resource identifiers enabling the unintended modification or specification of a resource.",
      "color": "#2176ff",
      "size": 30,
      "label": "Resource Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/240.html",
      "id": "CAPEC-240"
    },
    {
      "Description": "<b>CAPEC-243: XSS Targeting HTML Attributes</b><br>An adversary inserts commands to perform cross-site scripting (XSS) actions in HTML attributes. Many filters do not adequately sanitize attributes against the presence of potentially dangerous commands even if they adequately sanitize tags. For example, dangerous expressions could be inserted into a style attribute in an anchor tag, resulting in the execution of malicious code when the resulting page is rendered. If a victim is tricked into viewing the rendered page the attack proceeds like a normal XSS attack, possibly resulting in the loss of sensitive cookies or other malicious activities.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Targeting HTML Attributes",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/243.html",
      "id": "CAPEC-243"
    },
    {
      "Description": "<b>CAPEC-244: XSS Targeting URI Placeholders</b><br>An attack of this type exploits the ability of most browsers to interpret \"data\", \"javascript\" or other URI schemes as client-side executable content placeholders. This attack consists of passing a malicious URI in an anchor tag HREF attribute or any other similar attributes in other HTML tags. Such malicious URI contains, for example, a base64 encoded HTML content with an embedded cross-site scripting payload. The attack is executed when the browser interprets the malicious content i.e., for example, when the victim clicks on the malicious link.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Targeting URI Placeholders",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/244.html",
      "id": "CAPEC-244"
    },
    {
      "Description": "<b>CAPEC-245: XSS Using Doubled Characters</b><br>The adversary bypasses input validation by using doubled characters in order to perform a cross-site scripting attack. Some filters fail to recognize dangerous sequences if they are preceded by repeated characters. For example, by doubling the < before a script command, (<<script or %3C%3script using URI encoding) the filters of some web applications may fail to recognize the presence of a script tag. If the targeted server is vulnerable to this type of bypass, the adversary can create a crafted URL or other trap to cause a victim to view a page on the targeted server where the malicious content is executed, as per a normal XSS attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Using Doubled Characters",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/245.html",
      "id": "CAPEC-245"
    },
    {
      "Description": "<b>CAPEC-247: XSS Using Invalid Characters</b><br>An adversary inserts invalid characters in identifiers to bypass application filtering of input. Filters may not scan beyond invalid characters but during later stages of processing content that follows these invalid characters may still be processed. This allows the adversary to sneak prohibited commands past filters and perform normally prohibited operations. Invalid characters may include null, carriage return, line feed or tab in an identifier. Successful bypassing of the filter can result in a XSS attack, resulting in the disclosure of web cookies or possibly other results.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Using Invalid Characters",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/247.html",
      "id": "CAPEC-247"
    },
    {
      "Description": "<b>CAPEC-25: Forced Deadlock</b><br>The adversary triggers and exploits a deadlock condition in the target software to cause a denial of service. A deadlock can occur when two or more competing actions are waiting for each other to finish, and thus neither ever does. Deadlock conditions can be difficult to detect.",
      "color": "#2176ff",
      "size": 30,
      "label": "Forced Deadlock",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/25.html",
      "id": "CAPEC-25"
    },
    {
      "Description": "<b>CAPEC-251: Local Code Inclusion</b><br>The attacker forces an application to load arbitrary code files from the local machine. The attacker could use this to try to load old versions of library files that have known vulnerabilities, to load files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.",
      "color": "#75aaff",
      "size": 18,
      "label": "Local Code Inclusion",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/251.html",
      "id": "CAPEC-251"
    },
    {
      "Description": "<b>CAPEC-252: PHP Local File Inclusion</b><br>The attacker loads and executes an arbitrary local PHP file on a target machine. The attacker could use this to try to load old versions of PHP files that have known vulnerabilities, to load PHP files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.",
      "color": "#94ebff",
      "size": 10,
      "label": "PHP Local File Inclusion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/252.html",
      "id": "CAPEC-252"
    },
    {
      "Description": "<b>CAPEC-256: SOAP Array Overflow</b><br>An attacker sends a SOAP request with an array whose actual length exceeds the length indicated in the request. If the server processing the transmission naively trusts the specified size, then an attacker can intentionally understate the size of the array, possibly resulting in a buffer overflow if the server attempts to read the entire data set into the memory it allocated for a smaller array.",
      "color": "#94ebff",
      "size": 10,
      "label": "SOAP Array Overflow",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/256.html",
      "id": "CAPEC-256"
    },
    {
      "Description": "<b>CAPEC-26: Leveraging Race Conditions</b><br>The adversary targets a race condition occurring when multiple processes access and manipulate the same resource concurrently, and the outcome of the execution depends on the particular order in which the access takes place. The adversary can leverage a race condition by \"running the race\", modifying the resource and modifying the normal execution flow. For instance, a race condition can occur while accessing a file: the adversary can trick the system by replacing the original file with their version and cause the system to read the malicious file.",
      "color": "#2176ff",
      "size": 30,
      "label": "Leveraging Race Conditions",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/26.html",
      "id": "CAPEC-26"
    },
    {
      "Description": "<b>CAPEC-261: Fuzzing for garnering other adjacent user/sensitive data</b><br>An adversary who is authorized to send queries to a target sends variants of expected queries in the hope that these modified queries might return information (directly or indirectly through error logs) beyond what the expected set of queries should provide.",
      "color": "#94ebff",
      "size": 10,
      "label": "Fuzzing for garnering other adjacent user/sensitive data",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/261.html",
      "id": "CAPEC-261"
    },
    {
      "Description": "<b>CAPEC-263: Force Use of Corrupted Files</b><br>This describes an attack where an application is forced to use a file that an attacker has corrupted. The result is often a denial of service caused by the application being unable to process the corrupted file, but other results, including the disabling of filters or access controls (if the application fails in an unsafe way rather than failing by locking down) or buffer overflows are possible.",
      "color": "#94ebff",
      "size": 10,
      "label": "Force Use of Corrupted Files",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/263.html",
      "id": "CAPEC-263"
    },
    {
      "Description": "<b>CAPEC-268: Audit Log Manipulation</b><br>The attacker injects, manipulates, deletes, or forges malicious log entries into the log file, in an attempt to mislead an audit of the log file or cover tracks of an attack. Due to either insufficient access controls of the log files or the logging mechanism, the attacker is able to perform such actions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Audit Log Manipulation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/268.html",
      "id": "CAPEC-268"
    },
    {
      "Description": "<b>CAPEC-27: Leveraging Race Conditions via Symbolic Links</b><br>This attack leverages the use of symbolic links (Symlinks) in order to write to sensitive files. An attacker can create a Symlink link to a target file not otherwise accessible to them. When the privileged program tries to create a temporary file with the same name as the Symlink link, it will actually write to the target file pointed to by the attackers' Symlink link. If the attacker can insert malicious content in the temporary file they will be writing to the sensitive file by using the Symlink. The race occurs because the system checks if the temporary file exists, then creates the file. The attacker would typically create the Symlink during the interval between the check and the creation of the temporary file.",
      "color": "#94ebff",
      "size": 10,
      "label": "Leveraging Race Conditions via Symbolic Links",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/27.html",
      "id": "CAPEC-27"
    },
    {
      "Description": "<b>CAPEC-29: Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions</b><br>This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. A typical example is file access. The adversary can leverage a file access race condition by \"running the race\", meaning that they would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the adversary could replace or modify the file, causing the application to behave unexpectedly.",
      "color": "#75aaff",
      "size": 18,
      "label": "Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/29.html",
      "id": "CAPEC-29"
    },
    {
      "Description": "<b>CAPEC-270: Modification of Registry Run Keys</b><br>An adversary adds a new entry to the \"run keys\" in the Windows registry so that an application of their choosing is executed when a user logs in. In this way, the adversary can get their executable to operate and run on the target system with the authorized user's level of permissions. This attack is a good way for an adversary to run persistent spyware on a user's machine, such as a keylogger.",
      "color": "#94ebff",
      "size": 10,
      "label": "Modification of Registry Run Keys",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/270.html",
      "id": "CAPEC-270"
    },
    {
      "Description": "<b>CAPEC-273: HTTP Response Smuggling</b><br>An adversary manipulates and injects malicious content in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., server). \n See CanPrecede relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Response Smuggling",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/273.html",
      "id": "CAPEC-273"
    },
    {
      "Description": "<b>CAPEC-274: HTTP Verb Tampering</b><br>An attacker modifies the HTTP Verb (e.g. GET, PUT, TRACE, etc.) in order to bypass access restrictions. Some web environments allow administrators to restrict access based on the HTTP Verb used with requests. However, attackers can often provide a different HTTP Verb, or even provide a random string as a verb in order to bypass these protections. This allows the attacker to access data that should otherwise be protected.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Verb Tampering",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/274.html",
      "id": "CAPEC-274"
    },
    {
      "Description": "<b>CAPEC-275: DNS Rebinding</b><br>An adversary serves content whose IP address is resolved by a DNS server that the adversary controls. After initial contact by a web browser (or similar client), the adversary changes the IP address to which its name resolves, to an address within the target organization that is not publicly accessible. This allows the web browser to examine this internal address on behalf of the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Rebinding",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/275.html",
      "id": "CAPEC-275"
    },
    {
      "Description": "<b>CAPEC-276: Inter-component Protocol Manipulation</b><br>Inter-component protocols are used to communicate between different software and hardware modules within a single computer. Common examples are: interrupt signals and data pipes. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
      "color": "#75aaff",
      "size": 18,
      "label": "Inter-component Protocol Manipulation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/276.html",
      "id": "CAPEC-276"
    },
    {
      "Description": "<b>CAPEC-277: Data Interchange Protocol Manipulation</b><br>Data Interchange Protocols are used to transmit structured data between entities. These protocols are often specific to a particular domain (B2B: purchase orders, invoices, transport logistics and waybills, medical records). They are often, but not always, XML-based. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.",
      "color": "#75aaff",
      "size": 18,
      "label": "Data Interchange Protocol Manipulation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/277.html",
      "id": "CAPEC-277"
    },
    {
      "Description": "<b>CAPEC-279: SOAP Manipulation</b><br>Simple Object Access Protocol (SOAP) is used as a communication protocol between a client and server to invoke web services on the server. It is an XML-based protocol, and therefore suffers from many of the same shortcomings as other XML-based protocols. Adversaries can make use of these shortcomings and manipulate the content of SOAP paramters, leading to undesirable behavior on the server and allowing the adversary to carry out a number of further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "SOAP Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/279.html",
      "id": "CAPEC-279"
    },
    {
      "Description": "<b>CAPEC-285: ICMP Echo Request Ping</b><br>An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Echo Request Ping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/285.html",
      "id": "CAPEC-285"
    },
    {
      "Description": "<b>CAPEC-292: Host Discovery</b><br>An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.",
      "color": "#75aaff",
      "size": 18,
      "label": "Host Discovery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/292.html",
      "id": "CAPEC-292"
    },
    {
      "Description": "<b>CAPEC-287: TCP SYN Scan</b><br>An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its many advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP SYN Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/287.html",
      "id": "CAPEC-287"
    },
    {
      "Description": "<b>CAPEC-300: Port Scanning</b><br>An adversary uses a combination of techniques to determine the state of the ports on a remote target. Any service or application available for TCP or UDP networking will have a port open for communications over the network.",
      "color": "#75aaff",
      "size": 18,
      "label": "Port Scanning",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/300.html",
      "id": "CAPEC-300"
    },
    {
      "Description": "<b>CAPEC-290: Enumerate Mail Exchange (MX) Records</b><br>An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.",
      "color": "#94ebff",
      "size": 10,
      "label": "Enumerate Mail Exchange (MX) Records",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/290.html",
      "id": "CAPEC-290"
    },
    {
      "Description": "<b>CAPEC-309: Network Topology Mapping</b><br>An adversary engages in scanning activities to map network nodes, hosts, devices, and routes. Adversaries usually perform this type of network reconnaissance during the early stages of attack against an external network. Many types of scanning utilities are typically employed, including ICMP tools, network mappers, port scanners, and route testing utilities such as traceroute.",
      "color": "#75aaff",
      "size": 18,
      "label": "Network Topology Mapping",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/309.html",
      "id": "CAPEC-309"
    },
    {
      "Description": "<b>CAPEC-291: DNS Zone Transfers</b><br>An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Zone Transfers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/291.html",
      "id": "CAPEC-291"
    },
    {
      "Description": "<b>CAPEC-293: Traceroute Route Enumeration</b><br>An adversary uses a traceroute utility to map out the route which data flows through the network in route to a target destination. Tracerouting can allow the adversary to construct a working topology of systems and routers by listing the systems through which data passes through on their way to the targeted machine. This attack can return varied results depending upon the type of traceroute that is performed. Traceroute works by sending packets to a target while incrementing the Time-to-Live field in the packet header. As the packet traverses each hop along its way to the destination, its TTL expires generating an ICMP diagnostic message that identifies where the packet expired. Traditional techniques for tracerouting involved the use of ICMP and UDP, but as more firewalls began to filter ingress ICMP, methods of traceroute using TCP were developed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Traceroute Route Enumeration",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/293.html",
      "id": "CAPEC-293"
    },
    {
      "Description": "<b>CAPEC-294: ICMP Address Mask Request</b><br>An adversary sends an ICMP Type 17 Address Mask Request to gather information about a target's networking configuration. ICMP Address Mask Requests are defined by RFC-950, \"Internet Standard Subnetting Procedure.\" An Address Mask Request is an ICMP type 17 message that triggers a remote system to respond with a list of its related subnets, as well as its default gateway and broadcast address via an ICMP type 18 Address Mask Reply datagram. Gathering this type of information helps the adversary plan router-based attacks as well as denial-of-service attacks against the broadcast address.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Address Mask Request",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/294.html",
      "id": "CAPEC-294"
    },
    {
      "Description": "<b>CAPEC-295: Timestamp Request</b><br>This pattern of attack leverages standard requests to learn the exact time associated with a target system. An adversary may be able to use the timestamp returned from the target to attack time-based security algorithms, such as random number generators, or time-based authentication mechanisms.",
      "color": "#94ebff",
      "size": 10,
      "label": "Timestamp Request",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/295.html",
      "id": "CAPEC-295"
    },
    {
      "Description": "<b>CAPEC-296: ICMP Information Request</b><br>An adversary sends an ICMP Information Request to a host to determine if it will respond to this deprecated mechanism. ICMP Information Requests are a deprecated message type. Information Requests were originally used for diskless machines to automatically obtain their network configuration, but this message type has been superseded by more robust protocol implementations like DHCP.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Information Request",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/296.html",
      "id": "CAPEC-296"
    },
    {
      "Description": "<b>CAPEC-297: TCP ACK Ping</b><br>An adversary sends a TCP segment with the ACK flag set to a remote host for the purpose of determining if the host is alive. This is one of several TCP 'ping' types. The RFC 793 expected behavior for a service is to respond with a RST 'reset' packet to any unsolicited ACK segment that is not part of an existing connection. So by sending an ACK segment to a port, the adversary can identify that the host is alive by looking for a RST packet. Typically, a remote server will respond with a RST regardless of whether a port is open or closed. In this way, TCP ACK pings cannot discover the state of a remote port because the behavior is the same in either case. The firewall will look up the ACK packet in its state-table and discard the segment because it does not correspond to any active connection. A TCP ACK Ping can be used to discover if a host is alive via RST response packets sent from the host.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP ACK Ping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/297.html",
      "id": "CAPEC-297"
    },
    {
      "Description": "<b>CAPEC-298: UDP Ping</b><br>An adversary sends a UDP datagram to the remote host to determine if the host is alive. If a UDP datagram is sent to an open UDP port there is very often no response, so a typical strategy for using a UDP ping is to send the datagram to a random high port on the target. The goal is to solicit an 'ICMP port unreachable' message from the target, indicating that the host is alive. UDP pings are useful because some firewalls are not configured to block UDP datagrams sent to strange or typically unused ports, like ports in the 65K range. Additionally, while some firewalls may filter incoming ICMP, weaknesses in firewall rule-sets may allow certain types of ICMP (host unreachable, port unreachable) which are useful for UDP ping attempts.",
      "color": "#94ebff",
      "size": 10,
      "label": "UDP Ping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/298.html",
      "id": "CAPEC-298"
    },
    {
      "Description": "<b>CAPEC-299: TCP SYN Ping</b><br>An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC 793 behavior specifies that when a TCP port is open, a host must respond to an incoming SYN \"synchronize\" packet by completing stage two of the 'three-way handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793 behavior is to respond with a RST \"reset\" packet. This behavior can be used to 'ping' a target to see if it is alive by sending a TCP SYN packet to a port and then looking for a RST or an ACK packet in response.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP SYN Ping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/299.html",
      "id": "CAPEC-299"
    },
    {
      "Description": "<b>CAPEC-3: Using Leading 'Ghost' Character Sequences to Bypass Input Filters</b><br>Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Leading 'Ghost' Character Sequences to Bypass Input Filters",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/3.html",
      "id": "CAPEC-3"
    },
    {
      "Description": "<b>CAPEC-30: Hijacking a Privileged Thread of Execution</b><br>An adversary hijacks a privileged thread of execution by injecting malicious code into a running process. By using a privleged thread to do their bidding, adversaries can evade process-based detection that would stop an attack that creates a new process. This can lead to an adversary gaining access to the process's memory and can also enable elevated privileges. The most common way to perform this attack is by suspending an existing thread and manipulating its memory.",
      "color": "#75aaff",
      "size": 18,
      "label": "Hijacking a Privileged Thread of Execution",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/30.html",
      "id": "CAPEC-30"
    },
    {
      "Description": "<b>CAPEC-301: TCP Connect Scan</b><br>An adversary uses full TCP connection attempts to determine if a port is open on the target system. The scanning process involves completing a 'three-way handshake' with a remote port, and reports the port as closed if the full handshake cannot be established. An advantage of TCP connect scanning is that it works against any TCP/IP stack.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Connect Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/301.html",
      "id": "CAPEC-301"
    },
    {
      "Description": "<b>CAPEC-302: TCP FIN Scan</b><br>An adversary uses a TCP FIN scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with the FIN bit set in the packet header. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow the adversary to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP FIN Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/302.html",
      "id": "CAPEC-302"
    },
    {
      "Description": "<b>CAPEC-303: TCP Xmas Scan</b><br>An adversary uses a TCP XMAS scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with all possible flags set in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Xmas Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/303.html",
      "id": "CAPEC-303"
    },
    {
      "Description": "<b>CAPEC-304: TCP Null Scan</b><br>An adversary uses a TCP NULL scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with no flags in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Null Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/304.html",
      "id": "CAPEC-304"
    },
    {
      "Description": "<b>CAPEC-305: TCP ACK Scan</b><br>An adversary uses TCP ACK segments to gather information about firewall or ACL configuration. The purpose of this type of scan is to discover information about filter configurations rather than port state. This type of scanning is rarely useful alone, but when combined with SYN scanning, gives a more complete picture of the type of firewall rules that are present.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP ACK Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/305.html",
      "id": "CAPEC-305"
    },
    {
      "Description": "<b>CAPEC-306: TCP Window Scan</b><br>An adversary engages in TCP Window scanning to analyze port status and operating system type. TCP Window scanning uses the ACK scanning method but examine the TCP Window Size field of response RST packets to make certain inferences. While TCP Window Scans are fast and relatively stealthy, they work against fewer TCP stack implementations than any other type of scan. Some operating systems return a positive TCP window size when a RST packet is sent from an open port, and a negative value when the RST originates from a closed port. TCP Window scanning is one of the most complex scan types, and its results are difficult to interpret. Window scanning alone rarely yields useful information, but when combined with other types of scanning is more useful. It is a generally more reliable means of making inference about operating system versions than port status.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Window Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/306.html",
      "id": "CAPEC-306"
    },
    {
      "Description": "<b>CAPEC-307: TCP RPC Scan</b><br>An adversary scans for RPC services listing on a Unix/Linux host.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP RPC Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/307.html",
      "id": "CAPEC-307"
    },
    {
      "Description": "<b>CAPEC-308: UDP Scan</b><br>An adversary engages in UDP scanning to gather information about UDP port status on the target system. UDP scanning methods involve sending a UDP datagram to the target port and looking for evidence that the port is closed. Open UDP ports usually do not respond to UDP datagrams as there is no stateful mechanism within the protocol that requires building or establishing a session. Responses to UDP datagrams are therefore application specific and cannot be relied upon as a method of detecting an open port. UDP scanning relies heavily upon ICMP diagnostic messages in order to determine the status of a remote port.",
      "color": "#94ebff",
      "size": 10,
      "label": "UDP Scan",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/308.html",
      "id": "CAPEC-308"
    },
    {
      "Description": "<b>CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</b><br>This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Accessing/Intercepting/Modifying HTTP Cookies",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/31.html",
      "id": "CAPEC-31"
    },
    {
      "Description": "<b>CAPEC-39: Manipulating Opaque Client-based Data Tokens</b><br>In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating Opaque Client-based Data Tokens",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/39.html",
      "id": "CAPEC-39"
    },
    {
      "Description": "<b>CAPEC-310: Scanning for Vulnerable Software</b><br>An attacker engages in scanning activity to find vulnerable software versions or types, such as operating system versions or network services. Vulnerable or exploitable network configurations, such as improperly firewalled systems, or misconfigured systems in the DMZ or external network, provide windows of opportunity for an attacker. Common types of vulnerable software include unpatched operating systems or services (e.g FTP, Telnet, SMTP, SNMP) running on open ports that the attacker has identified. Attackers usually begin probing for vulnerable software once the external network has been port scanned and potential targets have been revealed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Scanning for Vulnerable Software",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/310.html",
      "id": "CAPEC-310"
    },
    {
      "Description": "<b>CAPEC-312: Active OS Fingerprinting</b><br>An adversary engages in activity to detect the operating system or firmware version of a remote target by interrogating a device, server, or platform with a probe designed to solicit behavior that will reveal information about the operating systems or firmware in the environment. Operating System detection is possible because implementations of common protocols (Such as IP or TCP) differ in distinct ways. While the implementation differences are not sufficient to 'break' compatibility with the protocol the differences are detectable because the target will respond in unique ways to specific probing activity that breaks the semantic or logical rules of packet construction for a protocol. Different operating systems will have a unique response to the anomalous input, providing the basis to fingerprint the OS behavior. This type of OS fingerprinting can distinguish between operating system types and versions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Active OS Fingerprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/312.html",
      "id": "CAPEC-312"
    },
    {
      "Description": "<b>CAPEC-313: Passive OS Fingerprinting</b><br>An adversary engages in activity to detect the version or type of OS software in a an environment by passively monitoring communication between devices, nodes, or applications. Passive techniques for operating system detection send no actual probes to a target, but monitor network or client-server communication between nodes in order to identify operating systems based on observed behavior as compared to a database of known signatures or values. While passive OS fingerprinting is not usually as reliable as active methods, it is generally better able to evade detection.",
      "color": "#75aaff",
      "size": 18,
      "label": "Passive OS Fingerprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/313.html",
      "id": "CAPEC-313"
    },
    {
      "Description": "<b>CAPEC-317: IP ID Sequencing Probe</b><br>This OS fingerprinting probe analyzes the IP 'ID' field sequence number generation algorithm of a remote host. Operating systems generate IP 'ID' numbers differently, allowing an attacker to identify the operating system of the host by examining how is assigns ID numbers when generating response packets. RFC 791 does not specify how ID numbers are chosen or their ranges, so ID sequence generation differs from implementation to implementation. There are two kinds of IP 'ID' sequence number analysis - IP 'ID' Sequencing: analyzing the IP 'ID' sequence generation algorithm for one protocol used by a host and Shared IP 'ID' Sequencing: analyzing the packet ordering via IP 'ID' values spanning multiple protocols, such as between ICMP and TCP.",
      "color": "#94ebff",
      "size": 10,
      "label": "IP ID Sequencing Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/317.html",
      "id": "CAPEC-317"
    },
    {
      "Description": "<b>CAPEC-318: IP 'ID' Echoed Byte-Order Probe</b><br>This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'ID' value from the probe packet. An attacker sends a UDP datagram with an arbitrary IP 'ID' value to a closed port on the remote host to observe the manner in which this bit is echoed back in the ICMP error message. The identification field (ID) is typically utilized for reassembling a fragmented packet. Some operating systems or router firmware reverse the bit order of the ID field when echoing the IP Header portion of the original datagram within an ICMP error message.",
      "color": "#94ebff",
      "size": 10,
      "label": "IP 'ID' Echoed Byte-Order Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/318.html",
      "id": "CAPEC-318"
    },
    {
      "Description": "<b>CAPEC-319: IP (DF) 'Don't Fragment Bit' Echoing Probe</b><br>This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'DF' (Don't Fragment) bit in a response packet. An attacker sends a UDP datagram with the DF bit set to a closed port on the remote host to observe whether the 'DF' bit is set in the response packet. Some operating systems will echo the bit in the ICMP error message while others will zero out the bit in the response packet.",
      "color": "#94ebff",
      "size": 10,
      "label": "IP (DF) 'Don't Fragment Bit' Echoing Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/319.html",
      "id": "CAPEC-319"
    },
    {
      "Description": "<b>CAPEC-32: XSS Through HTTP Query Strings</b><br>An adversary embeds malicious script code in the parameters of an HTTP query string and convinces a victim to submit the HTTP request that contains the query string to a vulnerable web application. The web application then procedes to use the values parameters without properly validation them first and generates the HTML code that will be executed by the victim's browser.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Through HTTP Query Strings",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/32.html",
      "id": "CAPEC-32"
    },
    {
      "Description": "<b>CAPEC-320: TCP Timestamp Probe</b><br>This OS fingerprinting probe examines the remote server's implementation of TCP timestamps. Not all operating systems implement timestamps within the TCP header, but when timestamps are used then this provides the attacker with a means to guess the operating system of the target. The attacker begins by probing any active TCP service in order to get response which contains a TCP timestamp. Different Operating systems update the timestamp value using different intervals. This type of analysis is most accurate when multiple timestamp responses are received and then analyzed. TCP timestamps can be found in the TCP Options field of the TCP header.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Timestamp Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/320.html",
      "id": "CAPEC-320"
    },
    {
      "Description": "<b>CAPEC-321: TCP Sequence Number Probe</b><br>This OS fingerprinting probe tests the target system's assignment of TCP sequence numbers. One common way to test TCP Sequence Number generation is to send a probe packet to an open port on the target and then compare the how the Sequence Number generated by the target relates to the Acknowledgement Number in the probe packet. Different operating systems assign Sequence Numbers differently, so a fingerprint of the operating system can be obtained by categorizing the relationship between the acknowledgement number and sequence number as follows: 1) the Sequence Number generated by the target is Zero, 2) the Sequence Number generated by the target is the same as the acknowledgement number in the probe, 3) the Sequence Number generated by the target is the acknowledgement number plus one, or 4) the Sequence Number is any other non-zero number.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Sequence Number Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/321.html",
      "id": "CAPEC-321"
    },
    {
      "Description": "<b>CAPEC-322: TCP (ISN) Greatest Common Divisor Probe</b><br>This OS fingerprinting probe sends a number of TCP SYN packets to an open port of a remote machine. The Initial Sequence Number (ISN) in each of the SYN/ACK response packets is analyzed to determine the smallest number that the target host uses when incrementing sequence numbers. This information can be useful for identifying an operating system because particular operating systems and versions increment sequence numbers using different values. The result of the analysis is then compared against a database of OS behaviors to determine the OS type and/or version.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP (ISN) Greatest Common Divisor Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/322.html",
      "id": "CAPEC-322"
    },
    {
      "Description": "<b>CAPEC-323: TCP (ISN) Counter Rate Probe</b><br>This OS detection probe measures the average rate of initial sequence number increments during a period of time. Sequence numbers are incremented using a time-based algorithm and are susceptible to a timing analysis that can determine the number of increments per unit time. The result of this analysis is then compared against a database of operating systems and versions to determine likely operation system matches.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP (ISN) Counter Rate Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/323.html",
      "id": "CAPEC-323"
    },
    {
      "Description": "<b>CAPEC-324: TCP (ISN) Sequence Predictability Probe</b><br>This type of operating system probe attempts to determine an estimate for how predictable the sequence number generation algorithm is for a remote host. Statistical techniques, such as standard deviation, can be used to determine how predictable the sequence number generation is for a system. This result can then be compared to a database of operating system behaviors to determine a likely match for operating system and version.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP (ISN) Sequence Predictability Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/324.html",
      "id": "CAPEC-324"
    },
    {
      "Description": "<b>CAPEC-325: TCP Congestion Control Flag (ECN) Probe</b><br>This OS fingerprinting probe checks to see if the remote host supports explicit congestion notification (ECN) messaging. ECN messaging was designed to allow routers to notify a remote host when signal congestion problems are occurring. Explicit Congestion Notification messaging is defined by RFC 3168. Different operating systems and versions may or may not implement ECN notifications, or may respond uniquely to particular ECN flag types.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Congestion Control Flag (ECN) Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/325.html",
      "id": "CAPEC-325"
    },
    {
      "Description": "<b>CAPEC-326: TCP Initial Window Size Probe</b><br>This OS fingerprinting probe checks the initial TCP Window size. TCP stacks limit the range of sequence numbers allowable within a session to maintain the \"connected\" state within TCP protocol logic. The initial window size specifies a range of acceptable sequence numbers that will qualify as a response to an ACK packet within a session. Various operating systems use different Initial window sizes. The initial window size can be sampled by establishing an ordinary TCP connection.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Initial Window Size Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/326.html",
      "id": "CAPEC-326"
    },
    {
      "Description": "<b>CAPEC-327: TCP Options Probe</b><br>This OS fingerprinting probe analyzes the type and order of any TCP header options present within a response segment. Most operating systems use unique ordering and different option sets when options are present. RFC 793 does not specify a required order when options are present, so different implementations use unique ways of ordering or structuring TCP options. TCP options can be generated by ordinary TCP traffic.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Options Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/327.html",
      "id": "CAPEC-327"
    },
    {
      "Description": "<b>CAPEC-328: TCP 'RST' Flag Checksum Probe</b><br>This OS fingerprinting probe performs a checksum on any ASCII data contained within the data portion or a RST packet. Some operating systems will report a human-readable text message in the payload of a 'RST' (reset) packet when specific types of connection errors occur. RFC 1122 allows text payloads within reset packets but not all operating systems or routers implement this functionality.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP 'RST' Flag Checksum Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/328.html",
      "id": "CAPEC-328"
    },
    {
      "Description": "<b>CAPEC-329: ICMP Error Message Quoting Probe</b><br>An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the amount of data returned or \"Quoted\" from the originating request that generated the ICMP error message.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Error Message Quoting Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/329.html",
      "id": "CAPEC-329"
    },
    {
      "Description": "<b>CAPEC-33: HTTP Request Smuggling</b><br>An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages using various HTTP headers, request-line and body parameters as well as message sizes (denoted by the end of message signaled by a given HTTP header) by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to secretly send unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server). \n See CanPrecede relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Request Smuggling",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/33.html",
      "id": "CAPEC-33"
    },
    {
      "Description": "<b>CAPEC-330: ICMP Error Message Echoing Integrity Probe</b><br>An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the integrity of data returned or \"Quoted\" from the originating request that generated the error message.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Error Message Echoing Integrity Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/330.html",
      "id": "CAPEC-330"
    },
    {
      "Description": "<b>CAPEC-331: ICMP IP Total Length Field Probe</b><br>An adversary sends a UDP packet to a closed port on the target machine to solicit an IP Header's total length field value within the echoed 'Port Unreachable\" error message. This type of behavior is useful for building a signature-base of operating system responses, particularly when error messages contain other types of information that is useful identifying specific operating system responses.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP IP Total Length Field Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/331.html",
      "id": "CAPEC-331"
    },
    {
      "Description": "<b>CAPEC-332: ICMP IP 'ID' Field Error Message Probe</b><br>An adversary sends a UDP datagram having an assigned value to its internet identification field (ID) to a closed port on a target to observe the manner in which this bit is echoed back in the ICMP error message. This allows the attacker to construct a fingerprint of specific OS behaviors.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP IP 'ID' Field Error Message Probe",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/332.html",
      "id": "CAPEC-332"
    },
    {
      "Description": "<b>CAPEC-34: HTTP Response Splitting</b><br>An adversary manipulates and injects malicious content, in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., web server) or into an already spoofed HTTP response from an adversary controlled domain/site. \n See CanPrecede relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Response Splitting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/34.html",
      "id": "CAPEC-34"
    },
    {
      "Description": "<b>CAPEC-35: Leverage Executable Code in Non-Executable Files</b><br>An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
      "color": "#94ebff",
      "size": 10,
      "label": "Leverage Executable Code in Non-Executable Files",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/35.html",
      "id": "CAPEC-35"
    },
    {
      "Description": "<b>CAPEC-36: Using Unpublished Interfaces or Functionality</b><br>An adversary searches for and invokes interfaces or functionality that the target system designers did not intend to be publicly available. If interfaces fail to authenticate requests, the attacker may be able to invoke functionality they are not authorized for.",
      "color": "#75aaff",
      "size": 18,
      "label": "Using Unpublished Interfaces or Functionality",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/36.html",
      "id": "CAPEC-36"
    },
    {
      "Description": "<b>CAPEC-37: Retrieve Embedded Sensitive Data</b><br>An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Retrieve Embedded Sensitive Data",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/37.html",
      "id": "CAPEC-37"
    },
    {
      "Description": "<b>CAPEC-38: Leveraging/Manipulating Configuration File Search Paths</b><br>This pattern of attack sees an adversary load a malicious resource into a program's standard path so that when a known command is executed then the system instead executes the malicious component. The adversary can either modify the search path a program uses, like a PATH variable or classpath, or they can manipulate resources on the path to point to their malicious components. J2EE applications and other component based applications that are built from multiple binaries can have very long list of dependencies to execute. If one of these libraries and/or references is controllable by the attacker then application controls can be circumvented by the attacker.",
      "color": "#94ebff",
      "size": 10,
      "label": "Leveraging/Manipulating Configuration File Search Paths",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/38.html",
      "id": "CAPEC-38"
    },
    {
      "Description": "<b>CAPEC-383: Harvesting Information via API Event Monitoring</b><br>An adversary hosts an event within an application framework and then monitors the data exchanged during the course of the event for the purpose of harvesting any important data leaked during the transactions. One example could be harvesting lists of usernames or userIDs for the purpose of sending spam messages to those users. One example of this type of attack involves the adversary creating an event within the sub-application. Assume the adversary hosts a \"virtual sale\" of rare items. As other users enter the event, the attacker records via AiTM (CAPEC-94) proxy the user_ids and usernames of everyone who attends. The adversary would then be able to spam those users within the application using an automated script.",
      "color": "#94ebff",
      "size": 10,
      "label": "Harvesting Information via API Event Monitoring",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/383.html",
      "id": "CAPEC-383"
    },
    {
      "Description": "<b>CAPEC-407: Pretexting</b><br>An adversary engages in pretexting behavior to solicit information from target persons, or manipulate the target into performing some action that serves the adversary's interests. During a pretexting attack, the adversary creates an invented scenario, assuming an identity or role to persuade a targeted victim to release information or perform some action. It is more than just creating a lie; in some cases it can be creating a whole new identity and then using that identity to manipulate the receipt of information.",
      "color": "#75aaff",
      "size": 18,
      "label": "Pretexting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/407.html",
      "id": "CAPEC-407"
    },
    {
      "Description": "<b>CAPEC-384: Application API Message Manipulation via Man-in-the-Middle</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to perform adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system. Despite the use of AiTH software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true \"Adversary-in-the-Middle\" attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client.",
      "color": "#75aaff",
      "size": 18,
      "label": "Application API Message Manipulation via Man-in-the-Middle",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/384.html",
      "id": "CAPEC-384"
    },
    {
      "Description": "<b>CAPEC-385: Transaction or Event Tampering via Application API Manipulation</b><br>An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, substitute one item or another, spoof an existing item and conduct a false exchange, or otherwise change the amounts or identity of what is being exchanged. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in game can be monetized via sales for coin, virtual dollars, etc. The purpose of the attack is for the attack to scam the victim by trapping the data packets involved the exchange and altering the integrity of the transfer process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Transaction or Event Tampering via Application API Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/385.html",
      "id": "CAPEC-385"
    },
    {
      "Description": "<b>CAPEC-386: Application API Navigation Remapping</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud.",
      "color": "#75aaff",
      "size": 18,
      "label": "Application API Navigation Remapping",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/386.html",
      "id": "CAPEC-386"
    },
    {
      "Description": "<b>CAPEC-387: Navigation Remapping To Propagate Malicious Content</b><br>An adversary manipulates either egress or ingress data from a client within an application framework in order to change the content of messages and thereby circumvent the expected application logic.",
      "color": "#94ebff",
      "size": 10,
      "label": "Navigation Remapping To Propagate Malicious Content",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/387.html",
      "id": "CAPEC-387"
    },
    {
      "Description": "<b>CAPEC-388: Application API Button Hijacking</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains buttons that point to an attacker controlled destination.",
      "color": "#94ebff",
      "size": 10,
      "label": "Application API Button Hijacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/388.html",
      "id": "CAPEC-388"
    },
    {
      "Description": "<b>CAPEC-389: Content Spoofing Via Application API Manipulation</b><br>An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, spam-like content, or links to the attackers' code. In general, content-spoofing within an application API can be employed to stage many different types of attacks varied based on the attackers' intent. The techniques require use of specialized software that allow the attacker to use adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Content Spoofing Via Application API Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/389.html",
      "id": "CAPEC-389"
    },
    {
      "Description": "<b>CAPEC-390: Bypassing Physical Security</b><br>Facilities often used layered models for physical security such as traditional locks, Electronic-based card entry systems, coupled with physical alarms. Hardware security mechanisms range from the use of computer case and cable locks as well as RFID tags for tracking computer assets. This layered approach makes it difficult for random physical security breaches to go unnoticed, but is less effective at stopping deliberate and carefully planned break-ins. Avoiding detection begins with evading building security and surveillance and methods for bypassing the electronic or physical locks which secure entry points.",
      "color": "#2176ff",
      "size": 30,
      "label": "Bypassing Physical Security",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/390.html",
      "id": "CAPEC-390"
    },
    {
      "Description": "<b>CAPEC-391: Bypassing Physical Locks</b><br>An attacker uses techniques and methods to bypass physical security measures of a building or facility. Physical locks may range from traditional lock and key mechanisms, cable locks used to secure laptops or servers, locks on server cases, or other such devices. Techniques such as lock bumping, lock forcing via snap guns, or lock picking can be employed to bypass those locks and gain access to the facilities or devices they protect, although stealth, evidence of tampering, and the integrity of the lock following an attack, are considerations that may determine the method employed. Physical locks are limited by the complexity of the locking mechanism. While some locks may offer protections such as shock resistant foam to prevent bumping or lock forcing methods, many commonly employed locks offer no such countermeasures.",
      "color": "#75aaff",
      "size": 18,
      "label": "Bypassing Physical Locks",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/391.html",
      "id": "CAPEC-391"
    },
    {
      "Description": "<b>CAPEC-392: Lock Bumping</b><br>An attacker uses a bump key to force a lock on a building or facility and gain entry. Lock Bumping is the use of a special type of key that can be tapped or bumped to cause the pins within the lock to fall into temporary alignment, allowing the lock to be opened. Lock bumping allows an attacker to open a lock without having the correct key. A standard lock is secured by a set of internal pins that prevent the device from turning. Spring loaded driver pins push down on the key pins. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. A bump key is a specially constructed key that exploits this design. When the bump key is struck or firmly tapped, its teeth transfer the force of the tap into the key pins, causing the lock to momentarily shift into proper alignment for the mechanism to be opened.",
      "color": "#94ebff",
      "size": 10,
      "label": "Lock Bumping",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/392.html",
      "id": "CAPEC-392"
    },
    {
      "Description": "<b>CAPEC-393: Lock Picking</b><br>An attacker uses lock picking tools and techniques to bypass the locks on a building or facility. Lock picking is the use of a special set of tools to manipulate the pins within a lock. Different sets of tools are required for each type of lock. Lock picking attacks have the advantage of being non-invasive in that if performed correctly the lock will not be damaged. A standard lock pin-and-tumbler lock is secured by a set of internal pins that prevent the tumbler device from turning. Spring loaded driver pins push down on the key pins preventing rotation so that the bolt remains in a locked position.. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. Most common locks, such as domestic locks in the US, can be picked using a standard 2 tools (i.e. a torsion wrench and a hook pick).",
      "color": "#94ebff",
      "size": 10,
      "label": "Lock Picking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/393.html",
      "id": "CAPEC-393"
    },
    {
      "Description": "<b>CAPEC-394: Using a Snap Gun Lock to Force a Lock</b><br>An attacker uses a Snap Gun, also known as a Pick Gun, to force the lock on a building or facility. A Pick Gun is a special type of lock picking instrument that works on similar principles as lock bumping. A snap gun is a hand-held device with an attached metal pick. The metal pick strikes the pins within the lock, transferring motion from the key pins to the driver pins and forcing the lock into momentary alignment. A standard lock is secured by a set of internal pins that prevent the device from turning. Spring loaded driver pins push down on the key pins. When the correct key is inserted, the ridges on the key push the key pins up and against the driver pins, causing correct alignment which allows the lock cylinder to rotate. A Snap Gun exploits this design by using a metal pin to strike all of the key pins at once, forcing the driver pins to shift into an unlocked position. Unlike bump keys or lock picks, a Snap Gun may damage the lock more easily, leaving evidence that the lock has been tampered with.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using a Snap Gun Lock to Force a Lock",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/394.html",
      "id": "CAPEC-394"
    },
    {
      "Description": "<b>CAPEC-395: Bypassing Electronic Locks and Access Controls</b><br>An attacker exploits security assumptions to bypass electronic locks or other forms of access controls. Most attacks against electronic access controls follow similar methods but utilize different tools. Some electronic locks utilize magnetic strip cards, others employ RFID tags embedded within a card or badge, or may involve more sophisticated protections such as voice-print, thumb-print, or retinal biometrics. Magnetic Strip and RFID technologies are the most widespread because they are cost effective to deploy and more easily integrated with other electronic security measures. These technologies share common weaknesses that an attacker can exploit to gain access to a facility protected by the mechanisms via copying legitimate cards or badges, or generating new cards using reverse-engineered algorithms.",
      "color": "#75aaff",
      "size": 18,
      "label": "Bypassing Electronic Locks and Access Controls",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/395.html",
      "id": "CAPEC-395"
    },
    {
      "Description": "<b>CAPEC-397: Cloning Magnetic Strip Cards</b><br>An attacker duplicates the data on a Magnetic strip card (i.e. 'swipe card' or 'magstripe') to gain unauthorized access to a physical location or a person's private information. Magstripe cards encode data on a band of iron-based magnetic particles arrayed in a stripe along a rectangular card. Most magstripe card data formats conform to ISO standards 7810, 7811, 7813, 8583, and 4909. The primary advantage of magstripe technology is ease of encoding and portability, but this also renders magnetic strip cards susceptible to unauthorized duplication. If magstripe cards are used for access control, all an attacker need do is obtain a valid card long enough to make a copy of the card and then return the card to its location (i.e. a co-worker's desk). Magstripe reader/writers are widely available as well as software for analyzing data encoded on the cards. By swiping a valid card, it becomes trivial to make any number of duplicates that function as the original.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cloning Magnetic Strip Cards",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/397.html",
      "id": "CAPEC-397"
    },
    {
      "Description": "<b>CAPEC-398: Magnetic Strip Card Brute Force Attacks</b><br>An adversary analyzes the data on two or more magnetic strip cards and is able to generate new cards containing valid sequences that allow unauthorized access and/or impersonation of individuals.",
      "color": "#94ebff",
      "size": 10,
      "label": "Magnetic Strip Card Brute Force Attacks",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/398.html",
      "id": "CAPEC-398"
    },
    {
      "Description": "<b>CAPEC-399: Cloning RFID Cards or Chips</b><br>An attacker analyzes data returned by an RFID chip and uses this information to duplicate a RFID signal that responds identically to the target chip. In some cases RFID chips are used for building access control, employee identification, or as markers on products being delivered along a supply chain. Some organizations also embed RFID tags inside computer assets to trigger alarms if they are removed from particular rooms, zones, or buildings. Similar to Magnetic strip cards, RFID cards are susceptible to duplication (cloning) and reuse.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cloning RFID Cards or Chips",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/399.html",
      "id": "CAPEC-399"
    },
    {
      "Description": "<b>CAPEC-4: Using Alternative IP Address Encodings</b><br>This attack relies on the adversary using unexpected formats for representing IP addresses. Networked applications may expect network location information in a specific format, such as fully qualified domains names (FQDNs), URL, IP address, or IP Address ranges. If the location information is not validated against a variety of different possible encodings and formats, the adversary can use an alternate format to bypass application access control.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Alternative IP Address Encodings",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/4.html",
      "id": "CAPEC-4"
    },
    {
      "Description": "<b>CAPEC-40: Manipulating Writeable Terminal Devices</b><br>This attack exploits terminal devices that allow themselves to be written to by other users. The attacker sends command strings to the target terminal device hoping that the target user will hit enter and thereby execute the malicious command with their privileges. The attacker can send the results (such as copying /etc/passwd) to a known directory and collect once the attack has succeeded.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating Writeable Terminal Devices",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/40.html",
      "id": "CAPEC-40"
    },
    {
      "Description": "<b>CAPEC-400: RFID Chip Deactivation or Destruction</b><br>An attacker uses methods to deactivate a passive RFID tag for the purpose of rendering the tag, badge, card, or object containing the tag unresponsive. RFID tags are used primarily for access control, inventory, or anti-theft devices. The purpose of attacking the RFID chip is to disable or damage the chip without causing damage to the object housing it.",
      "color": "#94ebff",
      "size": 10,
      "label": "RFID Chip Deactivation or Destruction",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/400.html",
      "id": "CAPEC-400"
    },
    {
      "Description": "<b>CAPEC-401: Physically Hacking Hardware</b><br>An adversary exploits a weakness in access control to gain access to currently installed hardware and precedes to implement changes or secretly replace a hardware component which undermines the system's integrity for the purpose of carrying out an attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Physically Hacking Hardware",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/401.html",
      "id": "CAPEC-401"
    },
    {
      "Description": "<b>CAPEC-440: Hardware Integrity Attack</b><br>An adversary exploits a weakness in the system maintenance process and causes a change to be made to a technology, product, component, or sub-component or a new one installed during its deployed use at the victim location for the purpose of carrying out an attack.",
      "color": "#2176ff",
      "size": 30,
      "label": "Hardware Integrity Attack",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/440.html",
      "id": "CAPEC-440"
    },
    {
      "Description": "<b>CAPEC-402: Bypassing ATA Password Security</b><br>An adversary exploits a weakness in ATA security on a drive to gain access to the information the drive contains without supplying the proper credentials. ATA Security is often employed to protect hard disk information from unauthorized access. The mechanism requires the user to type in a password before the BIOS is allowed access to drive contents. Some implementations of ATA security will accept the ATA command to update the password without the user having authenticated with the BIOS. This occurs because the security mechanism assumes the user has first authenticated via the BIOS prior to sending commands to the drive. Various methods exist for exploiting this flaw, the most common being installing the ATA protected drive into a system lacking ATA security features (a.k.a. hot swapping). Once the drive is installed into the new system the BIOS can be used to reset the drive password.",
      "color": "#94ebff",
      "size": 10,
      "label": "Bypassing ATA Password Security",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/402.html",
      "id": "CAPEC-402"
    },
    {
      "Description": "<b>CAPEC-406: Dumpster Diving</b><br>An adversary cases an establishment and searches through trash bins, dumpsters, or areas where company information may have been accidentally discarded for information items which may be useful to the dumpster diver. The devastating nature of the items and/or information found can be anything from medical records, resumes, personal photos and emails, bank statements, account details or information about software, tech support logs and so much more, including hardware devices. By collecting this information an adversary may be able to learn important facts about the person or organization that play a role in helping the adversary in their attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Dumpster Diving",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/406.html",
      "id": "CAPEC-406"
    },
    {
      "Description": "<b>CAPEC-416: Manipulate Human Behavior</b><br>An adversary exploits inherent human psychological predisposition to influence a targeted individual or group to solicit information or manipulate the target into performing an action that serves the adversary's interests. Many interpersonal social engineering techniques do not involve outright deception, although they can; many are subtle ways of manipulating a target to remove barriers, make the target feel comfortable, and produce an exchange in which the target is either more likely to share information directly, or let key information slip out unintentionally. A skilled adversary uses these techniques when appropriate to produce the desired outcome. Manipulation techniques vary from the overt, such as pretending to be a supervisor to a help desk, to the subtle, such as making the target feel comfortable with the adversary's speech and thought patterns.",
      "color": "#2176ff",
      "size": 30,
      "label": "Manipulate Human Behavior",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/416.html",
      "id": "CAPEC-416"
    },
    {
      "Description": "<b>CAPEC-410: Information Elicitation</b><br>An adversary engages an individual using any combination of social engineering methods for the purpose of extracting information. Accurate contextual and environmental queues, such as knowing important information about the target company or individual can greatly increase the success of the attack and the quality of information gathered. Authentic mimicry combined with detailed knowledge increases the success of elicitation attacks.",
      "color": "#2176ff",
      "size": 30,
      "label": "Information Elicitation",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/410.html",
      "id": "CAPEC-410"
    },
    {
      "Description": "<b>CAPEC-41: Using Meta-characters in E-mail Headers to Inject Malicious Payloads</b><br>This type of attack involves an attacker leveraging meta-characters in email headers to inject improper behavior into email programs. Email software has become increasingly sophisticated and feature-rich. In addition, email applications are ubiquitous and connected directly to the Web making them ideal targets to launch and propagate attacks. As the user demand for new functionality in email applications grows, they become more like browsers with complex rendering and plug in routines. As more email functionality is included and abstracted from the user, this creates opportunities for attackers. Virtually all email applications do not list email header information by default, however the email header contains valuable attacker vectors for the attacker to exploit particularly if the behavior of the email client application is known. Meta-characters are hidden from the user, but can contain scripts, enumerations, probes, and other attacks against the user's system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Meta-characters in E-mail Headers to Inject Malicious Payloads",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/41.html",
      "id": "CAPEC-41"
    },
    {
      "Description": "<b>CAPEC-412: Pretexting via Customer Service</b><br>An adversary engages in pretexting behavior, assuming the role of someone who works for Customer Service, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. One example of a scenario such as this would be to call an individual, articulate your false affiliation with a credit card company, and then attempt to get the individual to verify their credit card number.",
      "color": "#94ebff",
      "size": 10,
      "label": "Pretexting via Customer Service",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/412.html",
      "id": "CAPEC-412"
    },
    {
      "Description": "<b>CAPEC-413: Pretexting via Tech Support</b><br>An adversary engages in pretexting behavior, assuming the role of a tech support worker, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. An adversary who uses social engineering to impersonate a tech support worker can have devastating effects on a network. This is an effective attack vector, because it can give an adversary physical access to network computers. It only takes a matter of seconds for someone to compromise a computer with physical access. One of the best technological tools at the disposal of a social engineer, posing as a technical support person, is a USB thumb drive. These are small, easy to conceal, and can be loaded with different payloads depending on what task needs to be done. However, this form of attack does not require physical access as it can also be effectively carried out via phone or email.",
      "color": "#94ebff",
      "size": 10,
      "label": "Pretexting via Tech Support",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/413.html",
      "id": "CAPEC-413"
    },
    {
      "Description": "<b>CAPEC-414: Pretexting via Delivery Person</b><br>An adversary engages in pretexting behavior, assuming the role of a delivery person, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. Impersonating a delivery person is an effective attack and an easy attack since not much acting is involved. Usually the hardest part is looking the part and having all of the proper credentials, papers and \"deliveries\" in order to be able to pull it off.",
      "color": "#94ebff",
      "size": 10,
      "label": "Pretexting via Delivery Person",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/414.html",
      "id": "CAPEC-414"
    },
    {
      "Description": "<b>CAPEC-415: Pretexting via Phone</b><br>An adversary engages in pretexting behavior, assuming some sort of trusted role, and contacting the targeted individual or organization via phone to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. This is the most common social engineering attack. Some of the most commonly effective approaches are to impersonate a fellow employee, impersonate a computer technician or to target help desk personnel.",
      "color": "#94ebff",
      "size": 10,
      "label": "Pretexting via Phone",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/415.html",
      "id": "CAPEC-415"
    },
    {
      "Description": "<b>CAPEC-417: Influence Perception</b><br>The adversary uses social engineering to exploit the target's perception of the relationship between the adversary and themselves. This goal is to persuade the target to unknowingly perform an action or divulge information that is advantageous to the adversary.",
      "color": "#75aaff",
      "size": 18,
      "label": "Influence Perception",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/417.html",
      "id": "CAPEC-417"
    },
    {
      "Description": "<b>CAPEC-418: Influence Perception of Reciprocation</b><br>An adversary uses a social engineering techniques to produce a sense of obligation in the target to perform a certain action or concede some sensitive or key piece of information. Obligation has to do with actions one feels they need to take due to some sort of social, legal, or moral requirement, duty, contract, or promise. There are various techniques for fostering a sense of obligation to reciprocate or concede during ordinary modes of communication. One method is to compliment the target, and follow up the compliment with a question. If performed correctly the target may volunteer a key piece of information, sometimes involuntarily.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Reciprocation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/418.html",
      "id": "CAPEC-418"
    },
    {
      "Description": "<b>CAPEC-42: MIME Conversion</b><br>An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
      "color": "#94ebff",
      "size": 10,
      "label": "MIME Conversion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/42.html",
      "id": "CAPEC-42"
    },
    {
      "Description": "<b>CAPEC-420: Influence Perception of Scarcity</b><br>The adversary leverages a perception of scarcity to persuade the target to perform an action or divulge information that is advantageous to the adversary. By conveying a perception of scarcity, or a situation of limited supply, the adversary aims to create a sense of urgency in the context of a target's decision-making process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Scarcity",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/420.html",
      "id": "CAPEC-420"
    },
    {
      "Description": "<b>CAPEC-421: Influence Perception of Authority</b><br>An adversary uses a social engineering technique to convey a sense of authority that motivates the target to reveal specific information or take specific action. There are various techniques for producing a sense of authority during ordinary modes of communication. One common method is impersonation. By impersonating someone with a position of power within an organization, an adversary may motivate the target individual to reveal some piece of sensitive information or perform an action that benefits the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Authority",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/421.html",
      "id": "CAPEC-421"
    },
    {
      "Description": "<b>CAPEC-422: Influence Perception of Commitment and Consistency</b><br>An adversary uses social engineering to convince the target to do minor tasks as opposed to larger actions. After complying with a request, individuals are more likely to agree to subsequent requests that are similar in type and required effort.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Commitment and Consistency",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/422.html",
      "id": "CAPEC-422"
    },
    {
      "Description": "<b>CAPEC-423: Influence Perception of Liking</b><br>The adversary influences the target's actions by building a relationship where the target has a liking to the adversary. People are more likely to be influenced by people of whom they are fond, so the adversary attempts to ingratiate themself with the target via actions, appearance, or a combination thereof.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Liking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/423.html",
      "id": "CAPEC-423"
    },
    {
      "Description": "<b>CAPEC-424: Influence Perception of Consensus or Social Proof</b><br>The adversary influences the target's actions by leveraging the inherent human nature to assume behavior of others is appropriate. In situations of uncertainty, people tend to behave in ways they see others behaving. The adversary convinces the target of adopting behavior or actions that is advantageous to the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence Perception of Consensus or Social Proof",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/424.html",
      "id": "CAPEC-424"
    },
    {
      "Description": "<b>CAPEC-425: Target Influence via Framing</b><br>An adversary uses framing techniques to contextualize a conversation so that the target is more likely to be influenced by the adversary's point of view. Framing is information and experiences in life that alter the way we react to decisions we must make. This type of persuasive technique exploits the way people are conditioned to perceive data and its significance, while avoiding negative or avoidance responses from the target. Rather than a specific technique framing is a methodology of conversation that slowly encourages the target to adopt to the adversary's perspective. One technique of framing is to avoid the use of the word \"No\" and to contextualize responses in a manner that is positive. When performed skillfully the target is much more likely to volunteer information or perform actions favorable to the adversary.",
      "color": "#75aaff",
      "size": 18,
      "label": "Target Influence via Framing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/425.html",
      "id": "CAPEC-425"
    },
    {
      "Description": "<b>CAPEC-426: Influence via Incentives</b><br>The adversary incites a behavior from the target by manipulating something of influence. This is commonly associated with financial, social, or ideological incentivization. Examples include monetary fraud, peer pressure, and preying on the target's morals or ethics. The most effective incentive against one target might not be as effective against another, therefore the adversary must gather information about the target's vulnerability to particular incentives.",
      "color": "#75aaff",
      "size": 18,
      "label": "Influence via Incentives",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/426.html",
      "id": "CAPEC-426"
    },
    {
      "Description": "<b>CAPEC-427: Influence via Psychological Principles</b><br>The adversary shapes the target's actions or behavior by focusing on the ways human interact and learn, leveraging such elements as cognitive and social psychology. In a variety of ways, a target can be influenced to behave or perform an action through capitalizing on what scholarship and research has learned about how and why humans react to specific scenarios and cues.",
      "color": "#75aaff",
      "size": 18,
      "label": "Influence via Psychological Principles",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/427.html",
      "id": "CAPEC-427"
    },
    {
      "Description": "<b>CAPEC-428: Influence via Modes of Thinking</b><br>The adversary tailors their communication to the language and thought patterns of the target thereby weakening barriers or reluctance to communication. This method is a way of building rapport with a target by matching their speech patterns and the primary ways or dominant senses with which they make abstractions. This technique can be used to make the target more receptive to sharing information because the adversary has adapted their communication forms to match those of the target. When skillfully employed, the target is likely to be unaware that they are being manipulated.",
      "color": "#94ebff",
      "size": 10,
      "label": "Influence via Modes of Thinking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/428.html",
      "id": "CAPEC-428"
    },
    {
      "Description": "<b>CAPEC-429: Target Influence via Eye Cues</b><br>The adversary gains information via non-verbal means from the target through eye movements.",
      "color": "#94ebff",
      "size": 10,
      "label": "Target Influence via Eye Cues",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/429.html",
      "id": "CAPEC-429"
    },
    {
      "Description": "<b>CAPEC-43: Exploiting Multiple Input Interpretation Layers</b><br>An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploiting Multiple Input Interpretation Layers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/43.html",
      "id": "CAPEC-43"
    },
    {
      "Description": "<b>CAPEC-433: Target Influence via The Human Buffer Overflow</b><br>An attacker utilizes a technique to insinuate commands to the subconscious mind of the target via communication patterns. The human buffer overflow methodology does not rely on over-stimulating the mind of the target, but rather embedding messages within communication that the mind of the listener assembles at a subconscious level. The human buffer-overflow method is similar to subconscious programming to the extent that messages are embedded within the message.",
      "color": "#94ebff",
      "size": 10,
      "label": "Target Influence via The Human Buffer Overflow",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/433.html",
      "id": "CAPEC-433"
    },
    {
      "Description": "<b>CAPEC-434: Target Influence via Interview and Interrogation</b><br>",
      "color": "#94ebff",
      "size": 10,
      "label": "Target Influence via Interview and Interrogation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/434.html",
      "id": "CAPEC-434"
    },
    {
      "Description": "<b>CAPEC-435: Target Influence via Instant Rapport</b><br>",
      "color": "#94ebff",
      "size": 10,
      "label": "Target Influence via Instant Rapport",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/435.html",
      "id": "CAPEC-435"
    },
    {
      "Description": "<b>CAPEC-438: Modification During Manufacture</b><br>An attacker modifies a technology, product, or component during a stage in its manufacture for the purpose of carrying out an attack against some entity involved in the supply chain lifecycle. There are an almost limitless number of ways an attacker can modify a technology when they are involved in its manufacture, as the attacker has potential inroads to the software composition, hardware design and assembly, firmware, or basic design mechanics. Additionally, manufacturing of key components is often outsourced with the final product assembled by the primary manufacturer. The greatest risk, however, is deliberate manipulation of design specifications to produce malicious hardware or devices. There are billions of transistors in a single integrated circuit and studies have shown that fewer than 10 transistors are required to create malicious functionality.",
      "color": "#2176ff",
      "size": 30,
      "label": "Modification During Manufacture",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/438.html",
      "id": "CAPEC-438"
    },
    {
      "Description": "<b>CAPEC-439: Manipulation During Distribution</b><br>An attacker undermines the integrity of a product, software, or technology at some stage of the distribution channel. The core threat of modification or manipulation during distribution arise from the many stages of distribution, as a product may traverse multiple suppliers and integrators as the final asset is delivered. Components and services provided from a manufacturer to a supplier may be tampered with during integration or packaging.",
      "color": "#2176ff",
      "size": 30,
      "label": "Manipulation During Distribution",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/439.html",
      "id": "CAPEC-439"
    },
    {
      "Description": "<b>CAPEC-44: Overflow Binary Resource File</b><br>An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the adversary access to the execution stack and execute arbitrary code in the target process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Overflow Binary Resource File",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/44.html",
      "id": "CAPEC-44"
    },
    {
      "Description": "<b>CAPEC-441: Malicious Logic Insertion</b><br>An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.",
      "color": "#2176ff",
      "size": 30,
      "label": "Malicious Logic Insertion",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/441.html",
      "id": "CAPEC-441"
    },
    {
      "Description": "<b>CAPEC-442: Infected Software</b><br>An adversary adds malicious logic, often in the form of a computer virus, to otherwise benign software. This logic is often hidden from the user of the software and works behind the scenes to achieve negative impacts. Many times, the malicious logic is inserted into empty space between legitimate code, and is then called when the software is executed. This pattern of attack focuses on software already fielded and used in operation as opposed to software that is still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Software",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/442.html",
      "id": "CAPEC-442"
    },
    {
      "Description": "<b>CAPEC-443: Malicious Logic Inserted Into Product by Authorized Developer</b><br>An adversary uses their privileged position within an authorized development organization to inject malicious logic into a codebase or product.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Logic Inserted Into Product by Authorized Developer",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/443.html",
      "id": "CAPEC-443"
    },
    {
      "Description": "<b>CAPEC-445: Malicious Logic Insertion into Product Software via Configuration Management Manipulation</b><br>An adversary exploits a configuration management system so that malicious logic is inserted into a software products build, update or deployed environment. If an adversary can control the elements included in a product's configuration management for build they can potentially replace, modify or insert code files containing malicious logic. If an adversary can control elements of a product's ongoing operational configuration management baseline they can potentially force clients receiving updates from the system to install insecure software when receiving updates from the server.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Logic Insertion into Product Software via Configuration Management Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/445.html",
      "id": "CAPEC-445"
    },
    {
      "Description": "<b>CAPEC-446: Malicious Logic Insertion into Product via Inclusion of Third-Party Component</b><br>An adversary conducts supply chain attacks by the inclusion of insecure third-party components into a technology, product, or code-base, possibly packaging a malicious driver or component along with the product before shipping it to the consumer or acquirer.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Logic Insertion into Product via Inclusion of Third-Party Component",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/446.html",
      "id": "CAPEC-446"
    },
    {
      "Description": "<b>CAPEC-447: Design Alteration</b><br>An adversary modifies the design of a technology, product, or component to acheive a negative impact once the system is deployed. In this type of attack, the goal of the adversary is to modify the design of the system, prior to development starting, in such a way that the negative impact can be leveraged when the system is later deployed. Design alteration attacks differ from development alteration attacks in that design alteration attacks take place prior to development and which then may or may not be developed by the adverary. Design alteration attacks include modifying system designs to degrade system performance, cause unexpected states or errors, and general design changes that may lead to additional vulnerabilities. These attacks generally require insider access to modify design documents, but they may also be spoofed via web communications. The product is then developed and delivered to the user where the negative impact can be leveraged at a later time.",
      "color": "#75aaff",
      "size": 18,
      "label": "Design Alteration",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/447.html",
      "id": "CAPEC-447"
    },
    {
      "Description": "<b>CAPEC-448: Embed Virus into DLL</b><br>An adversary tampers with a DLL and embeds a computer virus into gaps between legitimate machine instructions. These gaps may be the result of compiler optimizations that pad memory blocks for performance gains. The embedded virus then attempts to infect any machine which interfaces with the product, and possibly steal private data or eavesdrop.",
      "color": "#94ebff",
      "size": 10,
      "label": "Embed Virus into DLL",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/448.html",
      "id": "CAPEC-448"
    },
    {
      "Description": "<b>CAPEC-45: Buffer Overflow via Symbolic Links</b><br>This type of attack leverages the use of symbolic links to cause buffer overflows. An adversary can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
      "color": "#94ebff",
      "size": 10,
      "label": "Buffer Overflow via Symbolic Links",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/45.html",
      "id": "CAPEC-45"
    },
    {
      "Description": "<b>CAPEC-452: Infected Hardware</b><br>An adversary inserts malicious logic into hardware, typically in the form of a computer virus or rootkit. This logic is often hidden from the user of the hardware and works behind the scenes to achieve negative impacts. This pattern of attack focuses on hardware already fielded and used in operation as opposed to hardware that is still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Hardware",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/452.html",
      "id": "CAPEC-452"
    },
    {
      "Description": "<b>CAPEC-456: Infected Memory</b><br>An adversary inserts malicious logic into memory enabling them to achieve a negative impact. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems that are still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Memory",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/456.html",
      "id": "CAPEC-456"
    },
    {
      "Description": "<b>CAPEC-457: USB Memory Attacks</b><br>An adversary loads malicious code onto a USB memory stick in order to infect any system which the device is plugged in to. USB drives present a significant security risk for business and government agencies. Given the ability to integrate wireless functionality into a USB stick, it is possible to design malware that not only steals confidential data, but sniffs the network, or monitor keystrokes, and then exfiltrates the stolen data off-site via a Wireless connection. Also, viruses can be transmitted via the USB interface without the specific use of a memory stick. The attacks from USB devices are often of such sophistication that experts conclude they are not the work of single individuals, but suggest state sponsorship. These attacks can be performed by an adversary with direct access to a target system or can be executed via means such as USB Drop Attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "USB Memory Attacks",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/457.html",
      "id": "CAPEC-457"
    },
    {
      "Description": "<b>CAPEC-458: Flash Memory Attacks</b><br>An adversary inserts malicious logic into a product or technology via flashing the on-board memory with a code-base that contains malicious logic. Various attacks exist against the integrity of flash memory, the most direct being rootkits coded into the BIOS or chipset of a device.",
      "color": "#94ebff",
      "size": 10,
      "label": "Flash Memory Attacks",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/458.html",
      "id": "CAPEC-458"
    },
    {
      "Description": "<b>CAPEC-459: Creating a Rogue Certification Authority Certificate</b><br>An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate certificate signing requests (CSR) that contain collision blocks in their \"to be signed\" parts. The adversary submits one CSR to be signed by a trusted certificate authority then uses the signed blob to make a second certificate appear signed by said certificate authority. Due to the hash collision, both certificates, though different, hash to the same value and so the signed blob works just as well in the second certificate. The net effect is that the adversary's second X.509 certificate, which the Certification Authority has never seen, is now signed and validated by that Certification Authority.",
      "color": "#94ebff",
      "size": 10,
      "label": "Creating a Rogue Certification Authority Certificate",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/459.html",
      "id": "CAPEC-459"
    },
    {
      "Description": "<b>CAPEC-473: Signature Spoof</b><br>An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Signature Spoof",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/473.html",
      "id": "CAPEC-473"
    },
    {
      "Description": "<b>CAPEC-46: Overflow Variables and Tags</b><br>This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The adversary crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Overflow Variables and Tags",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/46.html",
      "id": "CAPEC-46"
    },
    {
      "Description": "<b>CAPEC-460: HTTP Parameter Pollution (HPP)</b><br>An adversary adds duplicate HTTP GET/POST parameters by injecting query string delimiters. Via HPP it may be possible to override existing hardcoded HTTP parameters, modify the application behaviors, access and, potentially exploit, uncontrollable variables, and bypass input validation checkpoints and WAF rules.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Parameter Pollution (HPP)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/460.html",
      "id": "CAPEC-460"
    },
    {
      "Description": "<b>CAPEC-461: Web Services API Signature Forgery Leveraging Hash Function Extension Weakness</b><br>An adversary utilizes a hash function extension/padding weakness, to modify the parameters passed to the web service requesting authentication by generating their own call in order to generate a legitimate signature hash (as described in the notes), without knowledge of the secret token sometimes provided by the web service.",
      "color": "#75aaff",
      "size": 18,
      "label": "Web Services API Signature Forgery Leveraging Hash Function Extension Weakness",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/461.html",
      "id": "CAPEC-461"
    },
    {
      "Description": "<b>CAPEC-462: Cross-Domain Search Timing</b><br>An attacker initiates cross domain HTTP / GET requests and times the server responses. The timing of these responses may leak important information on what is happening on the server. Browser's same origin policy prevents the attacker from directly reading the server responses (in the absence of any other weaknesses), but does not prevent the attacker from timing the responses to requests that the attacker issued cross domain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross-Domain Search Timing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/462.html",
      "id": "CAPEC-462"
    },
    {
      "Description": "<b>CAPEC-463: Padding Oracle Crypto Attack</b><br>An adversary is able to efficiently decrypt data without knowing the decryption key if a target system leaks data on whether or not a padding error happened while decrypting the ciphertext. A target system that leaks this type of information becomes the padding oracle and an adversary is able to make use of that oracle to efficiently decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). In addition to performing decryption, an adversary is also able to produce valid ciphertexts (i.e., perform encryption) by using the padding oracle, all without knowing the encryption key.",
      "color": "#94ebff",
      "size": 10,
      "label": "Padding Oracle Crypto Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/463.html",
      "id": "CAPEC-463"
    },
    {
      "Description": "<b>CAPEC-97: Cryptanalysis</b><br>Cryptanalysis is a process of finding weaknesses in cryptographic algorithms and using these weaknesses to decipher the ciphertext without knowing the secret key (instance deduction). Sometimes the weakness is not in the cryptographic algorithm itself, but rather in how it is applied that makes cryptanalysis successful. An attacker may have other goals as well, such as: Total Break (finding the secret key), Global Deduction (finding a functionally equivalent algorithm for encryption and decryption that does not require knowledge of the secret key), Information Deduction (gaining some information about plaintexts or ciphertexts that was not previously known) and Distinguishing Algorithm (the attacker has the ability to distinguish the output of the encryption (ciphertext) from a random permutation of bits).",
      "color": "#75aaff",
      "size": 18,
      "label": "Cryptanalysis",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/97.html",
      "id": "CAPEC-97"
    },
    {
      "Description": "<b>CAPEC-464: Evercookie</b><br>An attacker creates a very persistent cookie that stays present even after the user thinks it has been removed. The cookie is stored on the victim's machine in over ten places. When the victim clears the cookie cache via traditional means inside the browser, that operation removes the cookie from certain places but not others. The malicious code then replicates the cookie from all of the places where it was not deleted to all of the possible storage locations once again. So the victim again has the cookie in all of the original storage locations. In other words, failure to delete the cookie in even one location will result in the cookie's resurrection everywhere. The evercookie will also persist across different browsers because certain stores (e.g., Local Shared Objects) are shared between different browsers.",
      "color": "#75aaff",
      "size": 18,
      "label": "Evercookie",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/464.html",
      "id": "CAPEC-464"
    },
    {
      "Description": "<b>CAPEC-465: Transparent Proxy Abuse</b><br>A transparent proxy serves as an intermediate between the client and the internet at large. It intercepts all requests originating from the client and forwards them to the correct location. The proxy also intercepts all responses to the client and forwards these to the client. All of this is done in a manner transparent to the client.",
      "color": "#75aaff",
      "size": 18,
      "label": "Transparent Proxy Abuse",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/465.html",
      "id": "CAPEC-465"
    },
    {
      "Description": "<b>CAPEC-466: Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy</b><br>An attacker leverages an adversary in the middle attack (CAPEC-94) in order to bypass the same origin policy protection in the victim's browser. This active adversary in the middle attack could be launched, for instance, when the victim is connected to a public WIFI hot spot. An attacker is able to intercept requests and responses between the victim's browser and some non-sensitive website that does not use TLS.",
      "color": "#75aaff",
      "size": 18,
      "label": "Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/466.html",
      "id": "CAPEC-466"
    },
    {
      "Description": "<b>CAPEC-467: Cross Site Identification</b><br>An attacker harvests identifying information about a victim via an active session that the victim's browser has with a social networking site. A victim may have the social networking site open in one tab or perhaps is simply using the \"remember me\" feature to keep their session with the social networking site active. An attacker induces a payload to execute in the victim's browser that transparently to the victim initiates a request to the social networking site (e.g., via available social network site APIs) to retrieve identifying information about a victim. While some of this information may be public, the attacker is able to harvest this information in context and may use it for further attacks on the user (e.g., spear phishing).",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross Site Identification",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/467.html",
      "id": "CAPEC-467"
    },
    {
      "Description": "<b>CAPEC-62: Cross Site Request Forgery</b><br>An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie.",
      "color": "#75aaff",
      "size": 18,
      "label": "Cross Site Request Forgery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/62.html",
      "id": "CAPEC-62"
    },
    {
      "Description": "<b>CAPEC-468: Generic Cross-Browser Cross-Domain Theft</b><br>An attacker makes use of Cascading Style Sheets (CSS) injection to steal data cross domain from the victim's browser. The attack works by abusing the standards relating to loading of CSS: 1. Send cookies on any load of CSS (including cross-domain) 2. When parsing returned CSS ignore all data that does not make sense before a valid CSS descriptor is found by the CSS parser.",
      "color": "#75aaff",
      "size": 18,
      "label": "Generic Cross-Browser Cross-Domain Theft",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/468.html",
      "id": "CAPEC-468"
    },
    {
      "Description": "<b>CAPEC-469: HTTP DoS</b><br>An attacker performs flooding at the HTTP level to bring down only a particular web application rather than anything listening on a TCP/IP connection. This denial of service attack requires substantially fewer packets to be sent which makes DoS harder to detect. This is an equivalent of SYN flood in HTTP. The idea is to keep the HTTP session alive indefinitely and then repeat that hundreds of times. This attack targets resource depletion weaknesses in web server software. The web server will wait to attacker's responses on the initiated HTTP sessions while the connection threads are being exhausted.",
      "color": "#75aaff",
      "size": 18,
      "label": "HTTP DoS",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/469.html",
      "id": "CAPEC-469"
    },
    {
      "Description": "<b>CAPEC-47: Buffer Overflow via Parameter Expansion</b><br>In this attack, the target software is given input that the adversary knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Buffer Overflow via Parameter Expansion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/47.html",
      "id": "CAPEC-47"
    },
    {
      "Description": "<b>CAPEC-470: Expanding Control over the Operating System from the Database</b><br>An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine. Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks. These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc.",
      "color": "#94ebff",
      "size": 10,
      "label": "Expanding Control over the Operating System from the Database",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/470.html",
      "id": "CAPEC-470"
    },
    {
      "Description": "<b>CAPEC-471: Search Order Hijacking</b><br>An adversary exploits a weakness in an application's specification of external libraries to exploit the functionality of the loader where the process loading the library searches first in the same directory in which the process binary resides and then in other directories. Exploitation of this preferential search order can allow an attacker to make the loading process load the adversary's rogue library rather than the legitimate library. This attack can be leveraged with many different libraries and with many different loading processes. No forensic trails are left in the system's registry or file system that an incorrect library had been loaded.",
      "color": "#94ebff",
      "size": 10,
      "label": "Search Order Hijacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/471.html",
      "id": "CAPEC-471"
    },
    {
      "Description": "<b>CAPEC-472: Browser Fingerprinting</b><br>An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser.",
      "color": "#94ebff",
      "size": 10,
      "label": "Browser Fingerprinting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/472.html",
      "id": "CAPEC-472"
    },
    {
      "Description": "<b>CAPEC-474: Signature Spoofing by Key Theft</b><br>An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signature Spoofing by Key Theft",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/474.html",
      "id": "CAPEC-474"
    },
    {
      "Description": "<b>CAPEC-475: Signature Spoofing by Improper Validation</b><br>An adversary exploits a cryptographic weakness in the signature verification algorithm implementation to generate a valid signature without knowing the key.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signature Spoofing by Improper Validation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/475.html",
      "id": "CAPEC-475"
    },
    {
      "Description": "<b>CAPEC-476: Signature Spoofing by Misrepresentation</b><br>An attacker exploits a weakness in the parsing or display code of the recipient software to generate a data blob containing a supposedly valid signature, but the signer's identity is falsely represented, which can lead to the attacker manipulating the recipient software or its victim user to perform compromising actions.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signature Spoofing by Misrepresentation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/476.html",
      "id": "CAPEC-476"
    },
    {
      "Description": "<b>CAPEC-477: Signature Spoofing by Mixing Signed and Unsigned Content</b><br>An attacker exploits the underlying complexity of a data structure that allows for both signed and unsigned content, to cause unsigned data to be processed as though it were signed data.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signature Spoofing by Mixing Signed and Unsigned Content",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/477.html",
      "id": "CAPEC-477"
    },
    {
      "Description": "<b>CAPEC-478: Modification of Windows Service Configuration</b><br>An adversary exploits a weakness in access control to modify the execution parameters of a Windows service. The goal of this attack is to execute a malicious binary in place of an existing service.",
      "color": "#94ebff",
      "size": 10,
      "label": "Modification of Windows Service Configuration",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/478.html",
      "id": "CAPEC-478"
    },
    {
      "Description": "<b>CAPEC-479: Malicious Root Certificate</b><br>An adversary exploits a weakness in authorization and installs a new root certificate on a compromised system. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Root Certificate",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/479.html",
      "id": "CAPEC-479"
    },
    {
      "Description": "<b>CAPEC-48: Passing Local Filenames to Functions That Expect a URL</b><br>This attack relies on client side code to access local files and resources instead of URLs. When the client browser is expecting a URL string, but instead receives a request for a local file, that execution is likely to occur in the browser process space with the browser's authority to local files. The attacker can send the results of this request to the local files out to a site that they control. This attack may be used to steal sensitive authentication data (either local or remote), or to gain system profile information to launch further attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Passing Local Filenames to Functions That Expect a URL",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/48.html",
      "id": "CAPEC-48"
    },
    {
      "Description": "<b>CAPEC-481: Contradictory Destinations in Traffic Routing Schemes</b><br>Adversaries can provide contradictory destinations when sending messages. Traffic is routed in networks using the domain names in various headers available at different levels of the OSI model. In a Content Delivery Network (CDN) multiple domains might be available, and if there are contradictory domain names provided it is possible to route traffic to an inappropriate destination. The technique, called Domain Fronting, involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. An alternative technique, called Domainless Fronting, is similar, but the SNI field is left blank.",
      "color": "#75aaff",
      "size": 18,
      "label": "Contradictory Destinations in Traffic Routing Schemes",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/481.html",
      "id": "CAPEC-481"
    },
    {
      "Description": "<b>CAPEC-482: TCP Flood</b><br>An adversary may execute a flooding attack using the TCP protocol with the intent to deny legitimate users access to a service. These attacks exploit the weakness within the TCP protocol where there is some state information for the connection the server needs to maintain. This often involves the use of TCP SYN messages.",
      "color": "#75aaff",
      "size": 18,
      "label": "TCP Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/482.html",
      "id": "CAPEC-482"
    },
    {
      "Description": "<b>CAPEC-485: Signature Spoofing by Key Recreation</b><br>An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signature Spoofing by Key Recreation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/485.html",
      "id": "CAPEC-485"
    },
    {
      "Description": "<b>CAPEC-486: UDP Flood</b><br>An adversary may execute a flooding attack using the UDP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. Additionally, firewalls often open a port for each UDP connection destined for a service with an open UDP port, meaning the firewalls in essence save the connection state thus the high packet nature of a UDP flood can also overwhelm resources allocated to the firewall. UDP attacks can also target services like DNS or VoIP which utilize these protocols. Additionally, due to the session-less nature of the UDP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "UDP Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/486.html",
      "id": "CAPEC-486"
    },
    {
      "Description": "<b>CAPEC-487: ICMP Flood</b><br>An adversary may execute a flooding attack using the ICMP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. A typical attack involves a victim server receiving ICMP packets at a high rate from a wide range of source addresses. Additionally, due to the session-less nature of the ICMP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "ICMP Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/487.html",
      "id": "CAPEC-487"
    },
    {
      "Description": "<b>CAPEC-488: HTTP Flood</b><br>An adversary may execute a flooding attack using the HTTP protocol with the intent to deny legitimate users access to a service by consuming resources at the application layer such as web services and their infrastructure. These attacks use legitimate session-based HTTP GET requests designed to consume large amounts of a server's resources. Since these are legitimate sessions this attack is very difficult to detect.",
      "color": "#75aaff",
      "size": 18,
      "label": "HTTP Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/488.html",
      "id": "CAPEC-488"
    },
    {
      "Description": "<b>CAPEC-489: SSL Flood</b><br>An adversary may execute a flooding attack using the SSL protocol with the intent to deny legitimate users access to a service by consuming all the available resources on the server side. These attacks take advantage of the asymmetric relationship between the processing power used by the client and the processing power used by the server to create a secure connection. In this manner the attacker can make a large number of HTTPS requests on a low provisioned machine to tie up a disproportionately large number of resources on the server. The clients then continue to keep renegotiating the SSL connection. When multiplied by a large number of attacking machines, this attack can result in a crash or loss of service to legitimate users.",
      "color": "#75aaff",
      "size": 18,
      "label": "SSL Flood",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/489.html",
      "id": "CAPEC-489"
    },
    {
      "Description": "<b>CAPEC-490: Amplification</b><br>An adversary may execute an amplification where the size of a response is far greater than that of the request that generates it. The goal of this attack is to use a relatively few resources to create a large amount of traffic against a target server. To execute this attack, an adversary send a request to a 3rd party service, spoofing the source address to be that of the target server. The larger response that is generated by the 3rd party service is then sent to the target server. By sending a large number of initial requests, the adversary can generate a tremendous amount of traffic directed at the target. The greater the discrepancy in size between the initial request and the final payload delivered to the target increased the effectiveness of this attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Amplification",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/490.html",
      "id": "CAPEC-490"
    },
    {
      "Description": "<b>CAPEC-491: Quadratic Data Expansion</b><br>An adversary exploits macro-like substitution to cause a denial of service situation due to excessive memory being allocated to fully expand the data. The result of this denial of service could cause the application to freeze or crash. This involves defining a very large entity and using it multiple times in a single entity substitution. CAPEC-197 is a similar attack pattern, but it is easier to discover and defend against. This attack pattern does not perform multi-level substitution and therefore does not obviously appear to consume extensive resources.",
      "color": "#94ebff",
      "size": 10,
      "label": "Quadratic Data Expansion",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/491.html",
      "id": "CAPEC-491"
    },
    {
      "Description": "<b>CAPEC-492: Regular Expression Exponential Blowup</b><br>An adversary may execute an attack on a program that uses a poor Regular Expression(Regex) implementation by choosing input that results in an extreme situation for the Regex. A typical extreme situation operates at exponential time compared to the input size. This is due to most implementations using a Nondeterministic Finite Automaton(NFA) state machine to be built by the Regex algorithm since NFA allows backtracking and thus more complex regular expressions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Regular Expression Exponential Blowup",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/492.html",
      "id": "CAPEC-492"
    },
    {
      "Description": "<b>CAPEC-493: SOAP Array Blowup</b><br>An adversary may execute an attack on a web service that uses SOAP messages in communication. By sending a very large SOAP array declaration to the web service, the attacker forces the web service to allocate space for the array elements before they are parsed by the XML parser. The attacker message is typically small in size containing a large array declaration of say 1,000,000 elements and a couple of array elements. This attack targets exhaustion of the memory resources of the web service.",
      "color": "#75aaff",
      "size": 18,
      "label": "SOAP Array Blowup",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/493.html",
      "id": "CAPEC-493"
    },
    {
      "Description": "<b>CAPEC-494: TCP Fragmentation</b><br>An adversary may execute a TCP Fragmentation attack against a target with the intention of avoiding filtering rules of network controls, by attempting to fragment the TCP packet such that the headers flag field is pushed into the second fragment which typically is not filtered.",
      "color": "#75aaff",
      "size": 18,
      "label": "TCP Fragmentation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/494.html",
      "id": "CAPEC-494"
    },
    {
      "Description": "<b>CAPEC-495: UDP Fragmentation</b><br>An attacker may execute a UDP Fragmentation attack against a target server in an attempt to consume resources such as bandwidth and CPU. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. Typically the attacker will use large UDP packets over 1500 bytes of data which forces fragmentation as ethernet MTU is 1500 bytes. This attack is a variation on a typical UDP flood but it enables more network bandwidth to be consumed with fewer packets. Additionally it has the potential to consume server CPU resources and fill memory buffers associated with the processing and reassembling of fragmented packets.",
      "color": "#75aaff",
      "size": 18,
      "label": "UDP Fragmentation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/495.html",
      "id": "CAPEC-495"
    },
    {
      "Description": "<b>CAPEC-496: ICMP Fragmentation</b><br>An attacker may execute a ICMP Fragmentation attack against a target with the intention of consuming resources or causing a crash. The attacker crafts a large number of identical fragmented IP packets containing a portion of a fragmented ICMP message. The attacker these sends these messages to a target host which causes the host to become non-responsive. Another vector may be sending a fragmented ICMP message to a target host with incorrect sizes in the header which causes the host to hang.",
      "color": "#75aaff",
      "size": 18,
      "label": "ICMP Fragmentation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/496.html",
      "id": "CAPEC-496"
    },
    {
      "Description": "<b>CAPEC-498: Probe iOS Screenshots</b><br>An adversary examines screenshot images created by iOS in an attempt to obtain sensitive information. This attack targets temporary screenshots created by the underlying OS while the application remains open in the background.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe iOS Screenshots",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/498.html",
      "id": "CAPEC-498"
    },
    {
      "Description": "<b>CAPEC-545: Pull Data from System Resources</b><br>An adversary who is authorized or has the ability to search known system resources, does so with the intention of gathering useful information. System resources include files, memory, and other aspects of the target system. In this pattern of attack, the adversary does not necessarily know what they are going to find when they start pulling data. This is different than CAPEC-150 where the adversary knows what they are looking for due to the common location.",
      "color": "#75aaff",
      "size": 18,
      "label": "Pull Data from System Resources",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/545.html",
      "id": "CAPEC-545"
    },
    {
      "Description": "<b>CAPEC-499: Android Intent Intercept</b><br>An adversary, through a previously installed malicious application, intercepts messages from a trusted Android-based application in an attempt to achieve a variety of different objectives including denial of service, information disclosure, and data injection. An implicit intent sent from a trusted application can be received by any application that has declared an appropriate intent filter. If the intent is not protected by a permission that the malicious application lacks, then the attacker can gain access to the data contained within the intent. Further, the intent can be either blocked from reaching the intended destination, or modified and potentially forwarded along.",
      "color": "#75aaff",
      "size": 18,
      "label": "Android Intent Intercept",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/499.html",
      "id": "CAPEC-499"
    },
    {
      "Description": "<b>CAPEC-5: Blue Boxing</b><br>This type of attack against older telephone switches and trunks has been around for decades. A tone is sent by an adversary to impersonate a supervisor signal which has the effect of rerouting or usurping command of the line. While the US infrastructure proper may not contain widespread vulnerabilities to this type of attack, many companies are connected globally through call centers and business process outsourcing. These international systems may be operated in countries which have not upgraded Telco infrastructure and so are vulnerable to Blue boxing. Blue boxing is a result of failure on the part of the system to enforce strong authorization for administrative functions. While the infrastructure is different than standard current applications like web applications, there are historical lessons to be learned to upgrade the access control for administrative functions. \n \n               This attack pattern is included in CAPEC for historical purposes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Blue Boxing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/5.html",
      "id": "CAPEC-5"
    },
    {
      "Description": "<b>CAPEC-50: Password Recovery Exploitation</b><br>An attacker may take advantage of the application feature to help users recover their forgotten passwords in order to gain access into the system with the same privileges as the original user. Generally password recovery schemes tend to be weak and insecure.",
      "color": "#75aaff",
      "size": 18,
      "label": "Password Recovery Exploitation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/50.html",
      "id": "CAPEC-50"
    },
    {
      "Description": "<b>CAPEC-500: WebView Injection</b><br>An adversary, through a previously installed malicious application, injects code into the context of a web page displayed by a WebView component. Through the injected code, an adversary is able to manipulate the DOM tree and cookies of the page, expose sensitive information, and can launch attacks against the web application from within the web page.",
      "color": "#94ebff",
      "size": 10,
      "label": "WebView Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/500.html",
      "id": "CAPEC-500"
    },
    {
      "Description": "<b>CAPEC-501: Android Activity Hijack</b><br>An adversary intercepts an implicit intent sent to launch a Android-based trusted activity and instead launches a counterfeit activity in its place. The malicious activity is then used to mimic the trusted activity's user interface and prompt the target to enter sensitive data as if they were interacting with the trusted activity.",
      "color": "#94ebff",
      "size": 10,
      "label": "Android Activity Hijack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/501.html",
      "id": "CAPEC-501"
    },
    {
      "Description": "<b>CAPEC-502: Intent Spoof</b><br>An adversary, through a previously installed malicious application, issues an intent directed toward a specific trusted application's component in an attempt to achieve a variety of different objectives including modification of data, information disclosure, and data injection. Components that have been unintentionally exported and made public are subject to this type of an attack. If the component trusts the intent's action without verififcation, then the target application performs the functionality at the adversary's request, helping the adversary achieve the desired negative technical impact.",
      "color": "#75aaff",
      "size": 18,
      "label": "Intent Spoof",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/502.html",
      "id": "CAPEC-502"
    },
    {
      "Description": "<b>CAPEC-503: WebView Exposure</b><br>An adversary, through a malicious web page, accesses application specific functionality by leveraging interfaces registered through WebView's addJavascriptInterface API. Once an interface is registered to WebView through addJavascriptInterface, it becomes global and all pages loaded in the WebView can call this interface.",
      "color": "#75aaff",
      "size": 18,
      "label": "WebView Exposure",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/503.html",
      "id": "CAPEC-503"
    },
    {
      "Description": "<b>CAPEC-504: Task Impersonation</b><br>An adversary, through a previously installed malicious application, impersonates an expected or routine task in an attempt to steal sensitive information or leverage a user's privileges.",
      "color": "#75aaff",
      "size": 18,
      "label": "Task Impersonation",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/504.html",
      "id": "CAPEC-504"
    },
    {
      "Description": "<b>CAPEC-505: Scheme Squatting</b><br>An adversary, through a previously installed malicious application, registers for a URL scheme intended for a target application that has not been installed. Thereafter, messages intended for the target application are handled by the malicious application. Upon receiving a message, the malicious application displays a screen that mimics the target application, thereby convincing the user to enter sensitive information. This type of attack is most often used to obtain sensitive information (e.g., credentials) from the user as they think that they are interacting with the intended target application.",
      "color": "#94ebff",
      "size": 10,
      "label": "Scheme Squatting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/505.html",
      "id": "CAPEC-505"
    },
    {
      "Description": "<b>CAPEC-616: Establish Rogue Location</b><br>An adversary provides a malicious version of a resource at a location that is similar to the expected location of a legitimate resource. After establishing the rogue location, the adversary waits for a victim to visit the location and access the malicious resource.",
      "color": "#75aaff",
      "size": 18,
      "label": "Establish Rogue Location",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/616.html",
      "id": "CAPEC-616"
    },
    {
      "Description": "<b>CAPEC-506: Tapjacking</b><br>An adversary, through a previously installed malicious application, displays an interface that misleads the user and convinces them to tap on an attacker desired location on the screen. This is often accomplished by overlaying one screen on top of another while giving the appearance of a single interface. There are two main techniques used to accomplish this. The first is to leverage transparent properties that allow taps on the screen to pass through the visible application to an application running in the background. The second is to strategically place a small object (e.g., a button or text field) on top of the visible screen and make it appear to be a part of the underlying application. In both cases, the user is convinced to tap on the screen but does not realize the application that they are interacting with.",
      "color": "#75aaff",
      "size": 18,
      "label": "Tapjacking",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/506.html",
      "id": "CAPEC-506"
    },
    {
      "Description": "<b>CAPEC-507: Physical Theft</b><br>An adversary gains physical access to a system or device through theft of the item. Possession of a system or device enables a number of unique attacks to be executed and often provides the adversary with an extended timeframe for which to perform an attack. Most protections put in place to secure sensitive information can be defeated when an adversary has physical access and enough time.",
      "color": "#2176ff",
      "size": 30,
      "label": "Physical Theft",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/507.html",
      "id": "CAPEC-507"
    },
    {
      "Description": "<b>CAPEC-508: Shoulder Surfing</b><br>In a shoulder surfing attack, an adversary observes an unaware individual's keystrokes, screen content, or conversations with the goal of obtaining sensitive information. One motive for this attack is to obtain sensitive information about the target for financial, personal, political, or other gains. From an insider threat perspective, an additional motive could be to obtain system/application credentials or cryptographic keys. Shoulder surfing attacks are accomplished by observing the content \"over the victim's shoulder\", as implied by the name of this attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Shoulder Surfing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/508.html",
      "id": "CAPEC-508"
    },
    {
      "Description": "<b>CAPEC-651: Eavesdropping</b><br>An adversary intercepts a form of communication (e.g. text, audio, video) by way of software (e.g., microphone and audio recording application), hardware (e.g., recording equipment), or physical means (e.g., physical proximity). The goal of eavesdropping is typically to gain unauthorized access to sensitive information about the target for financial, personal, political, or other gains. Eavesdropping is different from a sniffing attack as it does not take place on a network-based communication channel (e.g., IP traffic). Instead, it entails listening in on the raw audio source of a conversation between two or more parties.",
      "color": "#75aaff",
      "size": 18,
      "label": "Eavesdropping",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/651.html",
      "id": "CAPEC-651"
    },
    {
      "Description": "<b>CAPEC-509: Kerberoasting</b><br>Through the exploitation of how service accounts leverage Kerberos authentication with Service Principal Names (SPNs), the adversary obtains and subsequently cracks the hashed credentials of a service account target to exploit its privileges. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. As an authenticated user, the adversary may request Active Directory and obtain a service ticket with portions encrypted via RC4 with the private key of the authenticated account. By extracting the local ticket and saving it disk, the adversary can brute force the hashed value to reveal the target account credentials.",
      "color": "#94ebff",
      "size": 10,
      "label": "Kerberoasting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/509.html",
      "id": "CAPEC-509"
    },
    {
      "Description": "<b>CAPEC-652: Use of Known Kerberos Credentials</b><br>An adversary obtains (i.e. steals or purchases) legitimate Kerberos credentials (e.g. Kerberos service account userID/password or Kerberos Tickets) with the goal of achieving authenticated access to additional systems, applications, or services within the domain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Use of Known Kerberos Credentials",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/652.html",
      "id": "CAPEC-652"
    },
    {
      "Description": "<b>CAPEC-51: Poison Web Service Registry</b><br>SOA and Web Services often use a registry to perform look up, get schema information, and metadata about services. A poisoned registry can redirect (think phishing for servers) the service requester to a malicious service provider, provide incorrect information in schema or metadata, and delete information about service provider interfaces.",
      "color": "#94ebff",
      "size": 10,
      "label": "Poison Web Service Registry",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/51.html",
      "id": "CAPEC-51"
    },
    {
      "Description": "<b>CAPEC-510: SaaS User Request Forgery</b><br>An adversary, through a previously installed malicious application, performs malicious actions against a third-party Software as a Service (SaaS) application (also known as a cloud based application) by leveraging the persistent and implicit trust placed on a trusted user's session. This attack is executed after a trusted user is authenticated into a cloud service, \"piggy-backing\" on the authenticated session, and exploiting the fact that the cloud service believes it is only interacting with the trusted user. If successful, the actions embedded in the malicious application will be processed and accepted by the targeted SaaS application and executed at the trusted user's privilege level.",
      "color": "#75aaff",
      "size": 18,
      "label": "SaaS User Request Forgery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/510.html",
      "id": "CAPEC-510"
    },
    {
      "Description": "<b>CAPEC-511: Infiltration of Software Development Environment</b><br>An attacker uses common delivery mechanisms such as email attachments or removable media to infiltrate the IDE (Integrated Development Environment) of a victim manufacturer with the intent of implanting malware allowing for attack control of the victim IDE environment. The attack then uses this access to exfiltrate sensitive data or information, manipulate said data or information, and conceal these actions. This will allow and aid the attack to meet the goal of future compromise of a recipient of the victim's manufactured product further down in the supply chain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Infiltration of Software Development Environment",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/511.html",
      "id": "CAPEC-511"
    },
    {
      "Description": "<b>CAPEC-516: Hardware Component Substitution During Baselining</b><br>An adversary with access to system components during allocated baseline development can substitute a maliciously altered hardware component for a baseline component during the product development and research phases. This can lead to adjustments and calibrations being made in the product so that when the final product, now containing the modified component, is deployed it will not perform as designed and be advantageous to the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Hardware Component Substitution During Baselining",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/516.html",
      "id": "CAPEC-516"
    },
    {
      "Description": "<b>CAPEC-517: Documentation Alteration to Circumvent Dial-down</b><br>An attacker with access to a manufacturer's documentation, which include descriptions of advanced technology and/or specific components' criticality, alters the documents to circumvent dial-down functionality requirements. This alteration would change the interpretation of implementation and manufacturing techniques, allowing for advanced technologies to remain in place even though these technologies might be restricted to certain customers, such as nations on the terrorist watch list, giving the attacker on the receiving end of a shipped product access to an advanced technology that might otherwise be restricted.",
      "color": "#94ebff",
      "size": 10,
      "label": "Documentation Alteration to Circumvent Dial-down",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/517.html",
      "id": "CAPEC-517"
    },
    {
      "Description": "<b>CAPEC-518: Documentation Alteration to Produce Under-performing Systems</b><br>An attacker with access to a manufacturer's documentation alters the descriptions of system capabilities with the intent of causing errors in derived system requirements, impacting the overall effectiveness and capability of the system, allowing an attacker to take advantage of the introduced system capability flaw once the system is deployed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Documentation Alteration to Produce Under-performing Systems",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/518.html",
      "id": "CAPEC-518"
    },
    {
      "Description": "<b>CAPEC-519: Documentation Alteration to Cause Errors in System Design</b><br>An attacker with access to a manufacturer's documentation containing requirements allocation and software design processes maliciously alters the documentation in order to cause errors in system design. This allows the attacker to take advantage of a weakness in a deployed system of the manufacturer for malicious purposes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Documentation Alteration to Cause Errors in System Design",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/519.html",
      "id": "CAPEC-519"
    },
    {
      "Description": "<b>CAPEC-52: Embedding NULL Bytes</b><br>An adversary embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s).",
      "color": "#94ebff",
      "size": 10,
      "label": "Embedding NULL Bytes",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/52.html",
      "id": "CAPEC-52"
    },
    {
      "Description": "<b>CAPEC-520: Counterfeit Hardware Component Inserted During Product Assembly</b><br>An adversary with either direct access to the product assembly process or to the supply of subcomponents used in the product assembly process introduces counterfeit hardware components into product assembly. The assembly containing the counterfeit components results in a system specifically designed for malicious purposes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Counterfeit Hardware Component Inserted During Product Assembly",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/520.html",
      "id": "CAPEC-520"
    },
    {
      "Description": "<b>CAPEC-521: Hardware Design Specifications Are Altered</b><br>An attacker with access to a manufacturer's hardware manufacturing process documentation alters the design specifications, which introduces flaws advantageous to the attacker once the system is deployed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Hardware Design Specifications Are Altered",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/521.html",
      "id": "CAPEC-521"
    },
    {
      "Description": "<b>CAPEC-522: Malicious Hardware Component Replacement</b><br>An adversary replaces legitimate hardware in the system with faulty counterfeit or tampered hardware in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malicious Hardware Component Replacement",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/522.html",
      "id": "CAPEC-522"
    },
    {
      "Description": "<b>CAPEC-523: Malicious Software Implanted</b><br>An attacker implants malicious software into the system in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malicious Software Implanted",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/523.html",
      "id": "CAPEC-523"
    },
    {
      "Description": "<b>CAPEC-524: Rogue Integration Procedures</b><br>An attacker alters or establishes rogue processes in an integration facility in order to insert maliciously altered components into the system. The attacker would then supply the malicious components. This would allow for malicious disruption or additional compromise when the system is deployed.",
      "color": "#75aaff",
      "size": 18,
      "label": "Rogue Integration Procedures",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/524.html",
      "id": "CAPEC-524"
    },
    {
      "Description": "<b>CAPEC-529: Malware-Directed Internal Reconnaissance</b><br>Adversary uses malware or a similarly controlled application installed inside an organizational perimeter to gather information about the composition, configuration, and security mechanisms of a targeted application, system or network.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malware-Directed Internal Reconnaissance",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/529.html",
      "id": "CAPEC-529"
    },
    {
      "Description": "<b>CAPEC-53: Postfix, Null Terminate, and Backslash</b><br>If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an adversary to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used.",
      "color": "#94ebff",
      "size": 10,
      "label": "Postfix, Null Terminate, and Backslash",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/53.html",
      "id": "CAPEC-53"
    },
    {
      "Description": "<b>CAPEC-530: Provide Counterfeit Component</b><br>An attacker provides a counterfeit component during the procurement process of a lower-tier component supplier to a sub-system developer or integrator, which is then built into the system being upgraded or repaired by the victim, allowing the attacker to cause disruption or additional compromise.",
      "color": "#94ebff",
      "size": 10,
      "label": "Provide Counterfeit Component",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/530.html",
      "id": "CAPEC-530"
    },
    {
      "Description": "<b>CAPEC-531: Hardware Component Substitution</b><br>An attacker substitutes out a tested and approved hardware component for a maliciously-altered hardware component. This type of attack is carried out directly on the system, enabling the attacker to then cause disruption or additional compromise.",
      "color": "#94ebff",
      "size": 10,
      "label": "Hardware Component Substitution",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/531.html",
      "id": "CAPEC-531"
    },
    {
      "Description": "<b>CAPEC-534: Malicious Hardware Update</b><br>An adversary introduces malicious hardware during an update or replacement procedure, allowing for additional compromise or site disruption at the victim location. After deployment, it is not uncommon for upgrades and replacements to occur involving hardware and various replaceable parts. These upgrades and replacements are intended to correct defects, provide additional features, and to replace broken or worn-out parts. However, by forcing or tricking the replacement of a good component with a defective or corrupted component, an adversary can leverage known defects to obtain a desired malicious impact.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malicious Hardware Update",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/534.html",
      "id": "CAPEC-534"
    },
    {
      "Description": "<b>CAPEC-532: Altered Installed BIOS</b><br>An attacker with access to download and update system software sends a maliciously altered BIOS to the victim or victim supplier/integrator, which when installed allows for future exploitation.",
      "color": "#94ebff",
      "size": 10,
      "label": "Altered Installed BIOS",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/532.html",
      "id": "CAPEC-532"
    },
    {
      "Description": "<b>CAPEC-533: Malicious Manual Software Update</b><br>An attacker introduces malicious code to the victim's system by altering the payload of a software update, allowing for additional compromise or site disruption at the victim location. These manual, or user-assisted attacks, vary from requiring the user to download and run an executable, to as streamlined as tricking the user to click a URL. Attacks which aim at penetrating a specific network infrastructure often rely upon secondary attack methods to achieve the desired impact. Spamming, for example, is a common method employed as an secondary attack vector. Thus the attacker has in their arsenal a choice of initial attack vectors ranging from traditional SMTP/POP/IMAP spamming and its varieties, to web-application mechanisms which commonly implement both chat and rich HTML messaging within the user interface.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Manual Software Update",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/533.html",
      "id": "CAPEC-533"
    },
    {
      "Description": "<b>CAPEC-535: Malicious Gray Market Hardware</b><br>An attacker maliciously alters hardware components that will be sold on the gray market, allowing for victim disruption and compromise when the victim needs replacement hardware components for systems where the parts are no longer in regular supply from original suppliers, or where the hardware components from the attacker seems to be a great benefit from a cost perspective.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Gray Market Hardware",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/535.html",
      "id": "CAPEC-535"
    },
    {
      "Description": "<b>CAPEC-536: Data Injected During Configuration</b><br>An attacker with access to data files and processes on a victim's system injects malicious data into critical operational data during configuration or recalibration, causing the victim's system to perform in a suboptimal manner that benefits the adversary.",
      "color": "#75aaff",
      "size": 18,
      "label": "Data Injected During Configuration",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/536.html",
      "id": "CAPEC-536"
    },
    {
      "Description": "<b>CAPEC-537: Infiltration of Hardware Development Environment</b><br>An adversary, leveraging the ability to manipulate components of primary support systems and tools within the development and production environments, inserts malicious software within the hardware and/or firmware development environment. The infiltration purpose is to alter developed hardware components in a system destined for deployment at the victim's organization, for the purpose of disruption or further compromise.",
      "color": "#94ebff",
      "size": 10,
      "label": "Infiltration of Hardware Development Environment",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/537.html",
      "id": "CAPEC-537"
    },
    {
      "Description": "<b>CAPEC-538: Open-Source Library Manipulation</b><br>Adversaries implant malicious code in open source software (OSS) libraries to have it widely distributed, as OSS is commonly downloaded by developers and other users to incorporate into software development projects. The adversary can have a particular system in mind to target, or the implantation can be the first stage of follow-on attacks on many systems.",
      "color": "#94ebff",
      "size": 10,
      "label": "Open-Source Library Manipulation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/538.html",
      "id": "CAPEC-538"
    },
    {
      "Description": "<b>CAPEC-539: ASIC With Malicious Functionality</b><br>An attacker with access to the development environment process of an application-specific integrated circuit (ASIC) for a victim system being developed or maintained after initial deployment can insert malicious functionality into the system for the purpose of disruption or further compromise.",
      "color": "#94ebff",
      "size": 10,
      "label": "ASIC With Malicious Functionality",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/539.html",
      "id": "CAPEC-539"
    },
    {
      "Description": "<b>CAPEC-540: Overread Buffers</b><br>An adversary attacks a target by providing input that causes an application to read beyond the boundary of a defined buffer. This typically occurs when a value influencing where to start or stop reading is set to reflect positions outside of the valid memory location of the buffer. This type of attack may result in exposure of sensitive information, a system crash, or arbitrary code execution.",
      "color": "#75aaff",
      "size": 18,
      "label": "Overread Buffers",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/540.html",
      "id": "CAPEC-540"
    },
    {
      "Description": "<b>CAPEC-542: Targeted Malware</b><br>An adversary develops targeted malware that takes advantage of a known vulnerability in an organizational information technology environment. The malware crafted for these attacks is based specifically on information gathered about the technology environment. Successfully executing the malware enables an adversary to achieve a wide variety of negative technical impacts.",
      "color": "#75aaff",
      "size": 18,
      "label": "Targeted Malware",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/542.html",
      "id": "CAPEC-542"
    },
    {
      "Description": "<b>CAPEC-549: Local Execution of Code</b><br>An adversary installs and executes malicious code on the target system in an effort to achieve a negative technical impact. Examples include rootkits, ransomware, spyware, adware, and others.",
      "color": "#2176ff",
      "size": 30,
      "label": "Local Execution of Code",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/549.html",
      "id": "CAPEC-549"
    },
    {
      "Description": "<b>CAPEC-543: Counterfeit Websites</b><br>Adversary creates duplicates of legitimate websites. When users visit a counterfeit site, the site can gather information or upload malware.",
      "color": "#94ebff",
      "size": 10,
      "label": "Counterfeit Websites",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/543.html",
      "id": "CAPEC-543"
    },
    {
      "Description": "<b>CAPEC-544: Counterfeit Organizations</b><br>An adversary creates a false front organizations with the appearance of a legitimate supplier in the critical life cycle path that then injects corrupted/malicious information system components into the organizational supply chain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Counterfeit Organizations",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/544.html",
      "id": "CAPEC-544"
    },
    {
      "Description": "<b>CAPEC-546: Incomplete Data Deletion in a Multi-Tenant Environment</b><br>An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there.",
      "color": "#94ebff",
      "size": 10,
      "label": "Incomplete Data Deletion in a Multi-Tenant Environment",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/546.html",
      "id": "CAPEC-546"
    },
    {
      "Description": "<b>CAPEC-547: Physical Destruction of Device or Component</b><br>An adversary conducts a physical attack a device or component, destroying it such that it no longer functions as intended.",
      "color": "#75aaff",
      "size": 18,
      "label": "Physical Destruction of Device or Component",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/547.html",
      "id": "CAPEC-547"
    },
    {
      "Description": "<b>CAPEC-607: Obstruction</b><br>An attacker obstructs the interactions between system components. By interrupting or disabling these interactions, an adversary can often force the system into a degraded state or cause the system to stop working as intended. This can cause the system components to be unavailable until the obstruction mitigated.",
      "color": "#2176ff",
      "size": 30,
      "label": "Obstruction",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/607.html",
      "id": "CAPEC-607"
    },
    {
      "Description": "<b>CAPEC-548: Contaminate Resource</b><br>An adversary contaminates organizational information systems (including devices and networks) by causing them to handle information of a classification/sensitivity for which they have not been authorized. When this happens, the contaminated information system, device, or network must be brought offline to investigate and mitigate the data spill, which denies availability of the system until the investigation is complete.",
      "color": "#2176ff",
      "size": 30,
      "label": "Contaminate Resource",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/548.html",
      "id": "CAPEC-548"
    },
    {
      "Description": "<b>CAPEC-55: Rainbow Table Password Cracking</b><br>An attacker gets access to the database table where hashes of passwords are stored. They then use a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Rainbow Table Password Cracking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/55.html",
      "id": "CAPEC-55"
    },
    {
      "Description": "<b>CAPEC-550: Install New Service</b><br>When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges.",
      "color": "#94ebff",
      "size": 10,
      "label": "Install New Service",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/550.html",
      "id": "CAPEC-550"
    },
    {
      "Description": "<b>CAPEC-551: Modify Existing Service</b><br>When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used.",
      "color": "#94ebff",
      "size": 10,
      "label": "Modify Existing Service",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/551.html",
      "id": "CAPEC-551"
    },
    {
      "Description": "<b>CAPEC-552: Install Rootkit </b><br>An adversary exploits a weakness in authentication to install malware that alters the functionality and information provide by targeted operating system API calls. Often referred to as rootkits, it is often used to hide the presence of programs, files, network connections, services, drivers, and other system components.",
      "color": "#94ebff",
      "size": 10,
      "label": "Install Rootkit ",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/552.html",
      "id": "CAPEC-552"
    },
    {
      "Description": "<b>CAPEC-555: Remote Services with Stolen Credentials</b><br>This pattern of attack involves an adversary that uses stolen credentials to leverage remote services such as RDP, telnet, SSH, and VNC to log into a system. Once access is gained, any number of malicious activities could be performed.",
      "color": "#75aaff",
      "size": 18,
      "label": "Remote Services with Stolen Credentials",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/555.html",
      "id": "CAPEC-555"
    },
    {
      "Description": "<b>CAPEC-560: Use of Known Domain Credentials</b><br>An adversary guesses or obtains (i.e. steals or purchases) legitimate credentials (e.g. userID/password) to achieve authentication and to perform authorized actions under the guise of an authenticated user or service.",
      "color": "#2176ff",
      "size": 30,
      "label": "Use of Known Domain Credentials",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/560.html",
      "id": "CAPEC-560"
    },
    {
      "Description": "<b>CAPEC-556: Replace File Extension Handlers</b><br>When a file is opened, its file handler is checked to determine which program opens the file. File handlers are configuration properties of many operating systems. Applications can modify the file handler for a given file extension to call an arbitrary program when a file with the given extension is opened.",
      "color": "#94ebff",
      "size": 10,
      "label": "Replace File Extension Handlers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/556.html",
      "id": "CAPEC-556"
    },
    {
      "Description": "<b>CAPEC-558: Replace Trusted Executable</b><br>An adversary exploits weaknesses in privilege management or access control to replace a trusted executable with a malicious version and enable the execution of malware when that trusted executable is called.",
      "color": "#94ebff",
      "size": 10,
      "label": "Replace Trusted Executable",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/558.html",
      "id": "CAPEC-558"
    },
    {
      "Description": "<b>CAPEC-559: Orbital Jamming</b><br>In this attack pattern, the adversary sends disruptive signals at a target satellite using a rogue uplink station to disrupt the intended transmission. Those within the satellite's footprint are prevented from reaching the satellite's targeted or neighboring channels. The satellite's footprint size depends upon its position in the sky; higher orbital satellites cover multiple continents.",
      "color": "#94ebff",
      "size": 10,
      "label": "Orbital Jamming",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/559.html",
      "id": "CAPEC-559"
    },
    {
      "Description": "<b>CAPEC-601: Jamming</b><br>An adversary uses radio noise or signals in an attempt to disrupt communications. By intentionally overwhelming system resources with illegitimate traffic, service is denied to the legitimate traffic of authorized users.",
      "color": "#75aaff",
      "size": 18,
      "label": "Jamming",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/601.html",
      "id": "CAPEC-601"
    },
    {
      "Description": "<b>CAPEC-561: Windows Admin Shares with Stolen Credentials</b><br>An adversary guesses or obtains (i.e. steals or purchases) legitimate Windows administrator credentials (e.g. userID/password) to access Windows Admin Shares on a local machine or within a Windows domain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Windows Admin Shares with Stolen Credentials",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/561.html",
      "id": "CAPEC-561"
    },
    {
      "Description": "<b>CAPEC-653: Use of Known Operating System Credentials</b><br>An adversary guesses or obtains (i.e. steals or purchases) legitimate operating system credentials (e.g. userID/password) to achieve authentication and to perform authorized actions on the system, under the guise of an authenticated user or service. This applies to any Operating System.",
      "color": "#75aaff",
      "size": 18,
      "label": "Use of Known Operating System Credentials",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/653.html",
      "id": "CAPEC-653"
    },
    {
      "Description": "<b>CAPEC-562: Modify Shared File</b><br>An adversary manipulates the files in a shared location by adding malicious programs, scripts, or exploit code to valid content. Once a user opens the shared content, the tainted content is executed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Modify Shared File",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/562.html",
      "id": "CAPEC-562"
    },
    {
      "Description": "<b>CAPEC-563: Add Malicious File to Shared Webroot</b><br>An adversaries may add malicious content to a website through the open file share and then browse to that content with a web browser to cause the server to execute the content. The malicious content will typically run under the context and permissions of the web server process, often resulting in local system or administrative privileges depending on how the web server is configured.",
      "color": "#94ebff",
      "size": 10,
      "label": "Add Malicious File to Shared Webroot",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/563.html",
      "id": "CAPEC-563"
    },
    {
      "Description": "<b>CAPEC-564: Run Software at Logon</b><br>Operating system allows logon scripts to be run whenever a specific user or users logon to a system. If adversaries can access these scripts, they may insert additional code into the logon script. This code can allow them to maintain persistence or move laterally within an enclave because it is executed every time the affected user or users logon to a computer. Modifying logon scripts can effectively bypass workstation and enclave firewalls. Depending on the access configuration of the logon scripts, either local credentials or a remote administrative account may be necessary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Run Software at Logon",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/564.html",
      "id": "CAPEC-564"
    },
    {
      "Description": "<b>CAPEC-565: Password Spraying</b><br>In a Password Spraying attack, an adversary tries a small list (e.g. 3-5) of common or expected passwords, often matching the target's complexity policy, against a known list of user accounts to gain valid credentials. The adversary tries a particular password for each user account, before moving onto the next password in the list. This approach assists the adversary in remaining undetected by avoiding rapid or frequent account lockouts. The adversary may then reattempt the process with additional passwords, once enough time has passed to prevent inducing a lockout.",
      "color": "#94ebff",
      "size": 10,
      "label": "Password Spraying",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/565.html",
      "id": "CAPEC-565"
    },
    {
      "Description": "<b>CAPEC-568: Capture Credentials via Keylogger</b><br>An adversary deploys a keylogger in an effort to obtain credentials directly from a system's user. After capturing all the keystrokes made by a user, the adversary can analyze the data and determine which string are likely to be passwords or other credential related information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Capture Credentials via Keylogger",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/568.html",
      "id": "CAPEC-568"
    },
    {
      "Description": "<b>CAPEC-569: Collect Data as Provided by Users</b><br>An attacker leverages a tool, device, or program to obtain specific information as provided by a user of the target system. This information is often needed by the attacker to launch a follow-on attack. This attack is different than Social Engineering as the adversary is not tricking or deceiving the user. Instead the adversary is putting a mechanism in place that captures the information that a user legitimately enters into a system. Deploying a keylogger, performing a UAC prompt, or wrapping the Windows default credential provider are all examples of such interactions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Collect Data as Provided by Users",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/569.html",
      "id": "CAPEC-569"
    },
    {
      "Description": "<b>CAPEC-57: Utilizing REST's Trust in the System Resource to Obtain Sensitive Data</b><br>This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
      "color": "#94ebff",
      "size": 10,
      "label": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/57.html",
      "id": "CAPEC-57"
    },
    {
      "Description": "<b>CAPEC-571: Block Logging to Central Repository</b><br>An adversary prevents host-generated logs being delivered to a central location in an attempt to hide indicators of compromise.",
      "color": "#75aaff",
      "size": 18,
      "label": "Block Logging to Central Repository",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/571.html",
      "id": "CAPEC-571"
    },
    {
      "Description": "<b>CAPEC-572: Artificially Inflate File Sizes</b><br>An adversary modifies file contents by adding data to files for several reasons. Many different attacks could \u201cfollow\u201d this pattern resulting in numerous outcomes. Adding data to a file could also result in a Denial of Service condition for devices with limited storage capacity.",
      "color": "#75aaff",
      "size": 18,
      "label": "Artificially Inflate File Sizes",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/572.html",
      "id": "CAPEC-572"
    },
    {
      "Description": "<b>CAPEC-573: Process Footprinting</b><br>An adversary exploits functionality meant to identify information about the currently running processes on the target system to an authorized user. By knowing what processes are running on the target system, the adversary can learn about the target environment as a means towards further malicious behavior.",
      "color": "#75aaff",
      "size": 18,
      "label": "Process Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/573.html",
      "id": "CAPEC-573"
    },
    {
      "Description": "<b>CAPEC-574: Services Footprinting</b><br>An adversary exploits functionality meant to identify information about the services on the target system to an authorized user. By knowing what services are registered on the target system, the adversary can learn about the target environment as a means towards further malicious behavior. Depending on the operating system, commands that can obtain services information include \"sc\" and \"tasklist/svc\" using Tasklist, and \"net start\" using Net.",
      "color": "#75aaff",
      "size": 18,
      "label": "Services Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/574.html",
      "id": "CAPEC-574"
    },
    {
      "Description": "<b>CAPEC-575: Account Footprinting</b><br>An adversary exploits functionality meant to identify information about the domain accounts and their permissions on the target system to an authorized user. By knowing what accounts are registered on the target system, the adversary can inform further and more targeted malicious behavior. Example Windows commands which can acquire this information are: \"net user\" and \"dsquery\".",
      "color": "#75aaff",
      "size": 18,
      "label": "Account Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/575.html",
      "id": "CAPEC-575"
    },
    {
      "Description": "<b>CAPEC-576: Group Permission Footprinting</b><br>An adversary exploits functionality meant to identify information about user groups and their permissions on the target system to an authorized user. By knowing what users/permissions are registered on the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command which can list local groups is \"net localgroup\".",
      "color": "#75aaff",
      "size": 18,
      "label": "Group Permission Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/576.html",
      "id": "CAPEC-576"
    },
    {
      "Description": "<b>CAPEC-577: Owner Footprinting</b><br>An adversary exploits functionality meant to identify information about the primary users on the target system to an authorized user. They may do this, for example, by reviewing logins or file modification times. By knowing what owners use the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command that may accomplish this is \"dir /A ntuser.dat\". Which will display the last modified time of a user's ntuser.dat file when run within the root folder of a user. This time is synonymous with the last time that user was logged in.",
      "color": "#75aaff",
      "size": 18,
      "label": "Owner Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/577.html",
      "id": "CAPEC-577"
    },
    {
      "Description": "<b>CAPEC-578: Disable Security Software</b><br>An adversary exploits a weakness in access control to disable security tools so that detection does not occur. This can take the form of killing processes, deleting registry keys so that tools do not start at run time, deleting log files, or other methods.",
      "color": "#75aaff",
      "size": 18,
      "label": "Disable Security Software",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/578.html",
      "id": "CAPEC-578"
    },
    {
      "Description": "<b>CAPEC-579: Replace Winlogon Helper DLL</b><br>Winlogon is a part of Windows that performs logon actions. In Windows systems prior to Windows Vista, a registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup.",
      "color": "#94ebff",
      "size": 10,
      "label": "Replace Winlogon Helper DLL",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/579.html",
      "id": "CAPEC-579"
    },
    {
      "Description": "<b>CAPEC-58: Restful Privilege Elevation</b><br>An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages.",
      "color": "#94ebff",
      "size": 10,
      "label": "Restful Privilege Elevation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/58.html",
      "id": "CAPEC-58"
    },
    {
      "Description": "<b>CAPEC-580: System Footprinting</b><br>An adversary engages in active probing and exploration activities to determine security information about a remote target system. Often times adversaries will rely on remote applications that can be probed for system configurations.",
      "color": "#75aaff",
      "size": 18,
      "label": "System Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/580.html",
      "id": "CAPEC-580"
    },
    {
      "Description": "<b>CAPEC-581: Security Software Footprinting</b><br>Adversaries may attempt to get a listing of security tools that are installed on the system and their configurations. This may include security related system features (such as a built-in firewall or anti-spyware) as well as third-party security software.",
      "color": "#94ebff",
      "size": 10,
      "label": "Security Software Footprinting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/581.html",
      "id": "CAPEC-581"
    },
    {
      "Description": "<b>CAPEC-582: Route Disabling</b><br>An adversary disables the network route between two targets. The goal is to completely sever the communications channel between two entities. This is often the result of a major error or the use of an \"Internet kill switch\" by those in control of critical infrastructure. This attack pattern differs from most other obstruction patterns by targeting the route itself, as opposed to the data passed over the route.",
      "color": "#75aaff",
      "size": 18,
      "label": "Route Disabling",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/582.html",
      "id": "CAPEC-582"
    },
    {
      "Description": "<b>CAPEC-583: Disabling Network Hardware</b><br>In this attack pattern, an adversary physically disables networking hardware by powering it down or disconnecting critical equipment. Disabling or shutting off critical system resources prevents them from performing their service as intended, which can have direct and indirect consequences on other systems. This attack pattern is considerably less technical than the selective blocking used in most obstruction attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Disabling Network Hardware",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/583.html",
      "id": "CAPEC-583"
    },
    {
      "Description": "<b>CAPEC-584: BGP Route Disabling</b><br>An adversary suppresses the Border Gateway Protocol (BGP) advertisement for a route so as to render the underlying network inaccessible. The BGP protocol helps traffic move throughout the Internet by selecting the most efficient route between Autonomous Systems (AS), or routing domains. BGP is the basis for interdomain routing infrastructure, providing connections between these ASs. By suppressing the intended AS routing advertisements and/or forcing less effective routes for traffic to ASs, the adversary can deny availability for the target network.",
      "color": "#94ebff",
      "size": 10,
      "label": "BGP Route Disabling",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/584.html",
      "id": "CAPEC-584"
    },
    {
      "Description": "<b>CAPEC-585: DNS Domain Seizure</b><br>In this attack pattern, an adversary influences a target's web-hosting company to disable a target domain. The goal is to prevent access to the targeted service provided by that domain. It usually occurs as the result of civil or criminal legal interventions.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Domain Seizure",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/585.html",
      "id": "CAPEC-585"
    },
    {
      "Description": "<b>CAPEC-586: Object Injection</b><br>An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
      "color": "#2176ff",
      "size": 30,
      "label": "Object Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/586.html",
      "id": "CAPEC-586"
    },
    {
      "Description": "<b>CAPEC-587: Cross Frame Scripting (XFS)</b><br>This attack pattern combines malicious Javascript and a legitimate webpage loaded into a concealed iframe. The malicious Javascript is then able to interact with a legitimate webpage in a manner that is unknown to the user. This attack usually leverages some element of social engineering in that an attacker must convinces a user to visit a web page that the attacker controls.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross Frame Scripting (XFS)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/587.html",
      "id": "CAPEC-587"
    },
    {
      "Description": "<b>CAPEC-63: Cross-Site Scripting (XSS)</b><br>An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.",
      "color": "#75aaff",
      "size": 18,
      "label": "Cross-Site Scripting (XSS)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/63.html",
      "id": "CAPEC-63"
    },
    {
      "Description": "<b>CAPEC-589: DNS Blocking</b><br>An adversary intercepts traffic and intentionally drops DNS requests based on content in the request. In this way, the adversary can deny the availability of specific services or content to the user even if the IP address is changed.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Blocking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/589.html",
      "id": "CAPEC-589"
    },
    {
      "Description": "<b>CAPEC-603: Blockage</b><br>An adversary blocks the delivery of an important system resource causing the system to fail or stop working.",
      "color": "#75aaff",
      "size": 18,
      "label": "Blockage",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/603.html",
      "id": "CAPEC-603"
    },
    {
      "Description": "<b>CAPEC-59: Session Credential Falsification through Prediction</b><br>This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking.",
      "color": "#94ebff",
      "size": 10,
      "label": "Session Credential Falsification through Prediction",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/59.html",
      "id": "CAPEC-59"
    },
    {
      "Description": "<b>CAPEC-590: IP Address Blocking</b><br>An adversary performing this type of attack drops packets destined for a target IP address. The aim is to prevent access to the service hosted at the target IP address.",
      "color": "#94ebff",
      "size": 10,
      "label": "IP Address Blocking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/590.html",
      "id": "CAPEC-590"
    },
    {
      "Description": "<b>CAPEC-594: Traffic Injection</b><br>An adversary injects traffic into the target's network connection. The adversary is therefore able to degrade or disrupt the connection, and potentially modify the content. This is not a flooding attack, as the adversary is not focusing on exhausting resources. Instead, the adversary is crafting a specific input to affect the system in a particular way.",
      "color": "#2176ff",
      "size": 30,
      "label": "Traffic Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/594.html",
      "id": "CAPEC-594"
    },
    {
      "Description": "<b>CAPEC-595: Connection Reset</b><br>In this attack pattern, an adversary injects a connection reset packet to one or both ends of a target's connection. The attacker is therefore able to have the target and/or the destination server sever the connection without having to directly filter the traffic between them.",
      "color": "#75aaff",
      "size": 18,
      "label": "Connection Reset",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/595.html",
      "id": "CAPEC-595"
    },
    {
      "Description": "<b>CAPEC-596: TCP RST Injection</b><br>An adversary injects one or more TCP RST packets to a target after the target has made a HTTP GET request. The goal of this attack is to have the target and/or destination web server terminate the TCP connection.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP RST Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/596.html",
      "id": "CAPEC-596"
    },
    {
      "Description": "<b>CAPEC-597: Absolute Path Traversal</b><br>An adversary with access to file system resources, either directly or via application logic, will use various file absolute paths and navigation mechanisms such as \"..\" to extend their range of access to inappropriate areas of the file system. The goal of the adversary is to access directories and files that are intended to be restricted from their access.",
      "color": "#94ebff",
      "size": 10,
      "label": "Absolute Path Traversal",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/597.html",
      "id": "CAPEC-597"
    },
    {
      "Description": "<b>CAPEC-598: DNS Spoofing</b><br>An adversary sends a malicious (\"NXDOMAIN\" (\"No such domain\") code, or DNS A record) response to a target's route request before a legitimate resolver can. This technique requires an On-path or In-path device that can monitor and respond to the target's DNS requests. This attack differs from BGP Tampering in that it directly responds to requests made by the target instead of polluting the routing the target's infrastructure uses.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Spoofing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/598.html",
      "id": "CAPEC-598"
    },
    {
      "Description": "<b>CAPEC-599: Terrestrial Jamming</b><br>In this attack pattern, the adversary transmits disruptive signals in the direction of the target's consumer-level satellite dish (as opposed to the satellite itself). The transmission disruption occurs in a more targeted range. Portable terrestrial jammers have a range of 3-5 kilometers in urban areas and 20 kilometers in rural areas. This technique requires a terrestrial jammer that is more powerful than the frequencies sent from the satellite.",
      "color": "#94ebff",
      "size": 10,
      "label": "Terrestrial Jamming",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/599.html",
      "id": "CAPEC-599"
    },
    {
      "Description": "<b>CAPEC-6: Argument Injection</b><br>An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods.",
      "color": "#75aaff",
      "size": 18,
      "label": "Argument Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/6.html",
      "id": "CAPEC-6"
    },
    {
      "Description": "<b>CAPEC-60: Reusing Session IDs (aka Session Replay)</b><br>This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay.",
      "color": "#94ebff",
      "size": 10,
      "label": "Reusing Session IDs (aka Session Replay)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/60.html",
      "id": "CAPEC-60"
    },
    {
      "Description": "<b>CAPEC-600: Credential Stuffing</b><br>An adversary tries known username/password combinations against different systems, applications, or services to gain additional authenticated access. Credential Stuffing attacks rely upon the fact that many users leverage the same username/password combination for multiple systems, applications, and services.",
      "color": "#75aaff",
      "size": 18,
      "label": "Credential Stuffing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/600.html",
      "id": "CAPEC-600"
    },
    {
      "Description": "<b>CAPEC-604: Wi-Fi Jamming</b><br>In this attack scenario, the attacker actively transmits on the Wi-Fi channel to prevent users from transmitting or receiving data from the targeted Wi-Fi network. There are several known techniques to perform this attack \u2013 for example: the attacker may flood the Wi-Fi access point (e.g. the retransmission device) with deauthentication frames. Another method is to transmit high levels of noise on the RF band used by the Wi-Fi network.",
      "color": "#94ebff",
      "size": 10,
      "label": "Wi-Fi Jamming",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/604.html",
      "id": "CAPEC-604"
    },
    {
      "Description": "<b>CAPEC-605: Cellular Jamming</b><br>In this attack scenario, the attacker actively transmits signals to overpower and disrupt the communication between a cellular user device and a cell tower. Several existing techniques are known in the open literature for this attack for 2G, 3G, and 4G LTE cellular technology. For example, some attacks target cell towers by overwhelming them with false status messages, while others introduce high levels of noise on signaling channels.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Jamming",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/605.html",
      "id": "CAPEC-605"
    },
    {
      "Description": "<b>CAPEC-606: Weakening of Cellular Encryption</b><br>An attacker, with control of a Cellular Rogue Base Station or through cooperation with a Malicious Mobile Network Operator can force the mobile device (e.g., the retransmission device) to use no encryption (A5/0 mode) or to use easily breakable encryption (A5/1 or A5/2 mode).",
      "color": "#94ebff",
      "size": 10,
      "label": "Weakening of Cellular Encryption",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/606.html",
      "id": "CAPEC-606"
    },
    {
      "Description": "<b>CAPEC-620: Drop Encryption Level</b><br>An attacker forces the encryption level to be lowered, thus enabling a successful attack against the encrypted data.",
      "color": "#75aaff",
      "size": 18,
      "label": "Drop Encryption Level",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/620.html",
      "id": "CAPEC-620"
    },
    {
      "Description": "<b>CAPEC-608: Cryptanalysis of Cellular Encryption</b><br>The use of cryptanalytic techniques to derive cryptographic keys or otherwise effectively defeat cellular encryption to reveal traffic content. Some cellular encryption algorithms such as A5/1 and A5/2 (specified for GSM use) are known to be vulnerable to such attacks and commercial tools are available to execute these attacks and decrypt mobile phone conversations in real-time. Newer encryption algorithms in use by UMTS and LTE are stronger and currently believed to be less vulnerable to these types of attacks. Note, however, that an attacker with a Cellular Rogue Base Station can force the use of weak cellular encryption even by newer mobile devices.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cryptanalysis of Cellular Encryption",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/608.html",
      "id": "CAPEC-608"
    },
    {
      "Description": "<b>CAPEC-609: Cellular Traffic Intercept</b><br>Cellular traffic for voice and data from mobile devices and retransmission devices can be intercepted via numerous methods. Malicious actors can deploy their own cellular tower equipment and intercept cellular traffic surreptitiously. Additionally, government agencies of adversaries and malicious actors can intercept cellular traffic via the telecommunications backbone over which mobile traffic is transmitted.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Traffic Intercept",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/609.html",
      "id": "CAPEC-609"
    },
    {
      "Description": "<b>CAPEC-61: Session Fixation</b><br>The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker. Once the user successfully authenticates to the target software, the attacker uses the (now privileged) session identifier in their own transactions. This attack leverages the fact that the target software either relies on client-generated session identifiers or maintains the same session identifiers after privilege elevation.",
      "color": "#94ebff",
      "size": 10,
      "label": "Session Fixation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/61.html",
      "id": "CAPEC-61"
    },
    {
      "Description": "<b>CAPEC-610: Cellular Data Injection</b><br>Adversaries inject data into mobile technology traffic (data flows or signaling data) to disrupt communications or conduct additional surveillance operations.",
      "color": "#75aaff",
      "size": 18,
      "label": "Cellular Data Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/610.html",
      "id": "CAPEC-610"
    },
    {
      "Description": "<b>CAPEC-611: BitSquatting</b><br>An adversary registers a domain name one bit different than a trusted domain. A BitSquatting attack leverages random errors in memory to direct Internet traffic to adversary-controlled destinations. BitSquatting requires no exploitation or complicated reverse engineering, and is operating system and architecture agnostic. Experimental observations show that BitSquatting popular websites could redirect non-trivial amounts of Internet traffic to a malicious entity.",
      "color": "#94ebff",
      "size": 10,
      "label": "BitSquatting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/611.html",
      "id": "CAPEC-611"
    },
    {
      "Description": "<b>CAPEC-612: WiFi MAC Address Tracking</b><br>In this attack scenario, the attacker passively listens for WiFi messages and logs the associated Media Access Control (MAC) addresses. These addresses are intended to be unique to each wireless device (although they can be configured and changed by software). Once the attacker is able to associate a MAC address with a particular user or set of users (for example, when attending a public event), the attacker can then scan for that MAC address to track that user in the future.",
      "color": "#94ebff",
      "size": 10,
      "label": "WiFi MAC Address Tracking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/612.html",
      "id": "CAPEC-612"
    },
    {
      "Description": "<b>CAPEC-613: WiFi SSID Tracking</b><br>In this attack scenario, the attacker passively listens for WiFi management frame messages containing the Service Set Identifier (SSID) for the WiFi network. These messages are frequently transmitted by WiFi access points (e.g., the retransmission device) as well as by clients that are accessing the network (e.g., the handset/mobile device). Once the attacker is able to associate an SSID with a particular user or set of users (for example, when attending a public event), the attacker can then scan for this SSID to track that user in the future.",
      "color": "#94ebff",
      "size": 10,
      "label": "WiFi SSID Tracking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/613.html",
      "id": "CAPEC-613"
    },
    {
      "Description": "<b>CAPEC-614: Rooting SIM Cards</b><br>SIM cards are the de facto trust anchor of mobile devices worldwide. The cards protect the mobile identity of subscribers, associate devices with phone numbers, and increasingly store payment credentials, for example in NFC-enabled phones with mobile wallets. This attack leverages over-the-air (OTA) updates deployed via cryptographically-secured SMS messages to deliver executable code to the SIM. By cracking the DES key, an attacker can send properly signed binary SMS messages to a device, which are treated as Java applets and are executed on the SIM. These applets are allowed to send SMS, change voicemail numbers, and query the phone location, among many other predefined functions. These capabilities alone provide plenty of potential for abuse.",
      "color": "#94ebff",
      "size": 10,
      "label": "Rooting SIM Cards",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/614.html",
      "id": "CAPEC-614"
    },
    {
      "Description": "<b>CAPEC-615: Evil Twin Wi-Fi Attack</b><br>Adversaries install Wi-Fi equipment that acts as a legitimate Wi-Fi network access point. When a device connects to this access point, Wi-Fi data traffic is intercepted, captured, and analyzed. This also allows the adversary to use \"adversary-in-the-middle\" (CAPEC-94) for all communications.",
      "color": "#94ebff",
      "size": 10,
      "label": "Evil Twin Wi-Fi Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/615.html",
      "id": "CAPEC-615"
    },
    {
      "Description": "<b>CAPEC-617: Cellular Rogue Base Station</b><br>In this attack scenario, the attacker imitates a cellular base station with their own \"rogue\" base station equipment. Since cellular devices connect to whatever station has the strongest signal, the attacker can easily convince a targeted cellular device (e.g. the retransmission device) to talk to the rogue base station.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Rogue Base Station",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/617.html",
      "id": "CAPEC-617"
    },
    {
      "Description": "<b>CAPEC-618: Cellular Broadcast Message Request</b><br>In this attack scenario, the attacker uses knowledge of the target\u2019s mobile phone number (i.e., the number associated with the SIM used in the retransmission device) to cause the cellular network to send broadcast messages to alert the mobile device. Since the network knows which cell tower the target\u2019s mobile device is attached to, the broadcast messages are only sent in the Location Area Code (LAC) where the target is currently located. By triggering the cellular broadcast message and then listening for the presence or absence of that message, an attacker could verify that the target is in (or not in) a given location.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Broadcast Message Request",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/618.html",
      "id": "CAPEC-618"
    },
    {
      "Description": "<b>CAPEC-619: Signal Strength Tracking</b><br>In this attack scenario, the attacker passively monitors the signal strength of the target\u2019s cellular RF signal or WiFi RF signal and uses the strength of the signal (with directional antennas and/or from multiple listening points at once) to identify the source location of the signal. Obtaining the signal of the target can be accomplished through multiple techniques such as through Cellular Broadcast Message Request or through the use of IMSI Tracking or WiFi MAC Address Tracking.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signal Strength Tracking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/619.html",
      "id": "CAPEC-619"
    },
    {
      "Description": "<b>CAPEC-621: Analysis of Packet Timing and Sizes</b><br>An attacker may intercept and log encrypted transmissions for the purpose of analyzing metadata such as packet timing and sizes. Although the actual data may be encrypted, this metadata may reveal valuable information to an attacker. Note that this attack is applicable to VOIP data as well as application data, especially for interactive apps that require precise timing and low-latency (e.g. thin-clients).",
      "color": "#94ebff",
      "size": 10,
      "label": "Analysis of Packet Timing and Sizes",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/621.html",
      "id": "CAPEC-621"
    },
    {
      "Description": "<b>CAPEC-622: Electromagnetic Side-Channel Attack</b><br>In this attack scenario, the attacker passively monitors electromagnetic emanations that are produced by the targeted electronic device as an unintentional side-effect of its processing. From these emanations, the attacker derives information about the data that is being processed (e.g. the attacker can recover cryptographic keys by monitoring emanations associated with cryptographic processing). This style of attack requires proximal access to the device, however attacks have been demonstrated at public conferences that work at distances of up to 10-15 feet. There have not been any significant studies to determine the maximum practical distance for such attacks. Since the attack is passive, it is nearly impossible to detect and the targeted device will continue to operate as normal after a successful attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Electromagnetic Side-Channel Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/622.html",
      "id": "CAPEC-622"
    },
    {
      "Description": "<b>CAPEC-623: Compromising Emanations Attack</b><br>Compromising Emanations (CE) are defined as unintentional signals which an attacker may intercept and analyze to disclose the information processed by the targeted equipment. Commercial mobile devices and retransmission devices have displays, buttons, microchips, and radios that emit mechanical emissions in the form of sound or vibrations. Capturing these emissions can help an adversary understand what the device is doing.",
      "color": "#94ebff",
      "size": 10,
      "label": "Compromising Emanations Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/623.html",
      "id": "CAPEC-623"
    },
    {
      "Description": "<b>CAPEC-624: Hardware Fault Injection</b><br>The adversary uses disruptive signals or events, or alters the physical environment a device operates in, to cause faulty behavior in electronic devices. This can include electromagnetic pulses, laser pulses, clock glitches, ambient temperature extremes, and more. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information.",
      "color": "#2176ff",
      "size": 30,
      "label": "Hardware Fault Injection",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/624.html",
      "id": "CAPEC-624"
    },
    {
      "Description": "<b>CAPEC-625: Mobile Device Fault Injection</b><br>Fault injection attacks against mobile devices use disruptive signals or events (e.g. electromagnetic pulses, laser pulses, clock glitches, etc.) to cause faulty behavior. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information. Although this attack usually requires physical control of the mobile device, it is non-destructive, and the device can be used after the attack without any indication that secret keys were compromised.",
      "color": "#75aaff",
      "size": 18,
      "label": "Mobile Device Fault Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/625.html",
      "id": "CAPEC-625"
    },
    {
      "Description": "<b>CAPEC-626: Smudge Attack</b><br>Attacks that reveal the password/passcode pattern on a touchscreen device by detecting oil smudges left behind by the user\u2019s fingers.",
      "color": "#94ebff",
      "size": 10,
      "label": "Smudge Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/626.html",
      "id": "CAPEC-626"
    },
    {
      "Description": "<b>CAPEC-627: Counterfeit GPS Signals</b><br>An adversary attempts to deceive a GPS receiver by broadcasting counterfeit GPS signals, structured to resemble a set of normal GPS signals. These spoofed signals may be structured in such a way as to cause the receiver to estimate its position to be somewhere other than where it actually is, or to be located where it is but at a different time, as determined by the adversary.",
      "color": "#75aaff",
      "size": 18,
      "label": "Counterfeit GPS Signals",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/627.html",
      "id": "CAPEC-627"
    },
    {
      "Description": "<b>CAPEC-628: Carry-Off GPS Attack</b><br>A common form of a GPS spoofing attack, commonly termed a carry-off attack begins with an adversary broadcasting signals synchronized with the genuine signals observed by the target receiver. The power of the counterfeit signals is then gradually increased and drawn away from the genuine signals. Over time, the adversary can carry the target away from their intended destination and toward a location chosen by the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Carry-Off GPS Attack",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/628.html",
      "id": "CAPEC-628"
    },
    {
      "Description": "<b>CAPEC-630: TypoSquatting</b><br>An adversary registers a domain name with at least one character different than a trusted domain. A TypoSquatting attack takes advantage of instances where a user mistypes a URL (e.g. www.goggle.com) or not does visually verify a URL before clicking on it (e.g. phishing attack). As a result, the user is directed to an adversary-controlled destination. TypoSquatting does not require an attack against the trusted domain or complicated reverse engineering.",
      "color": "#94ebff",
      "size": 10,
      "label": "TypoSquatting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/630.html",
      "id": "CAPEC-630"
    },
    {
      "Description": "<b>CAPEC-631: SoundSquatting</b><br>An adversary registers a domain name that sounds the same as a trusted domain, but has a different spelling. A SoundSquatting attack takes advantage of a user's confusion of the two words to direct Internet traffic to adversary-controlled destinations. SoundSquatting does not require an attack against the trusted domain or complicated reverse engineering.",
      "color": "#94ebff",
      "size": 10,
      "label": "SoundSquatting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/631.html",
      "id": "CAPEC-631"
    },
    {
      "Description": "<b>CAPEC-632: Homograph Attack via Homoglyphs</b><br>An adversary registers a domain name containing a homoglyph, leading the registered domain to appear the same as a trusted domain. A homograph attack leverages the fact that different characters among various character sets look the same to the user. Homograph attacks must generally be combined with other attacks, such as phishing attacks, in order to direct Internet traffic to the adversary-controlled destinations.",
      "color": "#94ebff",
      "size": 10,
      "label": "Homograph Attack via Homoglyphs",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/632.html",
      "id": "CAPEC-632"
    },
    {
      "Description": "<b>CAPEC-633: Token Impersonation</b><br>An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Token Impersonation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/633.html",
      "id": "CAPEC-633"
    },
    {
      "Description": "<b>CAPEC-634: Probe Audio and Video Peripherals</b><br>The adversary exploits the target system's audio and video functionalities through malware or scheduled tasks. The goal is to capture sensitive information about the target for financial, personal, political, or other gains which is accomplished by collecting communication data between two parties via the use of peripheral devices (e.g. microphones and webcams) or applications with audio and video capabilities (e.g. Skype) on a system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe Audio and Video Peripherals",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/634.html",
      "id": "CAPEC-634"
    },
    {
      "Description": "<b>CAPEC-637: Collect Data from Clipboard</b><br>The adversary exploits an application that allows for the copying of sensitive data or information by collecting information copied to the clipboard. Data copied to the clipboard can be accessed by other applications, such as malware built to exfiltrate or log clipboard contents on a periodic basis. In this way, the adversary aims to garner information to which they are unauthorized.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Clipboard",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/637.html",
      "id": "CAPEC-637"
    },
    {
      "Description": "<b>CAPEC-638: Altered Component Firmware</b><br>An adversary exploits systems features and/or improperly protected firmware of hardware components, such as Hard Disk Drives (HDD), with the goal of executing malicious code from within the component's Master Boot Record (MBR). Conducting this type of attack entails the adversary infecting the target with firmware altering malware, using known tools, and a payload. Once this malware is executed, the MBR is modified to include instructions to execute the payload at desired intervals and when the system is booted up. A successful attack will obtain persistence within the victim system even if the operating system is reinstalled and/or if the component is formatted or has its data erased.",
      "color": "#94ebff",
      "size": 10,
      "label": "Altered Component Firmware",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/638.html",
      "id": "CAPEC-638"
    },
    {
      "Description": "<b>CAPEC-639: Probe System Files</b><br>An adversary obtains unauthorized information due to improperly protected files. If an application stores sensitive information in a file that is not protected by proper access control, then an adversary can access the file and search for sensitive information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe System Files",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/639.html",
      "id": "CAPEC-639"
    },
    {
      "Description": "<b>CAPEC-64: Using Slashes and URL Encoding Combined to Bypass Validation Logic</b><br>This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/64.html",
      "id": "CAPEC-64"
    },
    {
      "Description": "<b>CAPEC-640: Inclusion of Code in Existing Process</b><br>The adversary takes advantage of a bug in an application failing to verify the integrity of the running process to execute arbitrary code in the address space of a separate live process. The adversary could use running code in the context of another process to try to access process's memory, system/network resources, etc. The goal of this attack is to evade detection defenses and escalate privileges by masking the malicious code under an existing legitimate process. Examples of approaches include but not limited to: dynamic-link library (DLL) injection, portable executable injection, thread execution hijacking, ptrace system calls, VDSO hijacking, function hooking, reflective code loading, and more.",
      "color": "#94ebff",
      "size": 10,
      "label": "Inclusion of Code in Existing Process",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/640.html",
      "id": "CAPEC-640"
    },
    {
      "Description": "<b>CAPEC-641: DLL Side-Loading</b><br>An adversary places a malicious version of a Dynamic-Link Library (DLL) in the Windows Side-by-Side (WinSxS) directory to trick the operating system into loading this malicious DLL instead of a legitimate DLL. Programs specify the location of the DLLs to load via the use of WinSxS manifests or DLL redirection and if they aren't used then Windows searches in a predefined set of directories to locate the file. If the applications improperly specify a required DLL or WinSxS manifests aren't explicit about the characteristics of the DLL to be loaded, they can be vulnerable to side-loading.",
      "color": "#94ebff",
      "size": 10,
      "label": "DLL Side-Loading",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/641.html",
      "id": "CAPEC-641"
    },
    {
      "Description": "<b>CAPEC-642: Replace Binaries</b><br>Adversaries know that certain binaries will be regularly executed as part of normal processing. If these binaries are not protected with the appropriate file system permissions, it could be possible to replace them with malware. This malware might be executed at higher system permission levels. A variation of this pattern is to discover self-extracting installation packages that unpack binaries to directories with weak file permissions which it does not clean up appropriately. These binaries can be replaced by malware, which can then be executed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Replace Binaries",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/642.html",
      "id": "CAPEC-642"
    },
    {
      "Description": "<b>CAPEC-643: Identify Shared Files/Directories on System</b><br>An adversary discovers connections between systems by exploiting the target system's standard practice of revealing them in searchable, common areas. Through the identification of shared folders/drives between systems, the adversary may further their goals of locating and collecting sensitive information/files, or map potential routes for lateral movement within the network.",
      "color": "#94ebff",
      "size": 10,
      "label": "Identify Shared Files/Directories on System",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/643.html",
      "id": "CAPEC-643"
    },
    {
      "Description": "<b>CAPEC-644: Use of Captured Hashes (Pass The Hash)</b><br>An adversary obtains (i.e. steals or purchases) legitimate Windows domain credential hash values to access systems within the domain that leverage the Lan Man (LM) and/or NT Lan Man (NTLM) authentication protocols.",
      "color": "#94ebff",
      "size": 10,
      "label": "Use of Captured Hashes (Pass The Hash)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/644.html",
      "id": "CAPEC-644"
    },
    {
      "Description": "<b>CAPEC-645: Use of Captured Tickets (Pass The Ticket)</b><br>An adversary uses stolen Kerberos tickets to access systems/resources that leverage the Kerberos authentication protocol. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. An adversary can obtain any one of these tickets (e.g. Service Ticket, Ticket Granting Ticket, Silver Ticket, or Golden Ticket) to authenticate to a system/resource without needing the account's credentials. Depending on the ticket obtained, the adversary may be able to access a particular resource or generate TGTs for any account within an Active Directory Domain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Use of Captured Tickets (Pass The Ticket)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/645.html",
      "id": "CAPEC-645"
    },
    {
      "Description": "<b>CAPEC-646: Peripheral Footprinting</b><br>Adversaries may attempt to obtain information about attached peripheral devices and components connected to a computer system. Examples may include discovering the presence of iOS devices by searching for backups, analyzing the Windows registry to determine what USB devices have been connected, or infecting a victim system with malware to report when a USB device has been connected. This may allow the adversary to gain additional insight about the system or network environment, which may be useful in constructing further attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Peripheral Footprinting",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/646.html",
      "id": "CAPEC-646"
    },
    {
      "Description": "<b>CAPEC-647: Collect Data from Registries</b><br>An adversary exploits a weakness in authorization to gather system-specific data and sensitive information within a registry (e.g., Windows Registry, Mac plist). These contain information about the system configuration, software, operating system, and security. The adversary can leverage information gathered in order to carry out further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Registries",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/647.html",
      "id": "CAPEC-647"
    },
    {
      "Description": "<b>CAPEC-648: Collect Data from Screen Capture</b><br>An adversary gathers sensitive information by exploiting the system's screen capture functionality. Through screenshots, the adversary aims to see what happens on the screen over the course of an operation. The adversary can leverage information gathered in order to carry out further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Screen Capture",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/648.html",
      "id": "CAPEC-648"
    },
    {
      "Description": "<b>CAPEC-649: Adding a Space to a File Extension</b><br>An adversary adds a space character to the end of a file extension and takes advantage of an application that does not properly neutralize trailing special elements in file names. This extra space, which can be difficult for a user to notice, affects which default application is used to operate on the file and can be leveraged by the adversary to control execution.",
      "color": "#94ebff",
      "size": 10,
      "label": "Adding a Space to a File Extension",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/649.html",
      "id": "CAPEC-649"
    },
    {
      "Description": "<b>CAPEC-65: Sniff Application Code</b><br>An adversary passively sniffs network communications and captures application code bound for an authorized client. Once obtained, they can use it as-is, or through reverse-engineering glean sensitive information or exploit the trust relationship between the client and server. Such code may belong to a dynamic update to the client, a patch being applied to a client component or any such interaction where the client is authorized to communicate with the server.",
      "color": "#94ebff",
      "size": 10,
      "label": "Sniff Application Code",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/65.html",
      "id": "CAPEC-65"
    },
    {
      "Description": "<b>CAPEC-650: Upload a Web Shell to a Web Server</b><br>By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
      "color": "#94ebff",
      "size": 10,
      "label": "Upload a Web Shell to a Web Server",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/650.html",
      "id": "CAPEC-650"
    },
    {
      "Description": "<b>CAPEC-654: Credential Prompt Impersonation</b><br>An adversary, through a previously installed malicious application, impersonates a credential prompt in an attempt to steal a user's credentials.",
      "color": "#94ebff",
      "size": 10,
      "label": "Credential Prompt Impersonation",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/654.html",
      "id": "CAPEC-654"
    },
    {
      "Description": "<b>CAPEC-655: Avoid Security Tool Identification by Adding Data</b><br>An adversary adds data to a file to increase the file size beyond what security tools are capable of handling in an attempt to mask their actions. \n In addition to this, adding data to a file also changes the file's hash, frustrating security tools that look for known bad files by their hash.",
      "color": "#94ebff",
      "size": 10,
      "label": "Avoid Security Tool Identification by Adding Data",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/655.html",
      "id": "CAPEC-655"
    },
    {
      "Description": "<b>CAPEC-656: Voice Phishing</b><br>An adversary targets users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Voice Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a voice call, rather than email. The user is enticed to provide sensitive information by the adversary, who masquerades as a legitimate employee of the alleged organization. Voice Phishing attacks deviate from standard Phishing attacks, in that a user doesn't typically interact with a compromised website to provide sensitive information and instead provides this information verbally. Voice Phishing attacks can also be initiated by either the adversary in the form of a \"cold call\" or by the victim if calling an illegitimate telephone number.",
      "color": "#94ebff",
      "size": 10,
      "label": "Voice Phishing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/656.html",
      "id": "CAPEC-656"
    },
    {
      "Description": "<b>CAPEC-657: Malicious Automated Software Update via Spoofing</b><br>An attackers uses identify or content spoofing to trick a client into performing an automated software update from a malicious source. A malicious automated software update that leverages spoofing can include content or identity spoofing as well as protocol spoofing. Content or identity spoofing attacks can trigger updates in software by embedding scripted mechanisms within a malicious web page, which masquerades as a legitimate update source. Scripting mechanisms communicate with software components and trigger updates from locations specified by the attackers' server. The result is the client believing there is a legitimate software update available but instead downloading a malicious update from the attacker.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Automated Software Update via Spoofing",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/657.html",
      "id": "CAPEC-657"
    },
    {
      "Description": "<b>CAPEC-660: Root/Jailbreak Detection Evasion via Hooking</b><br>An adversary forces a non-restricted mobile application to load arbitrary code or code files, via Hooking, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Adversaries may further leverage these capabilities to escalate privileges or bypass access control on legitimate applications. Although many mobile applications check if a mobile device is Rooted/Jailbroken prior to authorized use of the application, adversaries may be able to \"hook\" code in order to circumvent these checks. Successfully evading Root/Jailbreak detection allows an adversary to execute administrative commands, obtain confidential data, impersonate legitimate users of the application, and more.",
      "color": "#94ebff",
      "size": 10,
      "label": "Root/Jailbreak Detection Evasion via Hooking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/660.html",
      "id": "CAPEC-660"
    },
    {
      "Description": "<b>CAPEC-661: Root/Jailbreak Detection Evasion via Debugging</b><br>An adversary inserts a debugger into the program entry point of a mobile application to modify the application binary, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Rooting/Jailbreaking a mobile device also provides users with access to system debuggers and disassemblers, which can be leveraged to exploit applications by dumping the application's memory at runtime in order to remove or bypass signature verification methods. This further allows the adversary to evade Root/Jailbreak detection mechanisms, which can result in execution of administrative commands, obtaining confidential data, impersonating legitimate users of the application, and more.",
      "color": "#94ebff",
      "size": 10,
      "label": "Root/Jailbreak Detection Evasion via Debugging",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/661.html",
      "id": "CAPEC-661"
    },
    {
      "Description": "<b>CAPEC-662: Adversary in the Browser (AiTB)</b><br>An adversary exploits security vulnerabilities or inherent functionalities of a web browser, in order to manipulate traffic between two endpoints.",
      "color": "#75aaff",
      "size": 18,
      "label": "Adversary in the Browser (AiTB)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/662.html",
      "id": "CAPEC-662"
    },
    {
      "Description": "<b>CAPEC-663: Exploitation of Transient Instruction Execution</b><br>An adversary exploits a hardware design flaw in a CPU implementation of transient instruction execution to expose sensitive data and bypass/subvert access control over restricted resources. Typically, the adversary conducts a covert channel attack to target non-discarded microarchitectural changes caused by transient executions such as speculative execution, branch prediction, instruction pipelining, and/or out-of-order execution. The transient execution results in a series of instructions (gadgets) which construct covert channel and access/transfer the secret data.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploitation of Transient Instruction Execution",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/663.html",
      "id": "CAPEC-663"
    },
    {
      "Description": "<b>CAPEC-664: Server Side Request Forgery</b><br>An adversary exploits improper input validation by submitting maliciously crafted input to a target application running on a server, with the goal of forcing the server to make a request either to itself, to web services running in the server\u2019s internal network, or to external third parties. If successful, the adversary\u2019s request will be made with the server\u2019s privilege level, bypassing its authentication controls. This ultimately allows the adversary to access sensitive data, execute commands on the server\u2019s network, and make external requests with the stolen identity of the server. Server Side Request Forgery attacks differ from Cross Site Request Forgery attacks in that they target the server itself, whereas CSRF attacks exploit an insecure user authentication mechanism to perform unauthorized actions on the user's behalf.",
      "color": "#75aaff",
      "size": 18,
      "label": "Server Side Request Forgery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/664.html",
      "id": "CAPEC-664"
    },
    {
      "Description": "<b>CAPEC-665: Exploitation of Thunderbolt Protection Flaws</b><br>An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploitation of Thunderbolt Protection Flaws",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/665.html",
      "id": "CAPEC-665"
    },
    {
      "Description": "<b>CAPEC-666: BlueSmacking</b><br>An adversary uses Bluetooth flooding to transfer large packets to Bluetooth enabled devices over the L2CAP protocol with the goal of creating a DoS. This attack must be carried out within close proximity to a Bluetooth enabled device.",
      "color": "#75aaff",
      "size": 18,
      "label": "BlueSmacking",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/666.html",
      "id": "CAPEC-666"
    },
    {
      "Description": "<b>CAPEC-667: Bluetooth Impersonation AttackS (BIAS)</b><br>An adversary disguises the MAC address of their Bluetooth enabled device to one for which there exists an active and trusted connection and authenticates successfully. The adversary can then perform malicious actions on the target Bluetooth device depending on the target\u2019s capabilities.",
      "color": "#94ebff",
      "size": 10,
      "label": "Bluetooth Impersonation AttackS (BIAS)",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/667.html",
      "id": "CAPEC-667"
    },
    {
      "Description": "<b>CAPEC-668: Key Negotiation of Bluetooth Attack (KNOB)</b><br>An adversary can exploit a flaw in Bluetooth key negotiation allowing them to decrypt information sent between two devices communicating via Bluetooth. The adversary uses an Adversary in the Middle setup to modify packets sent between the two devices during the authentication process, specifically the entropy bits. Knowledge of the number of entropy bits will allow the attacker to easily decrypt information passing over the line of communication.",
      "color": "#75aaff",
      "size": 18,
      "label": "Key Negotiation of Bluetooth Attack (KNOB)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/668.html",
      "id": "CAPEC-668"
    },
    {
      "Description": "<b>CAPEC-669: Alteration of a Software Update</b><br>An adversary with access to an organization\u2019s software update infrastructure inserts malware into the content of an outgoing update to fielded systems where a wide range of malicious effects are possible. With the same level of access, the adversary can alter a software update to perform specific malicious acts including granting the adversary control over the software\u2019s normal functionality.",
      "color": "#75aaff",
      "size": 18,
      "label": "Alteration of a Software Update",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/669.html",
      "id": "CAPEC-669"
    },
    {
      "Description": "<b>CAPEC-67: String Format Overflow in syslog()</b><br>This attack targets applications and software that uses the syslog() function insecurely. If an application does not explicitely use a format string parameter in a call to syslog(), user input can be placed in the format string parameter leading to a format string injection attack. Adversaries can then inject malicious format string commands into the function call leading to a buffer overflow. There are many reported software vulnerabilities with the root cause being a misuse of the syslog() function.",
      "color": "#94ebff",
      "size": 10,
      "label": "String Format Overflow in syslog()",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/67.html",
      "id": "CAPEC-67"
    },
    {
      "Description": "<b>CAPEC-670: Software Development Tools Maliciously Altered</b><br>An adversary with the ability to alter tools used in a development environment causes software to be developed with maliciously modified tools. Such tools include requirements management and database tools, software design tools, configuration management tools, compilers, system build tools, and software performance testing and load testing tools. The adversary then carries out malicious acts once the software is deployed including malware infection of other systems to support further compromises.",
      "color": "#94ebff",
      "size": 10,
      "label": "Software Development Tools Maliciously Altered",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/670.html",
      "id": "CAPEC-670"
    },
    {
      "Description": "<b>CAPEC-671: Requirements for ASIC Functionality Maliciously Altered</b><br>An adversary with access to functional requirements for an application specific integrated circuit (ASIC), a chip designed/customized for a singular particular use, maliciously alters requirements derived from originating capability needs. In the chip manufacturing process, requirements drive the chip design which, when the chip is fully manufactured, could result in an ASIC which may not meet the user\u2019s needs, contain malicious functionality, or exhibit other anomalous behaviors thereby affecting the intended use of the ASIC.",
      "color": "#94ebff",
      "size": 10,
      "label": "Requirements for ASIC Functionality Maliciously Altered",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/671.html",
      "id": "CAPEC-671"
    },
    {
      "Description": "<b>CAPEC-672: Malicious Code Implanted During Chip Programming</b><br>During the programming step of chip manufacture, an adversary with access and necessary technical skills maliciously alters a chip\u2019s intended program logic to produce an effect intended by the adversary when the fully manufactured chip is deployed and in operational use. Intended effects can include the ability of the adversary to remotely control a host system to carry out malicious acts.",
      "color": "#94ebff",
      "size": 10,
      "label": "Malicious Code Implanted During Chip Programming",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/672.html",
      "id": "CAPEC-672"
    },
    {
      "Description": "<b>CAPEC-673: Developer Signing Maliciously Altered Software</b><br>Software produced by a reputable developer is clandestinely infected with malicious code and then digitally signed by the unsuspecting developer, where the software has been altered via a compromised software development or build process prior to being signed. The receiver or user of the software has no reason to believe that it is anything but legitimate and proceeds to deploy it to organizational systems. \n This attack differs from CAPEC-206, since the developer is inadvertently signing malicious code they believe to be legitimate and which they are unware of any malicious modifications.",
      "color": "#94ebff",
      "size": 10,
      "label": "Developer Signing Maliciously Altered Software",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/673.html",
      "id": "CAPEC-673"
    },
    {
      "Description": "<b>CAPEC-674: Design for FPGA Maliciously Altered</b><br>An adversary alters the functionality of a field-programmable gate array (FPGA) by causing an FPGA configuration memory chip reload in order to introduce a malicious function that could result in the FPGA performing or enabling malicious functions on a host system. Prior to the memory chip reload, the adversary alters the program for the FPGA by adding a function to impact system operation.",
      "color": "#94ebff",
      "size": 10,
      "label": "Design for FPGA Maliciously Altered",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/674.html",
      "id": "CAPEC-674"
    },
    {
      "Description": "<b>CAPEC-675: Retrieve Data from Decommissioned Devices</b><br>An adversary obtains decommissioned, recycled, or discarded systems and devices that can include an organization\u2019s intellectual property, employee data, and other types of controlled information. Systems and devices that have reached the end of their lifecycles may be subject to recycle or disposal where they can be exposed to adversarial attempts to retrieve information from internal memory chips and storage devices that are part of the system.",
      "color": "#75aaff",
      "size": 18,
      "label": "Retrieve Data from Decommissioned Devices",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/675.html",
      "id": "CAPEC-675"
    },
    {
      "Description": "<b>CAPEC-676: NoSQL Injection</b><br>An adversary targets software that constructs NoSQL statements based on user input or with parameters vulnerable to operator replacement in order to achieve a variety of technical impacts such as escalating privileges, bypassing authentication, and/or executing code.",
      "color": "#75aaff",
      "size": 18,
      "label": "NoSQL Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/676.html",
      "id": "CAPEC-676"
    },
    {
      "Description": "<b>CAPEC-677: Server Motherboard Compromise</b><br>Malware is inserted in a server motherboard (e.g., in the flash memory) in order to alter server functionality from that intended. The development environment or hardware/software support activity environment is susceptible to an adversary inserting malicious software into hardware components during development or update.",
      "color": "#94ebff",
      "size": 10,
      "label": "Server Motherboard Compromise",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/677.html",
      "id": "CAPEC-677"
    },
    {
      "Description": "<b>CAPEC-678: System Build Data Maliciously Altered</b><br>During the system build process, the system is deliberately misconfigured by the alteration of the build data. Access to system configuration data files and build processes is susceptible to deliberate misconfiguration of the system.",
      "color": "#94ebff",
      "size": 10,
      "label": "System Build Data Maliciously Altered",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/678.html",
      "id": "CAPEC-678"
    },
    {
      "Description": "<b>CAPEC-679: Exploitation of Improperly Configured or Implemented Memory Protections</b><br>An adversary takes advantage of missing or incorrectly configured access control within memory to read/write data or inject malicious code into said memory.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploitation of Improperly Configured or Implemented Memory Protections",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/679.html",
      "id": "CAPEC-679"
    },
    {
      "Description": "<b>CAPEC-68: Subvert Code-signing Facilities</b><br>Many languages use code signing facilities to vouch for code's identity and to thus tie code to its assigned privileges within an environment. Subverting this mechanism can be instrumental in an attacker escalating privilege. Any means of subverting the way that a virtual machine enforces code signing classifies for this style of attack.",
      "color": "#75aaff",
      "size": 18,
      "label": "Subvert Code-signing Facilities",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/68.html",
      "id": "CAPEC-68"
    },
    {
      "Description": "<b>CAPEC-680: Exploitation of Improperly Controlled Registers</b><br>An adversary exploits missing or incorrectly configured access control within registers to read/write data that is not meant to be obtained or modified by a user.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploitation of Improperly Controlled Registers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/680.html",
      "id": "CAPEC-680"
    },
    {
      "Description": "<b>CAPEC-681: Exploitation of Improperly Controlled Hardware Security Identifiers</b><br>An adversary takes advantage of missing or incorrectly configured security identifiers (e.g., tokens), which are used for access control within a System-on-Chip (SoC), to read/write data or execute a given action.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploitation of Improperly Controlled Hardware Security Identifiers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/681.html",
      "id": "CAPEC-681"
    },
    {
      "Description": "<b>CAPEC-682: Exploitation of Firmware or ROM Code with Unpatchable Vulnerabilities</b><br>An adversary may exploit vulnerable code (i.e., firmware or ROM) that is unpatchable. Unpatchable devices exist due to manufacturers intentionally or inadvertently designing devices incapable of updating their software. Additionally, with updatable devices, the manufacturer may decide not to support the device and stop making updates to their software.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploitation of Firmware or ROM Code with Unpatchable Vulnerabilities",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/682.html",
      "id": "CAPEC-682"
    },
    {
      "Description": "<b>CAPEC-69: Target Programs with Elevated Privileges</b><br>This attack targets programs running with elevated privileges. The adversary tries to leverage a vulnerability in the running program and get arbitrary code to execute with elevated privileges.",
      "color": "#75aaff",
      "size": 18,
      "label": "Target Programs with Elevated Privileges",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/69.html",
      "id": "CAPEC-69"
    },
    {
      "Description": "<b>CAPEC-690: Metadata Spoofing</b><br>An adversary alters the metadata of a resource (e.g., file, directory, repository, etc.) to present a malicious resource as legitimate/credible.",
      "color": "#2176ff",
      "size": 30,
      "label": "Metadata Spoofing",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/690.html",
      "id": "CAPEC-690"
    },
    {
      "Description": "<b>CAPEC-691: Spoof Open-Source Software Metadata</b><br>An adversary spoofs open-source software metadata in an attempt to masquerade malicious software as popular, maintained, and trusted.",
      "color": "#75aaff",
      "size": 18,
      "label": "Spoof Open-Source Software Metadata",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/691.html",
      "id": "CAPEC-691"
    },
    {
      "Description": "<b>CAPEC-692: Spoof Version Control System Commit Metadata</b><br>An adversary spoofs metadata pertaining to a Version Control System (VCS) (e.g., Git) repository's commits to deceive users into believing that the maliciously provided software is frequently maintained and originates from a trusted source.",
      "color": "#94ebff",
      "size": 10,
      "label": "Spoof Version Control System Commit Metadata",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/692.html",
      "id": "CAPEC-692"
    },
    {
      "Description": "<b>CAPEC-693: StarJacking</b><br>An adversary spoofs software popularity metadata to deceive users into believing that a maliciously provided package is widely used and originates from a trusted source.",
      "color": "#94ebff",
      "size": 10,
      "label": "StarJacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/693.html",
      "id": "CAPEC-693"
    },
    {
      "Description": "<b>CAPEC-694: System Location Discovery</b><br>An adversary collects information about the target system in an attempt to identify the system's geographical location. \n Information gathered could include keyboard layout, system language, and timezone. This information may benefit an adversary in confirming the desired target and/or tailoring further attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "System Location Discovery",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/694.html",
      "id": "CAPEC-694"
    },
    {
      "Description": "<b>CAPEC-695: Repo Jacking</b><br>An adversary takes advantage of the redirect property of directly linked Version Control System (VCS) repositories to trick users into incorporating malicious code into their applications.",
      "color": "#94ebff",
      "size": 10,
      "label": "Repo Jacking",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/695.html",
      "id": "CAPEC-695"
    },
    {
      "Description": "<b>CAPEC-696: Load Value Injection</b><br>An adversary exploits a hardware design flaw in a CPU implementation of transient instruction execution in which a faulting or assisted load instruction transiently forwards adversary-controlled data from microarchitectural buffers. By inducing a page fault or microcode assist during victim execution, an adversary can force legitimate victim execution to operate on the adversary-controlled data which is stored in the microarchitectural buffers. The adversary can then use existing code gadgets and side channel analysis to discover victim secrets that have not yet been flushed from microarchitectural state or hijack the system control flow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Load Value Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/696.html",
      "id": "CAPEC-696"
    },
    {
      "Description": "<b>CAPEC-697: DHCP Spoofing</b><br>An adversary masquerades as a legitimate Dynamic Host Configuration Protocol (DHCP) server by spoofing DHCP traffic, with the goal of redirecting network traffic or denying service to DHCP.",
      "color": "#75aaff",
      "size": 18,
      "label": "DHCP Spoofing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/697.html",
      "id": "CAPEC-697"
    },
    {
      "Description": "<b>CAPEC-698: Install Malicious Extension</b><br>An adversary directly installs or tricks a user into installing a malicious extension into existing trusted software, with the goal of achieving a variety of negative technical impacts.",
      "color": "#94ebff",
      "size": 10,
      "label": "Install Malicious Extension",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/698.html",
      "id": "CAPEC-698"
    },
    {
      "Description": "<b>CAPEC-699: Eavesdropping on a Monitor</b><br>An Adversary can eavesdrop on the content of an external monitor through the air without modifying any cable or installing software, just capturing this signal emitted by the cable or video port, with this the attacker will be able to impact the confidentiality of the data without being detected by traditional security tools",
      "color": "#2176ff",
      "size": 30,
      "label": "Eavesdropping on a Monitor",
      "label_class": "node-label-big",
      "type": "CAPEC",
      "abstraction": "Meta",
      "url": "https://capec.mitre.org/data/definitions/699.html",
      "id": "CAPEC-699"
    },
    {
      "Description": "<b>CAPEC-7: Blind SQL Injection</b><br>Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
      "color": "#94ebff",
      "size": 10,
      "label": "Blind SQL Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/7.html",
      "id": "CAPEC-7"
    },
    {
      "Description": "<b>CAPEC-70: Try Common or Default Usernames and Passwords</b><br>An adversary may try certain common or default usernames and passwords to gain access into the system and perform unauthorized actions. An adversary may try an intelligent brute force using empty passwords, known vendor default credentials, as well as a dictionary of common usernames and passwords. Many vendor products come preconfigured with default (and thus well-known) usernames and passwords that should be deleted prior to usage in a production environment. It is a common mistake to forget to remove these default login credentials. Another problem is that users would pick very simple (common) passwords (e.g. \"secret\" or \"password\") that make it easier for the attacker to gain access to the system compared to using a brute force attack or even a dictionary attack using a full dictionary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Try Common or Default Usernames and Passwords",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/70.html",
      "id": "CAPEC-70"
    },
    {
      "Description": "<b>CAPEC-700: Network Boundary Bridging</b><br>An adversary which has gained elevated access to network boundary devices may use these devices to create a channel to bridge trusted and untrusted networks. Boundary devices do not necessarily have to be on the network\u2019s edge, but rather must serve to segment portions of the target network the adversary wishes to cross into.",
      "color": "#75aaff",
      "size": 18,
      "label": "Network Boundary Bridging",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/700.html",
      "id": "CAPEC-700"
    },
    {
      "Description": "<b>CAPEC-701: Browser in the Middle (BiTM)</b><br>An adversary exploits the inherent functionalities of a web browser, in order to establish an unnoticed remote desktop connection in the victim's browser to the adversary's system. The adversary must deploy a web client with a remote desktop session that the victim can access.",
      "color": "#75aaff",
      "size": 18,
      "label": "Browser in the Middle (BiTM)",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/701.html",
      "id": "CAPEC-701"
    },
    {
      "Description": "<b>CAPEC-702: Exploiting Incorrect Chaining or Granularity of Hardware Debug Components</b><br>An adversary exploits incorrect chaining or granularity of hardware debug components in order to gain unauthorized access to debug functionality on a chip. This happens when authorization is not checked on a per function basis and is assumed for a chain or group of debug functionality.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploiting Incorrect Chaining or Granularity of Hardware Debug Components",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/702.html",
      "id": "CAPEC-702"
    },
    {
      "Description": "<b>CAPEC-71: Using Unicode Encoding to Bypass Validation Logic</b><br>An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Unicode Encoding to Bypass Validation Logic",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/71.html",
      "id": "CAPEC-71"
    },
    {
      "Description": "<b>CAPEC-72: URL Encoding</b><br>This attack targets the encoding of the URL. An adversary can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL.",
      "color": "#94ebff",
      "size": 10,
      "label": "URL Encoding",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/72.html",
      "id": "CAPEC-72"
    },
    {
      "Description": "<b>CAPEC-73: User-Controlled Filename</b><br>An attack of this type involves an adversary inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities.",
      "color": "#75aaff",
      "size": 18,
      "label": "User-Controlled Filename",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/73.html",
      "id": "CAPEC-73"
    },
    {
      "Description": "<b>CAPEC-75: Manipulating Writeable Configuration Files</b><br>Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating Writeable Configuration Files",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/75.html",
      "id": "CAPEC-75"
    },
    {
      "Description": "<b>CAPEC-76: Manipulating Web Input to File System Calls</b><br>An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
      "color": "#94ebff",
      "size": 10,
      "label": "Manipulating Web Input to File System Calls",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/76.html",
      "id": "CAPEC-76"
    },
    {
      "Description": "<b>CAPEC-78: Using Escaped Slashes in Alternate Encoding</b><br>This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Escaped Slashes in Alternate Encoding",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/78.html",
      "id": "CAPEC-78"
    },
    {
      "Description": "<b>CAPEC-79: Using Slashes in Alternate Encoding</b><br>This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using Slashes in Alternate Encoding",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/79.html",
      "id": "CAPEC-79"
    },
    {
      "Description": "<b>CAPEC-8: Buffer Overflow in an API Call</b><br>This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An adversary who has knowledge of known vulnerable libraries or shared code can easily target software that makes use of these libraries. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.",
      "color": "#94ebff",
      "size": 10,
      "label": "Buffer Overflow in an API Call",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/8.html",
      "id": "CAPEC-8"
    },
    {
      "Description": "<b>CAPEC-80: Using UTF-8 Encoding to Bypass Validation Logic</b><br>This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the \"shortest possible\" encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters.",
      "color": "#94ebff",
      "size": 10,
      "label": "Using UTF-8 Encoding to Bypass Validation Logic",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/80.html",
      "id": "CAPEC-80"
    },
    {
      "Description": "<b>CAPEC-81: Web Server Logs Tampering</b><br>Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to \"Log Injection-Tampering-Forging\" except that in this case, the attack is targeting the logs of the web server and not the application.",
      "color": "#94ebff",
      "size": 10,
      "label": "Web Server Logs Tampering",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/81.html",
      "id": "CAPEC-81"
    },
    {
      "Description": "<b>CAPEC-83: XPath Injection</b><br>An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that they normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database.",
      "color": "#94ebff",
      "size": 10,
      "label": "XPath Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/83.html",
      "id": "CAPEC-83"
    },
    {
      "Description": "<b>CAPEC-84: XQuery Injection</b><br>This attack utilizes XQuery to probe and attack server systems; in a similar manner that SQL Injection allows an attacker to exploit SQL calls to RDBMS, XQuery Injection uses improperly validated data that is passed to XQuery commands to traverse and execute commands that the XQuery routines have access to. XQuery injection can be used to enumerate elements on the victim's environment, inject commands to the local host, or execute queries to remote files and data sources.",
      "color": "#94ebff",
      "size": 10,
      "label": "XQuery Injection",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/84.html",
      "id": "CAPEC-84"
    },
    {
      "Description": "<b>CAPEC-85: AJAX Footprinting</b><br>This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. A common first step for an attacker is to footprint the target environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on. The knowledge gained through Ajax fingerprinting can be used to support other attacks, such as XSS.",
      "color": "#94ebff",
      "size": 10,
      "label": "AJAX Footprinting",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/85.html",
      "id": "CAPEC-85"
    },
    {
      "Description": "<b>CAPEC-86: XSS Through HTTP Headers</b><br>An adversary exploits web applications that generate web content, such as links in a HTML page, based on unvalidated or improperly validated data submitted by other actors. XSS in HTTP Headers attacks target the HTTP headers which are hidden from most users and may not be validated by web applications.",
      "color": "#94ebff",
      "size": 10,
      "label": "XSS Through HTTP Headers",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/86.html",
      "id": "CAPEC-86"
    },
    {
      "Description": "<b>CAPEC-87: Forceful Browsing</b><br>An attacker employs forceful browsing (direct URL entry) to access portions of a website that are otherwise unreachable. Usually, a front controller or similar design pattern is employed to protect access to portions of a web application. Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected.",
      "color": "#75aaff",
      "size": 18,
      "label": "Forceful Browsing",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/87.html",
      "id": "CAPEC-87"
    },
    {
      "Description": "<b>CAPEC-88: OS Command Injection</b><br>In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system.",
      "color": "#75aaff",
      "size": 18,
      "label": "OS Command Injection",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/88.html",
      "id": "CAPEC-88"
    },
    {
      "Description": "<b>CAPEC-89: Pharming</b><br>A pharming attack occurs when the victim is fooled into entering sensitive data into supposedly trusted locations, such as an online bank site or a trading platform. An attacker can impersonate these supposedly trusted sites and have the victim be directed to their site rather than the originally intended one. Pharming does not require script injection or clicking on malicious links for the attack to succeed.",
      "color": "#75aaff",
      "size": 18,
      "label": "Pharming",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/89.html",
      "id": "CAPEC-89"
    },
    {
      "Description": "<b>CAPEC-9: Buffer Overflow in Local Command-Line Utilities</b><br>This attack targets command-line utilities available in a number of shells. An adversary can leverage a vulnerability found in a command-line utility to escalate privilege to root.",
      "color": "#94ebff",
      "size": 10,
      "label": "Buffer Overflow in Local Command-Line Utilities",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/9.html",
      "id": "CAPEC-9"
    },
    {
      "Description": "<b>CAPEC-90: Reflection Attack in Authentication Protocol</b><br>An adversary can abuse an authentication protocol susceptible to reflection attack in order to defeat it. Doing so allows the adversary illegitimate access to the target system, without possessing the requisite credentials. Reflection attacks are of great concern to authentication protocols that rely on a challenge-handshake or similar mechanism. An adversary can impersonate a legitimate user and can gain illegitimate access to the system by successfully mounting a reflection attack during authentication.",
      "color": "#75aaff",
      "size": 18,
      "label": "Reflection Attack in Authentication Protocol",
      "label_class": "node-label-medium",
      "type": "CAPEC",
      "abstraction": "Standard",
      "url": "https://capec.mitre.org/data/definitions/90.html",
      "id": "CAPEC-90"
    },
    {
      "Description": "<b>CAPEC-92: Forced Integer Overflow</b><br>This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
      "color": "#94ebff",
      "size": 10,
      "label": "Forced Integer Overflow",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/92.html",
      "id": "CAPEC-92"
    },
    {
      "Description": "<b>CAPEC-93: Log Injection-Tampering-Forging</b><br>This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing them to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.",
      "color": "#94ebff",
      "size": 10,
      "label": "Log Injection-Tampering-Forging",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/93.html",
      "id": "CAPEC-93"
    },
    {
      "Description": "<b>CAPEC-95: WSDL Scanning</b><br>This attack targets the WSDL interface made available by a web service. The attacker may scan the WSDL interface to reveal sensitive information about invocation patterns, underlying technology implementations and associated vulnerabilities. This type of probing is carried out to perform more serious attacks (e.g. parameter tampering, malicious content injection, command injection, etc.). WSDL files provide detailed information about the services ports and bindings available to consumers. For instance, the attacker can submit special characters or malicious content to the Web service and can cause a denial of service condition or illegal access to database records. In addition, the attacker may try to guess other private methods by using the information provided in the WSDL files.",
      "color": "#94ebff",
      "size": 10,
      "label": "WSDL Scanning",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/95.html",
      "id": "CAPEC-95"
    },
    {
      "Description": "<b>CAPEC-96: Block Access to Libraries</b><br>An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. It is possible that the application does not handle situations properly where access to these libraries has been blocked. Depending on the error handling within the application, blocked access to libraries may leave the system in an insecure state that could be leveraged by an attacker.",
      "color": "#94ebff",
      "size": 10,
      "label": "Block Access to Libraries",
      "label_class": "node-label-small",
      "type": "CAPEC",
      "abstraction": "Detailed",
      "url": "https://capec.mitre.org/data/definitions/96.html",
      "id": "CAPEC-96"
    }
  ],
  "links": [
    {
      "width": 1,
      "source": "CWE-1004",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-732",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-732",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-1007",
      "target": "CWE-451"
    },
    {
      "width": 1,
      "source": "CWE-451",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-451",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-102",
      "target": "CWE-694"
    },
    {
      "width": 1,
      "source": "CWE-102",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-102",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-694",
      "target": "CWE-99"
    },
    {
      "width": 1,
      "source": "CWE-694",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-1173",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-20",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-1021",
      "target": "CWE-441"
    },
    {
      "width": 1,
      "source": "CWE-1021",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-1021",
      "target": "CWE-451"
    },
    {
      "width": 1,
      "source": "CWE-441",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-610",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1022",
      "target": "CWE-266"
    },
    {
      "width": 1,
      "source": "CWE-266",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-1023",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-1024",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-1025",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-103",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-103",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-573",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1037",
      "target": "CWE-1038"
    },
    {
      "width": 1,
      "source": "CWE-1038",
      "target": "CWE-435"
    },
    {
      "width": 1,
      "source": "CWE-1038",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-758",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1039",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1039",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-104",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-104",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1041",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1042",
      "target": "CWE-1176"
    },
    {
      "width": 1,
      "source": "CWE-1176",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1043",
      "target": "CWE-1093"
    },
    {
      "width": 1,
      "source": "CWE-1093",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1044",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1045",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1076",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1046",
      "target": "CWE-1176"
    },
    {
      "width": 1,
      "source": "CWE-1047",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1120",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1048",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1049",
      "target": "CWE-1176"
    },
    {
      "width": 1,
      "source": "CWE-105",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-105",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1050",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-405",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-1051",
      "target": "CWE-1419"
    },
    {
      "width": 1,
      "source": "CWE-1419",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-1052",
      "target": "CWE-1419"
    },
    {
      "width": 1,
      "source": "CWE-1053",
      "target": "CWE-1059"
    },
    {
      "width": 1,
      "source": "CWE-1059",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1054",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1061",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1055",
      "target": "CWE-1093"
    },
    {
      "width": 1,
      "source": "CWE-1056",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1057",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1058",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-662",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-662",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-106",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-106",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1060",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1062",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1063",
      "target": "CWE-1176"
    },
    {
      "width": 1,
      "source": "CWE-1064",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1065",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1066",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1067",
      "target": "CWE-1176"
    },
    {
      "width": 1,
      "source": "CWE-1068",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1069",
      "target": "CWE-1071"
    },
    {
      "width": 1,
      "source": "CWE-1071",
      "target": "CWE-1164"
    },
    {
      "width": 1,
      "source": "CWE-107",
      "target": "CWE-1164"
    },
    {
      "width": 1,
      "source": "CWE-107",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1164",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1070",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1072",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1073",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1074",
      "target": "CWE-1093"
    },
    {
      "width": 1,
      "source": "CWE-1075",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1077",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-1078",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1079",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-108",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-108",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1080",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1082",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1083",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1084",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1085",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1086",
      "target": "CWE-1093"
    },
    {
      "width": 1,
      "source": "CWE-1087",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1088",
      "target": "CWE-821"
    },
    {
      "width": 1,
      "source": "CWE-821",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-1089",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-109",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-109",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1090",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1091",
      "target": "CWE-772"
    },
    {
      "width": 1,
      "source": "CWE-1091",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-772",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-1092",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1094",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1095",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1096",
      "target": "CWE-820"
    },
    {
      "width": 1,
      "source": "CWE-1096",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-820",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-1097",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1097",
      "target": "CWE-595"
    },
    {
      "width": 1,
      "source": "CWE-595",
      "target": "CWE-1025"
    },
    {
      "width": 1,
      "source": "CWE-1098",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1099",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-11",
      "target": "CWE-489"
    },
    {
      "width": 1,
      "source": "CWE-489",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-110",
      "target": "CWE-1164"
    },
    {
      "width": 1,
      "source": "CWE-110",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1100",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1101",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1102",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-1103",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-1104",
      "target": "CWE-1357"
    },
    {
      "width": 1,
      "source": "CWE-1357",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1105",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-1105",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-1106",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1107",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1108",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-1109",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-111",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-111",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-695",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-1110",
      "target": "CWE-1059"
    },
    {
      "width": 1,
      "source": "CWE-1111",
      "target": "CWE-1059"
    },
    {
      "width": 1,
      "source": "CWE-1112",
      "target": "CWE-1059"
    },
    {
      "width": 1,
      "source": "CWE-1113",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1114",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1115",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1116",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1117",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-1118",
      "target": "CWE-1059"
    },
    {
      "width": 1,
      "source": "CWE-1119",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-112",
      "target": "CWE-1286"
    },
    {
      "width": 1,
      "source": "CWE-112",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1286",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1121",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1122",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1123",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1124",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1125",
      "target": "CWE-1120"
    },
    {
      "width": 1,
      "source": "CWE-1126",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1127",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-113",
      "target": "CWE-93"
    },
    {
      "width": 1,
      "source": "CWE-113",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-113",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-93",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-436",
      "target": "CWE-435"
    },
    {
      "width": 1,
      "source": "CWE-114",
      "target": "CWE-73"
    },
    {
      "width": 1,
      "source": "CWE-114",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-73",
      "target": "CWE-642"
    },
    {
      "width": 1,
      "source": "CWE-73",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-73",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-115",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-116",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-117",
      "target": "CWE-116"
    },
    {
      "width": 1,
      "source": "CWE-117",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1174",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-1177",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-118",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1188",
      "target": "CWE-1419"
    },
    {
      "width": 1,
      "source": "CWE-1188",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-665",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1189",
      "target": "CWE-653"
    },
    {
      "width": 1,
      "source": "CWE-1189",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-653",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-653",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-668",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-119",
      "target": "CWE-118"
    },
    {
      "width": 1,
      "source": "CWE-119",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1190",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-696",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1191",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1192",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-657",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1193",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-12",
      "target": "CWE-756"
    },
    {
      "width": 1,
      "source": "CWE-756",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-120",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-120",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1204",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-330",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1209",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-121",
      "target": "CWE-788"
    },
    {
      "width": 1,
      "source": "CWE-121",
      "target": "CWE-787"
    },
    {
      "width": 1,
      "source": "CWE-788",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-787",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-122",
      "target": "CWE-788"
    },
    {
      "width": 1,
      "source": "CWE-122",
      "target": "CWE-787"
    },
    {
      "width": 1,
      "source": "CWE-1220",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1221",
      "target": "CWE-1419"
    },
    {
      "width": 1,
      "source": "CWE-1222",
      "target": "CWE-1220"
    },
    {
      "width": 1,
      "source": "CWE-1223",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-362",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1224",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1229",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-123",
      "target": "CWE-787"
    },
    {
      "width": 1,
      "source": "CWE-123",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-1230",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-285",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1231",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1232",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-667",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-1233",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1233",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-1234",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-1235",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-400",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1236",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-74",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-1239",
      "target": "CWE-226"
    },
    {
      "width": 1,
      "source": "CWE-226",
      "target": "CWE-459"
    },
    {
      "width": 1,
      "source": "CWE-226",
      "target": "CWE-212"
    },
    {
      "width": 1,
      "source": "CWE-124",
      "target": "CWE-786"
    },
    {
      "width": 1,
      "source": "CWE-124",
      "target": "CWE-787"
    },
    {
      "width": 1,
      "source": "CWE-786",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-1240",
      "target": "CWE-327"
    },
    {
      "width": 1,
      "source": "CWE-327",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1241",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-1242",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1243",
      "target": "CWE-1263"
    },
    {
      "width": 1,
      "source": "CWE-1263",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1244",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-863",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-863",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1245",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-684",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-1246",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-1247",
      "target": "CWE-1384"
    },
    {
      "width": 1,
      "source": "CWE-1384",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-1248",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1249",
      "target": "CWE-1250"
    },
    {
      "width": 1,
      "source": "CWE-1250",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-125",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-1251",
      "target": "CWE-1250"
    },
    {
      "width": 1,
      "source": "CWE-1252",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1253",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1254",
      "target": "CWE-208"
    },
    {
      "width": 1,
      "source": "CWE-1254",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-208",
      "target": "CWE-203"
    },
    {
      "width": 1,
      "source": "CWE-1255",
      "target": "CWE-1300"
    },
    {
      "width": 1,
      "source": "CWE-1300",
      "target": "CWE-203"
    },
    {
      "width": 1,
      "source": "CWE-1256",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-1257",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1258",
      "target": "CWE-212"
    },
    {
      "width": 1,
      "source": "CWE-1258",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-212",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-200",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-1259",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1259",
      "target": "CWE-1294"
    },
    {
      "width": 1,
      "source": "CWE-1294",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-126",
      "target": "CWE-125"
    },
    {
      "width": 1,
      "source": "CWE-126",
      "target": "CWE-788"
    },
    {
      "width": 1,
      "source": "CWE-1260",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1261",
      "target": "CWE-1384"
    },
    {
      "width": 1,
      "source": "CWE-1262",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1264",
      "target": "CWE-821"
    },
    {
      "width": 1,
      "source": "CWE-1265",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1266",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-404",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1267",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1268",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1269",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-127",
      "target": "CWE-125"
    },
    {
      "width": 1,
      "source": "CWE-127",
      "target": "CWE-786"
    },
    {
      "width": 1,
      "source": "CWE-1270",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1270",
      "target": "CWE-1294"
    },
    {
      "width": 1,
      "source": "CWE-1271",
      "target": "CWE-909"
    },
    {
      "width": 1,
      "source": "CWE-909",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-1272",
      "target": "CWE-226"
    },
    {
      "width": 1,
      "source": "CWE-1273",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-1274",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1275",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-923",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1276",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1277",
      "target": "CWE-1329"
    },
    {
      "width": 1,
      "source": "CWE-1329",
      "target": "CWE-1357"
    },
    {
      "width": 1,
      "source": "CWE-1329",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1278",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1279",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1279",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-128",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-1280",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-1280",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1281",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1282",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-1283",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1284",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1285",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1287",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1288",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1289",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-129",
      "target": "CWE-1285"
    },
    {
      "width": 1,
      "source": "CWE-129",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1290",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1290",
      "target": "CWE-1294"
    },
    {
      "width": 1,
      "source": "CWE-1291",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1292",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1292",
      "target": "CWE-1294"
    },
    {
      "width": 1,
      "source": "CWE-1293",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-345",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1295",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-1296",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1297",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-1298",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-1299",
      "target": "CWE-420"
    },
    {
      "width": 1,
      "source": "CWE-1299",
      "target": "CWE-288"
    },
    {
      "width": 1,
      "source": "CWE-420",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-288",
      "target": "CWE-306"
    },
    {
      "width": 1,
      "source": "CWE-288",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-13",
      "target": "CWE-260"
    },
    {
      "width": 1,
      "source": "CWE-260",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-130",
      "target": "CWE-240"
    },
    {
      "width": 1,
      "source": "CWE-130",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-240",
      "target": "CWE-237"
    },
    {
      "width": 1,
      "source": "CWE-240",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-203",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-1301",
      "target": "CWE-226"
    },
    {
      "width": 1,
      "source": "CWE-1302",
      "target": "CWE-1294"
    },
    {
      "width": 1,
      "source": "CWE-1303",
      "target": "CWE-1189"
    },
    {
      "width": 1,
      "source": "CWE-1303",
      "target": "CWE-203"
    },
    {
      "width": 1,
      "source": "CWE-1304",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-131",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-1310",
      "target": "CWE-1329"
    },
    {
      "width": 1,
      "source": "CWE-1311",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1312",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1313",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1314",
      "target": "CWE-862"
    },
    {
      "width": 1,
      "source": "CWE-862",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-862",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1315",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1316",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1317",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1318",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1319",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1320",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1321",
      "target": "CWE-915"
    },
    {
      "width": 1,
      "source": "CWE-1321",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-915",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-913",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1322",
      "target": "CWE-834"
    },
    {
      "width": 1,
      "source": "CWE-834",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-1323",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1325",
      "target": "CWE-770"
    },
    {
      "width": 1,
      "source": "CWE-770",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-770",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-1326",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1327",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-1328",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-1330",
      "target": "CWE-1301"
    },
    {
      "width": 1,
      "source": "CWE-1331",
      "target": "CWE-653"
    },
    {
      "width": 1,
      "source": "CWE-1331",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-1332",
      "target": "CWE-1384"
    },
    {
      "width": 1,
      "source": "CWE-1333",
      "target": "CWE-407"
    },
    {
      "width": 1,
      "source": "CWE-407",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-1334",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1335",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-1336",
      "target": "CWE-94"
    },
    {
      "width": 1,
      "source": "CWE-94",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-94",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-1338",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-1339",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-134",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-134",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-1341",
      "target": "CWE-675"
    },
    {
      "width": 1,
      "source": "CWE-675",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-1342",
      "target": "CWE-226"
    },
    {
      "width": 1,
      "source": "CWE-135",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-1351",
      "target": "CWE-1384"
    },
    {
      "width": 1,
      "source": "CWE-138",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-1385",
      "target": "CWE-346"
    },
    {
      "width": 1,
      "source": "CWE-346",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-346",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1386",
      "target": "CWE-59"
    },
    {
      "width": 1,
      "source": "CWE-59",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-1389",
      "target": "CWE-704"
    },
    {
      "width": 1,
      "source": "CWE-704",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-1390",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-287",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-1391",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-1392",
      "target": "CWE-1391"
    },
    {
      "width": 1,
      "source": "CWE-1393",
      "target": "CWE-1392"
    },
    {
      "width": 1,
      "source": "CWE-1394",
      "target": "CWE-1392"
    },
    {
      "width": 1,
      "source": "CWE-1395",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-14",
      "target": "CWE-733"
    },
    {
      "width": 1,
      "source": "CWE-733",
      "target": "CWE-1038"
    },
    {
      "width": 1,
      "source": "CWE-140",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-141",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-142",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-143",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-144",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-145",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-146",
      "target": "CWE-140"
    },
    {
      "width": 1,
      "source": "CWE-147",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-148",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-149",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-15",
      "target": "CWE-642"
    },
    {
      "width": 1,
      "source": "CWE-15",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-15",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-642",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-150",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-151",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-152",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-153",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-154",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-155",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-156",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-157",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-158",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-159",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-160",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-161",
      "target": "CWE-160"
    },
    {
      "width": 1,
      "source": "CWE-162",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-163",
      "target": "CWE-162"
    },
    {
      "width": 1,
      "source": "CWE-164",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-165",
      "target": "CWE-164"
    },
    {
      "width": 1,
      "source": "CWE-166",
      "target": "CWE-159"
    },
    {
      "width": 1,
      "source": "CWE-166",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-167",
      "target": "CWE-159"
    },
    {
      "width": 1,
      "source": "CWE-167",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-168",
      "target": "CWE-159"
    },
    {
      "width": 1,
      "source": "CWE-168",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-170",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-170",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-172",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-173",
      "target": "CWE-172"
    },
    {
      "width": 1,
      "source": "CWE-174",
      "target": "CWE-172"
    },
    {
      "width": 1,
      "source": "CWE-174",
      "target": "CWE-675"
    },
    {
      "width": 1,
      "source": "CWE-175",
      "target": "CWE-172"
    },
    {
      "width": 1,
      "source": "CWE-176",
      "target": "CWE-172"
    },
    {
      "width": 1,
      "source": "CWE-177",
      "target": "CWE-172"
    },
    {
      "width": 1,
      "source": "CWE-178",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-706",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-179",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-179",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-180",
      "target": "CWE-179"
    },
    {
      "width": 1,
      "source": "CWE-181",
      "target": "CWE-179"
    },
    {
      "width": 1,
      "source": "CWE-182",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-183",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-184",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-184",
      "target": "CWE-1023"
    },
    {
      "width": 1,
      "source": "CWE-185",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-186",
      "target": "CWE-185"
    },
    {
      "width": 1,
      "source": "CWE-187",
      "target": "CWE-1023"
    },
    {
      "width": 1,
      "source": "CWE-188",
      "target": "CWE-1105"
    },
    {
      "width": 1,
      "source": "CWE-188",
      "target": "CWE-435"
    },
    {
      "width": 1,
      "source": "CWE-190",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-190",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-191",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-192",
      "target": "CWE-681"
    },
    {
      "width": 1,
      "source": "CWE-681",
      "target": "CWE-704"
    },
    {
      "width": 1,
      "source": "CWE-193",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-194",
      "target": "CWE-681"
    },
    {
      "width": 1,
      "source": "CWE-195",
      "target": "CWE-681"
    },
    {
      "width": 1,
      "source": "CWE-196",
      "target": "CWE-681"
    },
    {
      "width": 1,
      "source": "CWE-197",
      "target": "CWE-681"
    },
    {
      "width": 1,
      "source": "CWE-198",
      "target": "CWE-188"
    },
    {
      "width": 1,
      "source": "CWE-201",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-202",
      "target": "CWE-1230"
    },
    {
      "width": 1,
      "source": "CWE-204",
      "target": "CWE-203"
    },
    {
      "width": 1,
      "source": "CWE-205",
      "target": "CWE-203"
    },
    {
      "width": 1,
      "source": "CWE-206",
      "target": "CWE-205"
    },
    {
      "width": 1,
      "source": "CWE-207",
      "target": "CWE-205"
    },
    {
      "width": 1,
      "source": "CWE-209",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-209",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-755",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-210",
      "target": "CWE-209"
    },
    {
      "width": 1,
      "source": "CWE-211",
      "target": "CWE-209"
    },
    {
      "width": 1,
      "source": "CWE-669",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-213",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-214",
      "target": "CWE-497"
    },
    {
      "width": 1,
      "source": "CWE-497",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-215",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-219",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-552",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-552",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-22",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-22",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-220",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-221",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-222",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-223",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-224",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-459",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-228",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-228",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-229",
      "target": "CWE-228"
    },
    {
      "width": 1,
      "source": "CWE-23",
      "target": "CWE-22"
    },
    {
      "width": 1,
      "source": "CWE-230",
      "target": "CWE-229"
    },
    {
      "width": 1,
      "source": "CWE-231",
      "target": "CWE-229"
    },
    {
      "width": 1,
      "source": "CWE-232",
      "target": "CWE-229"
    },
    {
      "width": 1,
      "source": "CWE-233",
      "target": "CWE-228"
    },
    {
      "width": 1,
      "source": "CWE-234",
      "target": "CWE-233"
    },
    {
      "width": 1,
      "source": "CWE-235",
      "target": "CWE-233"
    },
    {
      "width": 1,
      "source": "CWE-236",
      "target": "CWE-233"
    },
    {
      "width": 1,
      "source": "CWE-237",
      "target": "CWE-228"
    },
    {
      "width": 1,
      "source": "CWE-238",
      "target": "CWE-237"
    },
    {
      "width": 1,
      "source": "CWE-239",
      "target": "CWE-237"
    },
    {
      "width": 1,
      "source": "CWE-24",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-241",
      "target": "CWE-228"
    },
    {
      "width": 1,
      "source": "CWE-242",
      "target": "CWE-1177"
    },
    {
      "width": 1,
      "source": "CWE-243",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-243",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-244",
      "target": "CWE-226"
    },
    {
      "width": 1,
      "source": "CWE-245",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-246",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-248",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-248",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-248",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-705",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-25",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-250",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-250",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-269",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-252",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-754",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-253",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-253",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-256",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-522",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-522",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-522",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-257",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-258",
      "target": "CWE-260"
    },
    {
      "width": 1,
      "source": "CWE-258",
      "target": "CWE-521"
    },
    {
      "width": 1,
      "source": "CWE-521",
      "target": "CWE-1391"
    },
    {
      "width": 1,
      "source": "CWE-521",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-259",
      "target": "CWE-798"
    },
    {
      "width": 1,
      "source": "CWE-798",
      "target": "CWE-1391"
    },
    {
      "width": 1,
      "source": "CWE-798",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-798",
      "target": "CWE-344"
    },
    {
      "width": 1,
      "source": "CWE-798",
      "target": "CWE-671"
    },
    {
      "width": 1,
      "source": "CWE-26",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-261",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-262",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-263",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-267",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-268",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-27",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-270",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-271",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-272",
      "target": "CWE-271"
    },
    {
      "width": 1,
      "source": "CWE-273",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-273",
      "target": "CWE-271"
    },
    {
      "width": 1,
      "source": "CWE-274",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-274",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-276",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-277",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-278",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-279",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-28",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-280",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-281",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-282",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-283",
      "target": "CWE-282"
    },
    {
      "width": 1,
      "source": "CWE-286",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-306",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-289",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-29",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-290",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-290",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-291",
      "target": "CWE-290"
    },
    {
      "width": 1,
      "source": "CWE-291",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-291",
      "target": "CWE-471"
    },
    {
      "width": 1,
      "source": "CWE-471",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-293",
      "target": "CWE-290"
    },
    {
      "width": 1,
      "source": "CWE-294",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-294",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-295",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-296",
      "target": "CWE-295"
    },
    {
      "width": 1,
      "source": "CWE-296",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-297",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-297",
      "target": "CWE-295"
    },
    {
      "width": 1,
      "source": "CWE-298",
      "target": "CWE-295"
    },
    {
      "width": 1,
      "source": "CWE-298",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-672",
      "target": "CWE-666"
    },
    {
      "width": 1,
      "source": "CWE-299",
      "target": "CWE-295"
    },
    {
      "width": 1,
      "source": "CWE-299",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-30",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-300",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-301",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-302",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-302",
      "target": "CWE-807"
    },
    {
      "width": 1,
      "source": "CWE-807",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-303",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-304",
      "target": "CWE-303"
    },
    {
      "width": 1,
      "source": "CWE-304",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-305",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-307",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-307",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-307",
      "target": "CWE-799"
    },
    {
      "width": 1,
      "source": "CWE-799",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-308",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-308",
      "target": "CWE-654"
    },
    {
      "width": 1,
      "source": "CWE-654",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-654",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-309",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-309",
      "target": "CWE-654"
    },
    {
      "width": 1,
      "source": "CWE-31",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-311",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-312",
      "target": "CWE-311"
    },
    {
      "width": 1,
      "source": "CWE-312",
      "target": "CWE-922"
    },
    {
      "width": 1,
      "source": "CWE-922",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-313",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-314",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-315",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-316",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-317",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-318",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-319",
      "target": "CWE-311"
    },
    {
      "width": 1,
      "source": "CWE-32",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-321",
      "target": "CWE-798"
    },
    {
      "width": 1,
      "source": "CWE-322",
      "target": "CWE-306"
    },
    {
      "width": 1,
      "source": "CWE-323",
      "target": "CWE-344"
    },
    {
      "width": 1,
      "source": "CWE-344",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-324",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-325",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-326",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-328",
      "target": "CWE-326"
    },
    {
      "width": 1,
      "source": "CWE-328",
      "target": "CWE-327"
    },
    {
      "width": 1,
      "source": "CWE-329",
      "target": "CWE-1204"
    },
    {
      "width": 1,
      "source": "CWE-329",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-33",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-331",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-332",
      "target": "CWE-331"
    },
    {
      "width": 1,
      "source": "CWE-333",
      "target": "CWE-331"
    },
    {
      "width": 1,
      "source": "CWE-333",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-334",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-335",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-336",
      "target": "CWE-335"
    },
    {
      "width": 1,
      "source": "CWE-337",
      "target": "CWE-335"
    },
    {
      "width": 1,
      "source": "CWE-338",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-339",
      "target": "CWE-335"
    },
    {
      "width": 1,
      "source": "CWE-34",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-340",
      "target": "CWE-330"
    },
    {
      "width": 1,
      "source": "CWE-341",
      "target": "CWE-340"
    },
    {
      "width": 1,
      "source": "CWE-342",
      "target": "CWE-340"
    },
    {
      "width": 1,
      "source": "CWE-343",
      "target": "CWE-340"
    },
    {
      "width": 1,
      "source": "CWE-347",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-348",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-349",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-35",
      "target": "CWE-23"
    },
    {
      "width": 1,
      "source": "CWE-350",
      "target": "CWE-290"
    },
    {
      "width": 1,
      "source": "CWE-350",
      "target": "CWE-807"
    },
    {
      "width": 1,
      "source": "CWE-351",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-352",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-353",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-354",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-354",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-356",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-357",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-358",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-358",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-359",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-36",
      "target": "CWE-22"
    },
    {
      "width": 1,
      "source": "CWE-360",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-363",
      "target": "CWE-367"
    },
    {
      "width": 1,
      "source": "CWE-367",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-364",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-366",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-366",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-368",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-369",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-37",
      "target": "CWE-36"
    },
    {
      "width": 1,
      "source": "CWE-37",
      "target": "CWE-160"
    },
    {
      "width": 1,
      "source": "CWE-370",
      "target": "CWE-299"
    },
    {
      "width": 1,
      "source": "CWE-372",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-374",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-375",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-377",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-378",
      "target": "CWE-377"
    },
    {
      "width": 1,
      "source": "CWE-379",
      "target": "CWE-377"
    },
    {
      "width": 1,
      "source": "CWE-38",
      "target": "CWE-36"
    },
    {
      "width": 1,
      "source": "CWE-382",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-383",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-384",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-385",
      "target": "CWE-514"
    },
    {
      "width": 1,
      "source": "CWE-514",
      "target": "CWE-1229"
    },
    {
      "width": 1,
      "source": "CWE-386",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-39",
      "target": "CWE-36"
    },
    {
      "width": 1,
      "source": "CWE-390",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-391",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-391",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-392",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-392",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-392",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-393",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-393",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-394",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-395",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-395",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-396",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-396",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-396",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-397",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-397",
      "target": "CWE-221"
    },
    {
      "width": 1,
      "source": "CWE-397",
      "target": "CWE-703"
    },
    {
      "width": 1,
      "source": "CWE-40",
      "target": "CWE-36"
    },
    {
      "width": 1,
      "source": "CWE-401",
      "target": "CWE-772"
    },
    {
      "width": 1,
      "source": "CWE-401",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-402",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-403",
      "target": "CWE-402"
    },
    {
      "width": 1,
      "source": "CWE-406",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-408",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-408",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-409",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-41",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-410",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-412",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-413",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-414",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-415",
      "target": "CWE-825"
    },
    {
      "width": 1,
      "source": "CWE-415",
      "target": "CWE-1341"
    },
    {
      "width": 1,
      "source": "CWE-415",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-415",
      "target": "CWE-666"
    },
    {
      "width": 1,
      "source": "CWE-825",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-825",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-666",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-416",
      "target": "CWE-825"
    },
    {
      "width": 1,
      "source": "CWE-416",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-419",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-42",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-42",
      "target": "CWE-162"
    },
    {
      "width": 1,
      "source": "CWE-421",
      "target": "CWE-420"
    },
    {
      "width": 1,
      "source": "CWE-421",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-422",
      "target": "CWE-420"
    },
    {
      "width": 1,
      "source": "CWE-422",
      "target": "CWE-360"
    },
    {
      "width": 1,
      "source": "CWE-424",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-424",
      "target": "CWE-638"
    },
    {
      "width": 1,
      "source": "CWE-638",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-638",
      "target": "CWE-862"
    },
    {
      "width": 1,
      "source": "CWE-425",
      "target": "CWE-862"
    },
    {
      "width": 1,
      "source": "CWE-425",
      "target": "CWE-288"
    },
    {
      "width": 1,
      "source": "CWE-425",
      "target": "CWE-424"
    },
    {
      "width": 1,
      "source": "CWE-426",
      "target": "CWE-642"
    },
    {
      "width": 1,
      "source": "CWE-426",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-426",
      "target": "CWE-673"
    },
    {
      "width": 1,
      "source": "CWE-673",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-427",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-428",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-43",
      "target": "CWE-42"
    },
    {
      "width": 1,
      "source": "CWE-43",
      "target": "CWE-163"
    },
    {
      "width": 1,
      "source": "CWE-430",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-431",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-432",
      "target": "CWE-364"
    },
    {
      "width": 1,
      "source": "CWE-433",
      "target": "CWE-219"
    },
    {
      "width": 1,
      "source": "CWE-434",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-437",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-439",
      "target": "CWE-435"
    },
    {
      "width": 1,
      "source": "CWE-44",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-440",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-444",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-446",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-447",
      "target": "CWE-446"
    },
    {
      "width": 1,
      "source": "CWE-447",
      "target": "CWE-671"
    },
    {
      "width": 1,
      "source": "CWE-671",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-448",
      "target": "CWE-446"
    },
    {
      "width": 1,
      "source": "CWE-449",
      "target": "CWE-446"
    },
    {
      "width": 1,
      "source": "CWE-45",
      "target": "CWE-44"
    },
    {
      "width": 1,
      "source": "CWE-45",
      "target": "CWE-165"
    },
    {
      "width": 1,
      "source": "CWE-450",
      "target": "CWE-357"
    },
    {
      "width": 1,
      "source": "CWE-453",
      "target": "CWE-1188"
    },
    {
      "width": 1,
      "source": "CWE-454",
      "target": "CWE-1419"
    },
    {
      "width": 1,
      "source": "CWE-455",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-455",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-455",
      "target": "CWE-636"
    },
    {
      "width": 1,
      "source": "CWE-636",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-636",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-456",
      "target": "CWE-909"
    },
    {
      "width": 1,
      "source": "CWE-456",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-457",
      "target": "CWE-908"
    },
    {
      "width": 1,
      "source": "CWE-457",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-908",
      "target": "CWE-665"
    },
    {
      "width": 1,
      "source": "CWE-46",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-46",
      "target": "CWE-162"
    },
    {
      "width": 1,
      "source": "CWE-460",
      "target": "CWE-459"
    },
    {
      "width": 1,
      "source": "CWE-460",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-462",
      "target": "CWE-694"
    },
    {
      "width": 1,
      "source": "CWE-463",
      "target": "CWE-707"
    },
    {
      "width": 1,
      "source": "CWE-464",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-466",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-466",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-467",
      "target": "CWE-131"
    },
    {
      "width": 1,
      "source": "CWE-468",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-469",
      "target": "CWE-682"
    },
    {
      "width": 1,
      "source": "CWE-47",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-470",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-470",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-470",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-472",
      "target": "CWE-642"
    },
    {
      "width": 1,
      "source": "CWE-472",
      "target": "CWE-471"
    },
    {
      "width": 1,
      "source": "CWE-473",
      "target": "CWE-471"
    },
    {
      "width": 1,
      "source": "CWE-474",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-475",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-476",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-476",
      "target": "CWE-754"
    },
    {
      "width": 1,
      "source": "CWE-477",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-478",
      "target": "CWE-1023"
    },
    {
      "width": 1,
      "source": "CWE-479",
      "target": "CWE-828"
    },
    {
      "width": 1,
      "source": "CWE-479",
      "target": "CWE-663"
    },
    {
      "width": 1,
      "source": "CWE-828",
      "target": "CWE-364"
    },
    {
      "width": 1,
      "source": "CWE-663",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-48",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-480",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-670",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-481",
      "target": "CWE-480"
    },
    {
      "width": 1,
      "source": "CWE-482",
      "target": "CWE-480"
    },
    {
      "width": 1,
      "source": "CWE-483",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-484",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-484",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-486",
      "target": "CWE-1025"
    },
    {
      "width": 1,
      "source": "CWE-487",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-488",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-49",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-49",
      "target": "CWE-162"
    },
    {
      "width": 1,
      "source": "CWE-491",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-492",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-493",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-494",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-494",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-495",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-496",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-498",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-499",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-5",
      "target": "CWE-319"
    },
    {
      "width": 1,
      "source": "CWE-50",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-50",
      "target": "CWE-161"
    },
    {
      "width": 1,
      "source": "CWE-500",
      "target": "CWE-493"
    },
    {
      "width": 1,
      "source": "CWE-501",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-502",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-506",
      "target": "CWE-912"
    },
    {
      "width": 1,
      "source": "CWE-912",
      "target": "CWE-684"
    },
    {
      "width": 1,
      "source": "CWE-507",
      "target": "CWE-506"
    },
    {
      "width": 1,
      "source": "CWE-508",
      "target": "CWE-507"
    },
    {
      "width": 1,
      "source": "CWE-509",
      "target": "CWE-507"
    },
    {
      "width": 1,
      "source": "CWE-51",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-510",
      "target": "CWE-506"
    },
    {
      "width": 1,
      "source": "CWE-511",
      "target": "CWE-506"
    },
    {
      "width": 1,
      "source": "CWE-512",
      "target": "CWE-506"
    },
    {
      "width": 1,
      "source": "CWE-515",
      "target": "CWE-514"
    },
    {
      "width": 1,
      "source": "CWE-52",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-52",
      "target": "CWE-163"
    },
    {
      "width": 1,
      "source": "CWE-520",
      "target": "CWE-266"
    },
    {
      "width": 1,
      "source": "CWE-523",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-524",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-525",
      "target": "CWE-524"
    },
    {
      "width": 1,
      "source": "CWE-526",
      "target": "CWE-312"
    },
    {
      "width": 1,
      "source": "CWE-527",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-528",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-529",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-53",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-53",
      "target": "CWE-165"
    },
    {
      "width": 1,
      "source": "CWE-530",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-531",
      "target": "CWE-540"
    },
    {
      "width": 1,
      "source": "CWE-540",
      "target": "CWE-538"
    },
    {
      "width": 1,
      "source": "CWE-532",
      "target": "CWE-538"
    },
    {
      "width": 1,
      "source": "CWE-532",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-538",
      "target": "CWE-200"
    },
    {
      "width": 1,
      "source": "CWE-535",
      "target": "CWE-211"
    },
    {
      "width": 1,
      "source": "CWE-536",
      "target": "CWE-211"
    },
    {
      "width": 1,
      "source": "CWE-537",
      "target": "CWE-211"
    },
    {
      "width": 1,
      "source": "CWE-539",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-54",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-54",
      "target": "CWE-162"
    },
    {
      "width": 1,
      "source": "CWE-541",
      "target": "CWE-540"
    },
    {
      "width": 1,
      "source": "CWE-543",
      "target": "CWE-820"
    },
    {
      "width": 1,
      "source": "CWE-543",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-544",
      "target": "CWE-755"
    },
    {
      "width": 1,
      "source": "CWE-546",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-547",
      "target": "CWE-1078"
    },
    {
      "width": 1,
      "source": "CWE-548",
      "target": "CWE-497"
    },
    {
      "width": 1,
      "source": "CWE-549",
      "target": "CWE-522"
    },
    {
      "width": 1,
      "source": "CWE-55",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-550",
      "target": "CWE-209"
    },
    {
      "width": 1,
      "source": "CWE-551",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-551",
      "target": "CWE-696"
    },
    {
      "width": 1,
      "source": "CWE-553",
      "target": "CWE-552"
    },
    {
      "width": 1,
      "source": "CWE-554",
      "target": "CWE-1173"
    },
    {
      "width": 1,
      "source": "CWE-555",
      "target": "CWE-260"
    },
    {
      "width": 1,
      "source": "CWE-556",
      "target": "CWE-266"
    },
    {
      "width": 1,
      "source": "CWE-558",
      "target": "CWE-663"
    },
    {
      "width": 1,
      "source": "CWE-56",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-56",
      "target": "CWE-155"
    },
    {
      "width": 1,
      "source": "CWE-560",
      "target": "CWE-687"
    },
    {
      "width": 1,
      "source": "CWE-687",
      "target": "CWE-628"
    },
    {
      "width": 1,
      "source": "CWE-561",
      "target": "CWE-1164"
    },
    {
      "width": 1,
      "source": "CWE-562",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-563",
      "target": "CWE-1164"
    },
    {
      "width": 1,
      "source": "CWE-564",
      "target": "CWE-89"
    },
    {
      "width": 1,
      "source": "CWE-89",
      "target": "CWE-943"
    },
    {
      "width": 1,
      "source": "CWE-89",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-565",
      "target": "CWE-642"
    },
    {
      "width": 1,
      "source": "CWE-565",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-565",
      "target": "CWE-602"
    },
    {
      "width": 1,
      "source": "CWE-602",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-566",
      "target": "CWE-639"
    },
    {
      "width": 1,
      "source": "CWE-639",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-639",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-567",
      "target": "CWE-820"
    },
    {
      "width": 1,
      "source": "CWE-567",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-568",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-568",
      "target": "CWE-459"
    },
    {
      "width": 1,
      "source": "CWE-57",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-570",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-571",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-572",
      "target": "CWE-821"
    },
    {
      "width": 1,
      "source": "CWE-574",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-574",
      "target": "CWE-821"
    },
    {
      "width": 1,
      "source": "CWE-575",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-576",
      "target": "CWE-695"
    },
    {
      "width": 1,
      "source": "CWE-577",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-578",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-579",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-58",
      "target": "CWE-41"
    },
    {
      "width": 1,
      "source": "CWE-580",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-580",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-581",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-581",
      "target": "CWE-697"
    },
    {
      "width": 1,
      "source": "CWE-582",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-583",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-584",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-585",
      "target": "CWE-1071"
    },
    {
      "width": 1,
      "source": "CWE-586",
      "target": "CWE-1076"
    },
    {
      "width": 1,
      "source": "CWE-587",
      "target": "CWE-344"
    },
    {
      "width": 1,
      "source": "CWE-587",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-588",
      "target": "CWE-704"
    },
    {
      "width": 1,
      "source": "CWE-588",
      "target": "CWE-758"
    },
    {
      "width": 1,
      "source": "CWE-589",
      "target": "CWE-474"
    },
    {
      "width": 1,
      "source": "CWE-590",
      "target": "CWE-762"
    },
    {
      "width": 1,
      "source": "CWE-762",
      "target": "CWE-763"
    },
    {
      "width": 1,
      "source": "CWE-762",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-591",
      "target": "CWE-413"
    },
    {
      "width": 1,
      "source": "CWE-593",
      "target": "CWE-666"
    },
    {
      "width": 1,
      "source": "CWE-593",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-594",
      "target": "CWE-710"
    },
    {
      "width": 1,
      "source": "CWE-597",
      "target": "CWE-595"
    },
    {
      "width": 1,
      "source": "CWE-597",
      "target": "CWE-480"
    },
    {
      "width": 1,
      "source": "CWE-598",
      "target": "CWE-201"
    },
    {
      "width": 1,
      "source": "CWE-599",
      "target": "CWE-295"
    },
    {
      "width": 1,
      "source": "CWE-6",
      "target": "CWE-334"
    },
    {
      "width": 1,
      "source": "CWE-600",
      "target": "CWE-248"
    },
    {
      "width": 1,
      "source": "CWE-601",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-603",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-603",
      "target": "CWE-602"
    },
    {
      "width": 1,
      "source": "CWE-605",
      "target": "CWE-675"
    },
    {
      "width": 1,
      "source": "CWE-605",
      "target": "CWE-666"
    },
    {
      "width": 1,
      "source": "CWE-606",
      "target": "CWE-1284"
    },
    {
      "width": 1,
      "source": "CWE-607",
      "target": "CWE-471"
    },
    {
      "width": 1,
      "source": "CWE-608",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-609",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-61",
      "target": "CWE-59"
    },
    {
      "width": 1,
      "source": "CWE-611",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-612",
      "target": "CWE-1230"
    },
    {
      "width": 1,
      "source": "CWE-613",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-614",
      "target": "CWE-319"
    },
    {
      "width": 1,
      "source": "CWE-615",
      "target": "CWE-540"
    },
    {
      "width": 1,
      "source": "CWE-616",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-617",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-618",
      "target": "CWE-749"
    },
    {
      "width": 1,
      "source": "CWE-749",
      "target": "CWE-284"
    },
    {
      "width": 1,
      "source": "CWE-619",
      "target": "CWE-402"
    },
    {
      "width": 1,
      "source": "CWE-62",
      "target": "CWE-59"
    },
    {
      "width": 1,
      "source": "CWE-620",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-621",
      "target": "CWE-914"
    },
    {
      "width": 1,
      "source": "CWE-914",
      "target": "CWE-99"
    },
    {
      "width": 1,
      "source": "CWE-914",
      "target": "CWE-913"
    },
    {
      "width": 1,
      "source": "CWE-622",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-623",
      "target": "CWE-267"
    },
    {
      "width": 1,
      "source": "CWE-624",
      "target": "CWE-77"
    },
    {
      "width": 1,
      "source": "CWE-77",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-625",
      "target": "CWE-185"
    },
    {
      "width": 1,
      "source": "CWE-626",
      "target": "CWE-147"
    },
    {
      "width": 1,
      "source": "CWE-626",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-627",
      "target": "CWE-914"
    },
    {
      "width": 1,
      "source": "CWE-628",
      "target": "CWE-573"
    },
    {
      "width": 1,
      "source": "CWE-637",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-64",
      "target": "CWE-59"
    },
    {
      "width": 1,
      "source": "CWE-640",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-640",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-641",
      "target": "CWE-99"
    },
    {
      "width": 1,
      "source": "CWE-99",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-643",
      "target": "CWE-943"
    },
    {
      "width": 1,
      "source": "CWE-643",
      "target": "CWE-91"
    },
    {
      "width": 1,
      "source": "CWE-943",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-91",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-644",
      "target": "CWE-116"
    },
    {
      "width": 1,
      "source": "CWE-645",
      "target": "CWE-287"
    },
    {
      "width": 1,
      "source": "CWE-646",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-647",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-648",
      "target": "CWE-269"
    },
    {
      "width": 1,
      "source": "CWE-649",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-65",
      "target": "CWE-59"
    },
    {
      "width": 1,
      "source": "CWE-650",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-651",
      "target": "CWE-538"
    },
    {
      "width": 1,
      "source": "CWE-652",
      "target": "CWE-943"
    },
    {
      "width": 1,
      "source": "CWE-652",
      "target": "CWE-91"
    },
    {
      "width": 1,
      "source": "CWE-655",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-655",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-656",
      "target": "CWE-657"
    },
    {
      "width": 1,
      "source": "CWE-656",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-66",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-67",
      "target": "CWE-66"
    },
    {
      "width": 1,
      "source": "CWE-674",
      "target": "CWE-834"
    },
    {
      "width": 1,
      "source": "CWE-676",
      "target": "CWE-1177"
    },
    {
      "width": 1,
      "source": "CWE-680",
      "target": "CWE-190"
    },
    {
      "width": 1,
      "source": "CWE-683",
      "target": "CWE-628"
    },
    {
      "width": 1,
      "source": "CWE-685",
      "target": "CWE-628"
    },
    {
      "width": 1,
      "source": "CWE-686",
      "target": "CWE-628"
    },
    {
      "width": 1,
      "source": "CWE-688",
      "target": "CWE-628"
    },
    {
      "width": 1,
      "source": "CWE-689",
      "target": "CWE-362"
    },
    {
      "width": 1,
      "source": "CWE-69",
      "target": "CWE-66"
    },
    {
      "width": 1,
      "source": "CWE-690",
      "target": "CWE-252"
    },
    {
      "width": 1,
      "source": "CWE-692",
      "target": "CWE-184"
    },
    {
      "width": 1,
      "source": "CWE-698",
      "target": "CWE-705"
    },
    {
      "width": 1,
      "source": "CWE-698",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-7",
      "target": "CWE-756"
    },
    {
      "width": 1,
      "source": "CWE-708",
      "target": "CWE-282"
    },
    {
      "width": 1,
      "source": "CWE-72",
      "target": "CWE-66"
    },
    {
      "width": 1,
      "source": "CWE-75",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-757",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-759",
      "target": "CWE-916"
    },
    {
      "width": 1,
      "source": "CWE-916",
      "target": "CWE-328"
    },
    {
      "width": 1,
      "source": "CWE-916",
      "target": "CWE-327"
    },
    {
      "width": 1,
      "source": "CWE-76",
      "target": "CWE-75"
    },
    {
      "width": 1,
      "source": "CWE-760",
      "target": "CWE-916"
    },
    {
      "width": 1,
      "source": "CWE-761",
      "target": "CWE-763"
    },
    {
      "width": 1,
      "source": "CWE-761",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-763",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-764",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-764",
      "target": "CWE-675"
    },
    {
      "width": 1,
      "source": "CWE-764",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-765",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-765",
      "target": "CWE-675"
    },
    {
      "width": 1,
      "source": "CWE-766",
      "target": "CWE-732"
    },
    {
      "width": 1,
      "source": "CWE-766",
      "target": "CWE-1061"
    },
    {
      "width": 1,
      "source": "CWE-767",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-768",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-771",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-773",
      "target": "CWE-771"
    },
    {
      "width": 1,
      "source": "CWE-774",
      "target": "CWE-770"
    },
    {
      "width": 1,
      "source": "CWE-775",
      "target": "CWE-772"
    },
    {
      "width": 1,
      "source": "CWE-775",
      "target": "CWE-404"
    },
    {
      "width": 1,
      "source": "CWE-776",
      "target": "CWE-674"
    },
    {
      "width": 1,
      "source": "CWE-776",
      "target": "CWE-405"
    },
    {
      "width": 1,
      "source": "CWE-777",
      "target": "CWE-625"
    },
    {
      "width": 1,
      "source": "CWE-778",
      "target": "CWE-223"
    },
    {
      "width": 1,
      "source": "CWE-778",
      "target": "CWE-693"
    },
    {
      "width": 1,
      "source": "CWE-779",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-78",
      "target": "CWE-77"
    },
    {
      "width": 1,
      "source": "CWE-78",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-780",
      "target": "CWE-327"
    },
    {
      "width": 1,
      "source": "CWE-781",
      "target": "CWE-1285"
    },
    {
      "width": 1,
      "source": "CWE-782",
      "target": "CWE-749"
    },
    {
      "width": 1,
      "source": "CWE-783",
      "target": "CWE-670"
    },
    {
      "width": 1,
      "source": "CWE-784",
      "target": "CWE-807"
    },
    {
      "width": 1,
      "source": "CWE-784",
      "target": "CWE-565"
    },
    {
      "width": 1,
      "source": "CWE-785",
      "target": "CWE-676"
    },
    {
      "width": 1,
      "source": "CWE-785",
      "target": "CWE-120"
    },
    {
      "width": 1,
      "source": "CWE-785",
      "target": "CWE-20"
    },
    {
      "width": 1,
      "source": "CWE-789",
      "target": "CWE-770"
    },
    {
      "width": 1,
      "source": "CWE-79",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-790",
      "target": "CWE-138"
    },
    {
      "width": 1,
      "source": "CWE-791",
      "target": "CWE-790"
    },
    {
      "width": 1,
      "source": "CWE-792",
      "target": "CWE-791"
    },
    {
      "width": 1,
      "source": "CWE-793",
      "target": "CWE-792"
    },
    {
      "width": 1,
      "source": "CWE-794",
      "target": "CWE-792"
    },
    {
      "width": 1,
      "source": "CWE-795",
      "target": "CWE-791"
    },
    {
      "width": 1,
      "source": "CWE-796",
      "target": "CWE-795"
    },
    {
      "width": 1,
      "source": "CWE-797",
      "target": "CWE-795"
    },
    {
      "width": 1,
      "source": "CWE-8",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-80",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-804",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-804",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-805",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-806",
      "target": "CWE-805"
    },
    {
      "width": 1,
      "source": "CWE-81",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-82",
      "target": "CWE-83"
    },
    {
      "width": 1,
      "source": "CWE-83",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-822",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-823",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-824",
      "target": "CWE-119"
    },
    {
      "width": 1,
      "source": "CWE-826",
      "target": "CWE-666"
    },
    {
      "width": 1,
      "source": "CWE-827",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-827",
      "target": "CWE-829"
    },
    {
      "width": 1,
      "source": "CWE-829",
      "target": "CWE-669"
    },
    {
      "width": 1,
      "source": "CWE-830",
      "target": "CWE-829"
    },
    {
      "width": 1,
      "source": "CWE-831",
      "target": "CWE-364"
    },
    {
      "width": 1,
      "source": "CWE-832",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-833",
      "target": "CWE-667"
    },
    {
      "width": 1,
      "source": "CWE-833",
      "target": "CWE-662"
    },
    {
      "width": 1,
      "source": "CWE-835",
      "target": "CWE-834"
    },
    {
      "width": 1,
      "source": "CWE-836",
      "target": "CWE-1390"
    },
    {
      "width": 1,
      "source": "CWE-837",
      "target": "CWE-799"
    },
    {
      "width": 1,
      "source": "CWE-838",
      "target": "CWE-116"
    },
    {
      "width": 1,
      "source": "CWE-839",
      "target": "CWE-1023"
    },
    {
      "width": 1,
      "source": "CWE-84",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-841",
      "target": "CWE-691"
    },
    {
      "width": 1,
      "source": "CWE-842",
      "target": "CWE-286"
    },
    {
      "width": 1,
      "source": "CWE-843",
      "target": "CWE-704"
    },
    {
      "width": 1,
      "source": "CWE-85",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-86",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-86",
      "target": "CWE-436"
    },
    {
      "width": 1,
      "source": "CWE-87",
      "target": "CWE-79"
    },
    {
      "width": 1,
      "source": "CWE-88",
      "target": "CWE-77"
    },
    {
      "width": 1,
      "source": "CWE-88",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-9",
      "target": "CWE-266"
    },
    {
      "width": 1,
      "source": "CWE-90",
      "target": "CWE-943"
    },
    {
      "width": 1,
      "source": "CWE-910",
      "target": "CWE-672"
    },
    {
      "width": 1,
      "source": "CWE-911",
      "target": "CWE-664"
    },
    {
      "width": 1,
      "source": "CWE-917",
      "target": "CWE-77"
    },
    {
      "width": 1,
      "source": "CWE-917",
      "target": "CWE-74"
    },
    {
      "width": 1,
      "source": "CWE-918",
      "target": "CWE-441"
    },
    {
      "width": 1,
      "source": "CWE-918",
      "target": "CWE-610"
    },
    {
      "width": 1,
      "source": "CWE-920",
      "target": "CWE-400"
    },
    {
      "width": 1,
      "source": "CWE-921",
      "target": "CWE-922"
    },
    {
      "width": 1,
      "source": "CWE-924",
      "target": "CWE-345"
    },
    {
      "width": 1,
      "source": "CWE-925",
      "target": "CWE-940"
    },
    {
      "width": 1,
      "source": "CWE-940",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-940",
      "target": "CWE-346"
    },
    {
      "width": 1,
      "source": "CWE-926",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-927",
      "target": "CWE-285"
    },
    {
      "width": 1,
      "source": "CWE-927",
      "target": "CWE-668"
    },
    {
      "width": 1,
      "source": "CWE-939",
      "target": "CWE-862"
    },
    {
      "width": 1,
      "source": "CWE-941",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-942",
      "target": "CWE-863"
    },
    {
      "width": 1,
      "source": "CWE-942",
      "target": "CWE-923"
    },
    {
      "width": 1,
      "source": "CWE-942",
      "target": "CWE-183"
    },
    {
      "width": 1,
      "source": "CWE-95",
      "target": "CWE-94"
    },
    {
      "width": 1,
      "source": "CWE-96",
      "target": "CWE-94"
    },
    {
      "width": 1,
      "source": "CWE-97",
      "target": "CWE-96"
    },
    {
      "width": 1,
      "source": "CWE-98",
      "target": "CWE-706"
    },
    {
      "width": 1,
      "source": "CWE-98",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-1",
      "target": "CAPEC-122"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-276"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-434"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1191"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1193"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1220"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1297"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1311"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1314"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1315"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1318"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1320"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1321"
    },
    {
      "source": "CAPEC-1",
      "target": "CWE-1327"
    },
    {
      "source": "CAPEC-122",
      "target": "CWE-269"
    },
    {
      "source": "CAPEC-122",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-122",
      "target": "CWE-1317"
    },
    {
      "source": "CAPEC-10",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-99"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-733"
    },
    {
      "source": "CAPEC-10",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-100",
      "target": "CAPEC-123"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-131"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-129"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-805"
    },
    {
      "source": "CAPEC-100",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-123",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-101",
      "target": "CAPEC-253"
    },
    {
      "source": "CAPEC-101",
      "target": "CWE-97"
    },
    {
      "source": "CAPEC-101",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-101",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-253",
      "target": "CAPEC-175"
    },
    {
      "source": "CAPEC-253",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-102",
      "target": "CAPEC-593"
    },
    {
      "source": "CAPEC-102",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-102",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-102",
      "target": "CWE-523"
    },
    {
      "source": "CAPEC-102",
      "target": "CWE-319"
    },
    {
      "source": "CAPEC-102",
      "target": "CWE-614"
    },
    {
      "source": "CAPEC-593",
      "target": "CAPEC-21"
    },
    {
      "source": "CAPEC-593",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-103",
      "target": "CAPEC-173"
    },
    {
      "source": "CAPEC-103",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-173",
      "target": "CWE-451"
    },
    {
      "source": "CAPEC-104",
      "target": "CAPEC-233"
    },
    {
      "source": "CAPEC-104",
      "target": "CWE-250"
    },
    {
      "source": "CAPEC-104",
      "target": "CWE-638"
    },
    {
      "source": "CAPEC-104",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-104",
      "target": "CWE-116"
    },
    {
      "source": "CAPEC-104",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-233",
      "target": "CWE-269"
    },
    {
      "source": "CAPEC-233",
      "target": "CWE-1264"
    },
    {
      "source": "CAPEC-233",
      "target": "CWE-1311"
    },
    {
      "source": "CAPEC-105",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-105",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-105",
      "target": "CWE-113"
    },
    {
      "source": "CAPEC-105",
      "target": "CWE-138"
    },
    {
      "source": "CAPEC-105",
      "target": "CWE-436"
    },
    {
      "source": "CAPEC-220",
      "target": "CAPEC-272"
    },
    {
      "source": "CAPEC-220",
      "target": "CWE-757"
    },
    {
      "source": "CAPEC-107",
      "target": "CAPEC-593"
    },
    {
      "source": "CAPEC-107",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-107",
      "target": "CWE-648"
    },
    {
      "source": "CAPEC-108",
      "target": "CAPEC-66"
    },
    {
      "source": "CAPEC-108",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-108",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-108",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-108",
      "target": "CWE-78"
    },
    {
      "source": "CAPEC-108",
      "target": "CWE-114"
    },
    {
      "source": "CAPEC-66",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-66",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-66",
      "target": "CWE-1286"
    },
    {
      "source": "CAPEC-109",
      "target": "CAPEC-66"
    },
    {
      "source": "CAPEC-109",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-109",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-109",
      "target": "CWE-564"
    },
    {
      "source": "CAPEC-11",
      "target": "CAPEC-635"
    },
    {
      "source": "CAPEC-11",
      "target": "CWE-430"
    },
    {
      "source": "CAPEC-635",
      "target": "CAPEC-165"
    },
    {
      "source": "CAPEC-635",
      "target": "CWE-162"
    },
    {
      "source": "CAPEC-110",
      "target": "CAPEC-66"
    },
    {
      "source": "CAPEC-110",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-110",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-111",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-111",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-111",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-111",
      "target": "CWE-352"
    },
    {
      "source": "CAPEC-212",
      "target": "CWE-1242"
    },
    {
      "source": "CAPEC-212",
      "target": "CWE-1246"
    },
    {
      "source": "CAPEC-212",
      "target": "CWE-1281"
    },
    {
      "source": "CAPEC-112",
      "target": "CWE-330"
    },
    {
      "source": "CAPEC-112",
      "target": "CWE-326"
    },
    {
      "source": "CAPEC-112",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-113",
      "target": "CWE-1192"
    },
    {
      "source": "CAPEC-114",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-114",
      "target": "CWE-1244"
    },
    {
      "source": "CAPEC-115",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-116",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-116",
      "target": "CWE-1243"
    },
    {
      "source": "CAPEC-117",
      "target": "CWE-319"
    },
    {
      "source": "CAPEC-12",
      "target": "CAPEC-216"
    },
    {
      "source": "CAPEC-12",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-12",
      "target": "CWE-306"
    },
    {
      "source": "CAPEC-216",
      "target": "CWE-306"
    },
    {
      "source": "CAPEC-120",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-177"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-183"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-120",
      "target": "CWE-692"
    },
    {
      "source": "CAPEC-267",
      "target": "CAPEC-153"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-267",
      "target": "CWE-692"
    },
    {
      "source": "CAPEC-121",
      "target": "CAPEC-113"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-489"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1209"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1259"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1267"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1270"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1294"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1295"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1296"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1302"
    },
    {
      "source": "CAPEC-121",
      "target": "CWE-1313"
    },
    {
      "source": "CAPEC-124",
      "target": "CWE-1189"
    },
    {
      "source": "CAPEC-124",
      "target": "CWE-1331"
    },
    {
      "source": "CAPEC-125",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-125",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-126",
      "target": "CAPEC-153"
    },
    {
      "source": "CAPEC-126",
      "target": "CWE-22"
    },
    {
      "source": "CAPEC-153",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-127",
      "target": "CAPEC-54"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-424"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-425"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-288"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-276"
    },
    {
      "source": "CAPEC-127",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-54",
      "target": "CAPEC-116"
    },
    {
      "source": "CAPEC-54",
      "target": "CWE-209"
    },
    {
      "source": "CAPEC-128",
      "target": "CAPEC-153"
    },
    {
      "source": "CAPEC-128",
      "target": "CWE-682"
    },
    {
      "source": "CAPEC-129",
      "target": "CWE-682"
    },
    {
      "source": "CAPEC-129",
      "target": "CWE-822"
    },
    {
      "source": "CAPEC-129",
      "target": "CWE-823"
    },
    {
      "source": "CAPEC-13",
      "target": "CAPEC-77"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-13",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-77",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-94"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-96"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-473"
    },
    {
      "source": "CAPEC-77",
      "target": "CWE-1321"
    },
    {
      "source": "CAPEC-130",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-130",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-130",
      "target": "CWE-1325"
    },
    {
      "source": "CAPEC-131",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-132",
      "target": "CAPEC-159"
    },
    {
      "source": "CAPEC-132",
      "target": "CWE-59"
    },
    {
      "source": "CAPEC-159",
      "target": "CAPEC-154"
    },
    {
      "source": "CAPEC-159",
      "target": "CWE-706"
    },
    {
      "source": "CAPEC-133",
      "target": "CAPEC-113"
    },
    {
      "source": "CAPEC-133",
      "target": "CWE-912"
    },
    {
      "source": "CAPEC-134",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-134",
      "target": "CWE-150"
    },
    {
      "source": "CAPEC-137",
      "target": "CWE-88"
    },
    {
      "source": "CAPEC-135",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-135",
      "target": "CWE-134"
    },
    {
      "source": "CAPEC-135",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-135",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-136",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-136",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-136",
      "target": "CWE-90"
    },
    {
      "source": "CAPEC-136",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-248",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-138",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-138",
      "target": "CWE-470"
    },
    {
      "source": "CAPEC-139",
      "target": "CAPEC-126"
    },
    {
      "source": "CAPEC-139",
      "target": "CWE-23"
    },
    {
      "source": "CAPEC-14",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-14",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-140",
      "target": "CAPEC-74"
    },
    {
      "source": "CAPEC-140",
      "target": "CWE-372"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-372"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-315"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-1245"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-1253"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-1265"
    },
    {
      "source": "CAPEC-74",
      "target": "CWE-1271"
    },
    {
      "source": "CAPEC-141",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-141",
      "target": "CWE-348"
    },
    {
      "source": "CAPEC-141",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-141",
      "target": "CWE-349"
    },
    {
      "source": "CAPEC-141",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-161",
      "target": "CWE-923"
    },
    {
      "source": "CAPEC-142",
      "target": "CAPEC-141"
    },
    {
      "source": "CAPEC-142",
      "target": "CWE-348"
    },
    {
      "source": "CAPEC-142",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-142",
      "target": "CWE-349"
    },
    {
      "source": "CAPEC-142",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-142",
      "target": "CWE-350"
    },
    {
      "source": "CAPEC-143",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-143",
      "target": "CWE-425"
    },
    {
      "source": "CAPEC-150",
      "target": "CAPEC-116"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-552"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1239"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1258"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1266"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1272"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1323"
    },
    {
      "source": "CAPEC-150",
      "target": "CWE-1330"
    },
    {
      "source": "CAPEC-144",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-144",
      "target": "CWE-425"
    },
    {
      "source": "CAPEC-145",
      "target": "CAPEC-148"
    },
    {
      "source": "CAPEC-145",
      "target": "CWE-354"
    },
    {
      "source": "CAPEC-148",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-146",
      "target": "CAPEC-271"
    },
    {
      "source": "CAPEC-146",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-146",
      "target": "CWE-472"
    },
    {
      "source": "CAPEC-271",
      "target": "CAPEC-176"
    },
    {
      "source": "CAPEC-271",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-147",
      "target": "CAPEC-528"
    },
    {
      "source": "CAPEC-147",
      "target": "CWE-400"
    },
    {
      "source": "CAPEC-147",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-528",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-528",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-149",
      "target": "CAPEC-497"
    },
    {
      "source": "CAPEC-149",
      "target": "CWE-377"
    },
    {
      "source": "CAPEC-497",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-497",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-15",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-146"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-78"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-185"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-93"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-140"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-157"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-138"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-154"
    },
    {
      "source": "CAPEC-15",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-151",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-154",
      "target": "CWE-451"
    },
    {
      "source": "CAPEC-155",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-155",
      "target": "CWE-377"
    },
    {
      "source": "CAPEC-157",
      "target": "CAPEC-117"
    },
    {
      "source": "CAPEC-157",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-158",
      "target": "CAPEC-157"
    },
    {
      "source": "CAPEC-158",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-16",
      "target": "CAPEC-49"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-16",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-49",
      "target": "CAPEC-112"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-257"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-49",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-160",
      "target": "CAPEC-113"
    },
    {
      "source": "CAPEC-160",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-162",
      "target": "CAPEC-77"
    },
    {
      "source": "CAPEC-162",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-163",
      "target": "CAPEC-98"
    },
    {
      "source": "CAPEC-163",
      "target": "CWE-451"
    },
    {
      "source": "CAPEC-98",
      "target": "CAPEC-151"
    },
    {
      "source": "CAPEC-98",
      "target": "CWE-451"
    },
    {
      "source": "CAPEC-164",
      "target": "CAPEC-98"
    },
    {
      "source": "CAPEC-164",
      "target": "CWE-451"
    },
    {
      "source": "CAPEC-166",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-166",
      "target": "CWE-306"
    },
    {
      "source": "CAPEC-166",
      "target": "CWE-1221"
    },
    {
      "source": "CAPEC-166",
      "target": "CWE-1232"
    },
    {
      "source": "CAPEC-167",
      "target": "CAPEC-188"
    },
    {
      "source": "CAPEC-167",
      "target": "CWE-1323"
    },
    {
      "source": "CAPEC-188",
      "target": "CWE-1278"
    },
    {
      "source": "CAPEC-168",
      "target": "CAPEC-636"
    },
    {
      "source": "CAPEC-168",
      "target": "CWE-212"
    },
    {
      "source": "CAPEC-168",
      "target": "CWE-69"
    },
    {
      "source": "CAPEC-636",
      "target": "CAPEC-165"
    },
    {
      "source": "CAPEC-636",
      "target": "CWE-506"
    },
    {
      "source": "CAPEC-169",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-17",
      "target": "CAPEC-122"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-272"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-59"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-282"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-270"
    },
    {
      "source": "CAPEC-17",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-170",
      "target": "CAPEC-541"
    },
    {
      "source": "CAPEC-170",
      "target": "CWE-497"
    },
    {
      "source": "CAPEC-541",
      "target": "CAPEC-224"
    },
    {
      "source": "CAPEC-541",
      "target": "CWE-204"
    },
    {
      "source": "CAPEC-541",
      "target": "CWE-205"
    },
    {
      "source": "CAPEC-541",
      "target": "CWE-208"
    },
    {
      "source": "CAPEC-174",
      "target": "CAPEC-182"
    },
    {
      "source": "CAPEC-174",
      "target": "CWE-88"
    },
    {
      "source": "CAPEC-182",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-182",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-182",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-182",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-175",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-176",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-176",
      "target": "CWE-1233"
    },
    {
      "source": "CAPEC-176",
      "target": "CWE-1234"
    },
    {
      "source": "CAPEC-176",
      "target": "CWE-1304"
    },
    {
      "source": "CAPEC-176",
      "target": "CWE-1328"
    },
    {
      "source": "CAPEC-177",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-177",
      "target": "CWE-706"
    },
    {
      "source": "CAPEC-178",
      "target": "CAPEC-182"
    },
    {
      "source": "CAPEC-178",
      "target": "CWE-601"
    },
    {
      "source": "CAPEC-179",
      "target": "CAPEC-554"
    },
    {
      "source": "CAPEC-554",
      "target": "CWE-424"
    },
    {
      "source": "CAPEC-554",
      "target": "CWE-1299"
    },
    {
      "source": "CAPEC-18",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-18",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-18",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-18",
      "target": "CWE-80"
    },
    {
      "source": "CAPEC-591",
      "target": "CAPEC-63"
    },
    {
      "source": "CAPEC-591",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-592",
      "target": "CAPEC-63"
    },
    {
      "source": "CAPEC-592",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-588",
      "target": "CAPEC-63"
    },
    {
      "source": "CAPEC-588",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-588",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-588",
      "target": "CWE-83"
    },
    {
      "source": "CAPEC-180",
      "target": "CAPEC-122"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1190"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1191"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1193"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1220"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1268"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1280"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1297"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1311"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1315"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1318"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1320"
    },
    {
      "source": "CAPEC-180",
      "target": "CWE-1321"
    },
    {
      "source": "CAPEC-181",
      "target": "CAPEC-103"
    },
    {
      "source": "CAPEC-181",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-183",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-183",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-184",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-185",
      "target": "CAPEC-184"
    },
    {
      "source": "CAPEC-185",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-186",
      "target": "CAPEC-184"
    },
    {
      "source": "CAPEC-186",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-187",
      "target": "CAPEC-186"
    },
    {
      "source": "CAPEC-187",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-189",
      "target": "CAPEC-188"
    },
    {
      "source": "CAPEC-189",
      "target": "CWE-203"
    },
    {
      "source": "CAPEC-189",
      "target": "CWE-1255"
    },
    {
      "source": "CAPEC-189",
      "target": "CWE-1300"
    },
    {
      "source": "CAPEC-19",
      "target": "CAPEC-242"
    },
    {
      "source": "CAPEC-19",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-242",
      "target": "CWE-94"
    },
    {
      "source": "CAPEC-190",
      "target": "CAPEC-167"
    },
    {
      "source": "CAPEC-190",
      "target": "CWE-912"
    },
    {
      "source": "CAPEC-191",
      "target": "CAPEC-167"
    },
    {
      "source": "CAPEC-191",
      "target": "CWE-798"
    },
    {
      "source": "CAPEC-192",
      "target": "CWE-326"
    },
    {
      "source": "CAPEC-193",
      "target": "CAPEC-253"
    },
    {
      "source": "CAPEC-193",
      "target": "CWE-98"
    },
    {
      "source": "CAPEC-193",
      "target": "CWE-80"
    },
    {
      "source": "CAPEC-194",
      "target": "CAPEC-151"
    },
    {
      "source": "CAPEC-194",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-195",
      "target": "CAPEC-151"
    },
    {
      "source": "CAPEC-196",
      "target": "CAPEC-21"
    },
    {
      "source": "CAPEC-196",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-196",
      "target": "CWE-664"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-539"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-6"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-664"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-21",
      "target": "CWE-642"
    },
    {
      "source": "CAPEC-197",
      "target": "CAPEC-230"
    },
    {
      "source": "CAPEC-197",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-197",
      "target": "CWE-776"
    },
    {
      "source": "CAPEC-230",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-230",
      "target": "CWE-112"
    },
    {
      "source": "CAPEC-230",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-230",
      "target": "CWE-674"
    },
    {
      "source": "CAPEC-230",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-198",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-198",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-198",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-198",
      "target": "CWE-81"
    },
    {
      "source": "CAPEC-199",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-199",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-199",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-199",
      "target": "CWE-87"
    },
    {
      "source": "CAPEC-2",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-2",
      "target": "CWE-645"
    },
    {
      "source": "CAPEC-20",
      "target": "CAPEC-112"
    },
    {
      "source": "CAPEC-20",
      "target": "CWE-326"
    },
    {
      "source": "CAPEC-20",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-20",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-20",
      "target": "CWE-1204"
    },
    {
      "source": "CAPEC-200",
      "target": "CAPEC-207"
    },
    {
      "source": "CAPEC-207",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-207",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-201",
      "target": "CAPEC-122"
    },
    {
      "source": "CAPEC-201",
      "target": "CAPEC-278"
    },
    {
      "source": "CAPEC-201",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-278",
      "target": "CAPEC-272"
    },
    {
      "source": "CAPEC-278",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-202",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-202",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-22",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-22",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-22",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-22",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-22",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-203",
      "target": "CAPEC-176"
    },
    {
      "source": "CAPEC-203",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-204",
      "target": "CAPEC-167"
    },
    {
      "source": "CAPEC-204",
      "target": "CWE-524"
    },
    {
      "source": "CAPEC-204",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-204",
      "target": "CWE-1239"
    },
    {
      "source": "CAPEC-204",
      "target": "CWE-1258"
    },
    {
      "source": "CAPEC-206",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-206",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-444",
      "target": "CAPEC-438"
    },
    {
      "source": "CAPEC-208",
      "target": "CAPEC-207"
    },
    {
      "source": "CAPEC-208",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-209",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-209",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-209",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-209",
      "target": "CWE-646"
    },
    {
      "source": "CAPEC-215",
      "target": "CAPEC-54"
    },
    {
      "source": "CAPEC-215",
      "target": "CAPEC-28"
    },
    {
      "source": "CAPEC-215",
      "target": "CWE-209"
    },
    {
      "source": "CAPEC-215",
      "target": "CWE-532"
    },
    {
      "source": "CAPEC-28",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-28",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-217",
      "target": "CAPEC-216"
    },
    {
      "source": "CAPEC-217",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-218",
      "target": "CAPEC-148"
    },
    {
      "source": "CAPEC-218",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-219",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-219",
      "target": "CWE-441"
    },
    {
      "source": "CAPEC-219",
      "target": "CWE-610"
    },
    {
      "source": "CAPEC-94",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-94",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-94",
      "target": "CWE-593"
    },
    {
      "source": "CAPEC-94",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-94",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-221",
      "target": "CAPEC-231"
    },
    {
      "source": "CAPEC-221",
      "target": "CAPEC-278"
    },
    {
      "source": "CAPEC-221",
      "target": "CWE-611"
    },
    {
      "source": "CAPEC-231",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-231",
      "target": "CWE-112"
    },
    {
      "source": "CAPEC-231",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-231",
      "target": "CWE-674"
    },
    {
      "source": "CAPEC-231",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-222",
      "target": "CAPEC-103"
    },
    {
      "source": "CAPEC-222",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-224",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-226",
      "target": "CAPEC-196"
    },
    {
      "source": "CAPEC-226",
      "target": "CWE-565"
    },
    {
      "source": "CAPEC-226",
      "target": "CWE-472"
    },
    {
      "source": "CAPEC-227",
      "target": "CWE-400"
    },
    {
      "source": "CAPEC-228",
      "target": "CAPEC-250"
    },
    {
      "source": "CAPEC-228",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-250",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-250",
      "target": "CWE-91"
    },
    {
      "source": "CAPEC-250",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-250",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-250",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-229",
      "target": "CAPEC-231"
    },
    {
      "source": "CAPEC-229",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-23",
      "target": "CAPEC-242"
    },
    {
      "source": "CAPEC-23",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-234",
      "target": "CAPEC-233"
    },
    {
      "source": "CAPEC-234",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-234",
      "target": "CWE-648"
    },
    {
      "source": "CAPEC-237",
      "target": "CAPEC-480"
    },
    {
      "source": "CAPEC-237",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-480",
      "target": "CAPEC-115"
    },
    {
      "source": "CAPEC-480",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-24",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-733"
    },
    {
      "source": "CAPEC-24",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-240",
      "target": "CWE-99"
    },
    {
      "source": "CAPEC-243",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-243",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-243",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-243",
      "target": "CWE-83"
    },
    {
      "source": "CAPEC-244",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-244",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-244",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-244",
      "target": "CWE-83"
    },
    {
      "source": "CAPEC-245",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-245",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-245",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-245",
      "target": "CWE-85"
    },
    {
      "source": "CAPEC-247",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-247",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-247",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-247",
      "target": "CWE-86"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-412"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-567"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-662"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-667"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-833"
    },
    {
      "source": "CAPEC-25",
      "target": "CWE-1322"
    },
    {
      "source": "CAPEC-251",
      "target": "CAPEC-175"
    },
    {
      "source": "CAPEC-251",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-252",
      "target": "CAPEC-251"
    },
    {
      "source": "CAPEC-252",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-256",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-256",
      "target": "CWE-805"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-368"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-363"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-366"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-370"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-362"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-662"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-689"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-667"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-665"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-1223"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-1254"
    },
    {
      "source": "CAPEC-26",
      "target": "CWE-1298"
    },
    {
      "source": "CAPEC-261",
      "target": "CAPEC-54"
    },
    {
      "source": "CAPEC-261",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-263",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-263",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-268",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-268",
      "target": "CWE-117"
    },
    {
      "source": "CAPEC-27",
      "target": "CAPEC-29"
    },
    {
      "source": "CAPEC-27",
      "target": "CWE-367"
    },
    {
      "source": "CAPEC-27",
      "target": "CWE-61"
    },
    {
      "source": "CAPEC-27",
      "target": "CWE-662"
    },
    {
      "source": "CAPEC-27",
      "target": "CWE-689"
    },
    {
      "source": "CAPEC-27",
      "target": "CWE-667"
    },
    {
      "source": "CAPEC-29",
      "target": "CAPEC-26"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-367"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-368"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-366"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-370"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-362"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-662"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-691"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-663"
    },
    {
      "source": "CAPEC-29",
      "target": "CWE-665"
    },
    {
      "source": "CAPEC-270",
      "target": "CAPEC-203"
    },
    {
      "source": "CAPEC-270",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-273",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-273",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-273",
      "target": "CWE-436"
    },
    {
      "source": "CAPEC-273",
      "target": "CWE-444"
    },
    {
      "source": "CAPEC-274",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-274",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-274",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-275",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-275",
      "target": "CWE-350"
    },
    {
      "source": "CAPEC-276",
      "target": "CAPEC-272"
    },
    {
      "source": "CAPEC-276",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-277",
      "target": "CAPEC-272"
    },
    {
      "source": "CAPEC-277",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-279",
      "target": "CAPEC-278"
    },
    {
      "source": "CAPEC-279",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-285",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-285",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-292",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-292",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-287",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-287",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-300",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-300",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-290",
      "target": "CAPEC-309"
    },
    {
      "source": "CAPEC-290",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-309",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-309",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-291",
      "target": "CAPEC-309"
    },
    {
      "source": "CAPEC-291",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-293",
      "target": "CAPEC-309"
    },
    {
      "source": "CAPEC-293",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-294",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-294",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-295",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-295",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-296",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-296",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-297",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-297",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-298",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-298",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-299",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-299",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-3",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-41"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-179"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-183"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-3",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-30",
      "target": "CAPEC-233"
    },
    {
      "source": "CAPEC-30",
      "target": "CWE-270"
    },
    {
      "source": "CAPEC-301",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-301",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-302",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-302",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-303",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-303",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-304",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-304",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-305",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-305",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-306",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-306",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-307",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-307",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-308",
      "target": "CAPEC-300"
    },
    {
      "source": "CAPEC-308",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-31",
      "target": "CAPEC-39"
    },
    {
      "source": "CAPEC-31",
      "target": "CAPEC-157"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-565"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-113"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-539"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-315"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-472"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-31",
      "target": "CWE-642"
    },
    {
      "source": "CAPEC-39",
      "target": "CAPEC-22"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-472"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-565"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-315"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-539"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-39",
      "target": "CWE-233"
    },
    {
      "source": "CAPEC-310",
      "target": "CAPEC-541"
    },
    {
      "source": "CAPEC-310",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-312",
      "target": "CAPEC-224"
    },
    {
      "source": "CAPEC-312",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-313",
      "target": "CAPEC-224"
    },
    {
      "source": "CAPEC-313",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-317",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-317",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-318",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-318",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-319",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-319",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-32",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-32",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-32",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-32",
      "target": "CWE-80"
    },
    {
      "source": "CAPEC-320",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-320",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-321",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-321",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-322",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-322",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-323",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-323",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-324",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-324",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-325",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-325",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-326",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-326",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-327",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-327",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-328",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-328",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-329",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-329",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-33",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-33",
      "target": "CWE-444"
    },
    {
      "source": "CAPEC-330",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-330",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-331",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-331",
      "target": "CWE-204"
    },
    {
      "source": "CAPEC-332",
      "target": "CAPEC-312"
    },
    {
      "source": "CAPEC-332",
      "target": "CWE-204"
    },
    {
      "source": "CAPEC-34",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-34",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-34",
      "target": "CWE-113"
    },
    {
      "source": "CAPEC-34",
      "target": "CWE-138"
    },
    {
      "source": "CAPEC-34",
      "target": "CWE-436"
    },
    {
      "source": "CAPEC-35",
      "target": "CAPEC-636"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-94"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-96"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-95"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-97"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-272"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-59"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-282"
    },
    {
      "source": "CAPEC-35",
      "target": "CWE-270"
    },
    {
      "source": "CAPEC-36",
      "target": "CAPEC-113"
    },
    {
      "source": "CAPEC-36",
      "target": "CWE-306"
    },
    {
      "source": "CAPEC-36",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-36",
      "target": "CWE-695"
    },
    {
      "source": "CAPEC-36",
      "target": "CWE-1242"
    },
    {
      "source": "CAPEC-37",
      "target": "CAPEC-167"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-226"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-525"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-312"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-314"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-315"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-318"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1239"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1258"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1266"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1272"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1278"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1301"
    },
    {
      "source": "CAPEC-37",
      "target": "CWE-1330"
    },
    {
      "source": "CAPEC-38",
      "target": "CAPEC-159"
    },
    {
      "source": "CAPEC-38",
      "target": "CWE-426"
    },
    {
      "source": "CAPEC-38",
      "target": "CWE-427"
    },
    {
      "source": "CAPEC-383",
      "target": "CAPEC-407"
    },
    {
      "source": "CAPEC-383",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-383",
      "target": "CWE-319"
    },
    {
      "source": "CAPEC-383",
      "target": "CWE-419"
    },
    {
      "source": "CAPEC-383",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-407",
      "target": "CAPEC-416"
    },
    {
      "source": "CAPEC-407",
      "target": "CAPEC-410"
    },
    {
      "source": "CAPEC-384",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-384",
      "target": "CWE-471"
    },
    {
      "source": "CAPEC-384",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-384",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-384",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-384",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-385",
      "target": "CAPEC-384"
    },
    {
      "source": "CAPEC-385",
      "target": "CWE-471"
    },
    {
      "source": "CAPEC-385",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-385",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-385",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-385",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-386",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-386",
      "target": "CWE-471"
    },
    {
      "source": "CAPEC-386",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-386",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-386",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-386",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-387",
      "target": "CAPEC-386"
    },
    {
      "source": "CAPEC-387",
      "target": "CWE-471"
    },
    {
      "source": "CAPEC-387",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-387",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-387",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-387",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-388",
      "target": "CAPEC-386"
    },
    {
      "source": "CAPEC-388",
      "target": "CWE-471"
    },
    {
      "source": "CAPEC-388",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-388",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-388",
      "target": "CWE-602"
    },
    {
      "source": "CAPEC-388",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-389",
      "target": "CAPEC-384"
    },
    {
      "source": "CAPEC-389",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-391",
      "target": "CAPEC-390"
    },
    {
      "source": "CAPEC-392",
      "target": "CAPEC-391"
    },
    {
      "source": "CAPEC-393",
      "target": "CAPEC-391"
    },
    {
      "source": "CAPEC-394",
      "target": "CAPEC-391"
    },
    {
      "source": "CAPEC-395",
      "target": "CAPEC-390"
    },
    {
      "source": "CAPEC-397",
      "target": "CAPEC-395"
    },
    {
      "source": "CAPEC-398",
      "target": "CAPEC-395"
    },
    {
      "source": "CAPEC-399",
      "target": "CAPEC-395"
    },
    {
      "source": "CAPEC-4",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-4",
      "target": "CWE-291"
    },
    {
      "source": "CAPEC-4",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-40",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-40",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-400",
      "target": "CAPEC-395"
    },
    {
      "source": "CAPEC-401",
      "target": "CAPEC-440"
    },
    {
      "source": "CAPEC-401",
      "target": "CWE-1263"
    },
    {
      "source": "CAPEC-402",
      "target": "CAPEC-401"
    },
    {
      "source": "CAPEC-402",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-406",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-41",
      "target": "CAPEC-242"
    },
    {
      "source": "CAPEC-41",
      "target": "CAPEC-134"
    },
    {
      "source": "CAPEC-41",
      "target": "CWE-150"
    },
    {
      "source": "CAPEC-41",
      "target": "CWE-88"
    },
    {
      "source": "CAPEC-41",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-412",
      "target": "CAPEC-407"
    },
    {
      "source": "CAPEC-413",
      "target": "CAPEC-407"
    },
    {
      "source": "CAPEC-414",
      "target": "CAPEC-407"
    },
    {
      "source": "CAPEC-415",
      "target": "CAPEC-407"
    },
    {
      "source": "CAPEC-417",
      "target": "CAPEC-416"
    },
    {
      "source": "CAPEC-418",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-42",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-42",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-42",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-42",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-42",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-420",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-421",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-422",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-423",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-424",
      "target": "CAPEC-417"
    },
    {
      "source": "CAPEC-425",
      "target": "CAPEC-416"
    },
    {
      "source": "CAPEC-426",
      "target": "CAPEC-416"
    },
    {
      "source": "CAPEC-427",
      "target": "CAPEC-416"
    },
    {
      "source": "CAPEC-428",
      "target": "CAPEC-427"
    },
    {
      "source": "CAPEC-429",
      "target": "CAPEC-427"
    },
    {
      "source": "CAPEC-43",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-179"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-183"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-78"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-43",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-433",
      "target": "CAPEC-427"
    },
    {
      "source": "CAPEC-434",
      "target": "CAPEC-427"
    },
    {
      "source": "CAPEC-435",
      "target": "CAPEC-427"
    },
    {
      "source": "CAPEC-439",
      "target": "CWE-1269"
    },
    {
      "source": "CAPEC-44",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-44",
      "target": "CAPEC-23"
    },
    {
      "source": "CAPEC-44",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-44",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-44",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-441",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-442",
      "target": "CAPEC-441"
    },
    {
      "source": "CAPEC-442",
      "target": "CWE-506"
    },
    {
      "source": "CAPEC-443",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-445",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-446",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-447",
      "target": "CAPEC-438"
    },
    {
      "source": "CAPEC-448",
      "target": "CAPEC-442"
    },
    {
      "source": "CAPEC-448",
      "target": "CWE-506"
    },
    {
      "source": "CAPEC-45",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-302"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-45",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-452",
      "target": "CAPEC-441"
    },
    {
      "source": "CAPEC-456",
      "target": "CAPEC-441"
    },
    {
      "source": "CAPEC-456",
      "target": "CWE-1257"
    },
    {
      "source": "CAPEC-456",
      "target": "CWE-1260"
    },
    {
      "source": "CAPEC-456",
      "target": "CWE-1274"
    },
    {
      "source": "CAPEC-456",
      "target": "CWE-1312"
    },
    {
      "source": "CAPEC-456",
      "target": "CWE-1316"
    },
    {
      "source": "CAPEC-457",
      "target": "CAPEC-456"
    },
    {
      "source": "CAPEC-457",
      "target": "CWE-1299"
    },
    {
      "source": "CAPEC-458",
      "target": "CAPEC-456"
    },
    {
      "source": "CAPEC-458",
      "target": "CWE-1282"
    },
    {
      "source": "CAPEC-459",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-459",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-459",
      "target": "CWE-295"
    },
    {
      "source": "CAPEC-459",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-473",
      "target": "CAPEC-151"
    },
    {
      "source": "CAPEC-473",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-473",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-473",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-46",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-733"
    },
    {
      "source": "CAPEC-46",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-460",
      "target": "CAPEC-15"
    },
    {
      "source": "CAPEC-460",
      "target": "CWE-88"
    },
    {
      "source": "CAPEC-460",
      "target": "CWE-147"
    },
    {
      "source": "CAPEC-460",
      "target": "CWE-235"
    },
    {
      "source": "CAPEC-461",
      "target": "CAPEC-115"
    },
    {
      "source": "CAPEC-461",
      "target": "CWE-328"
    },
    {
      "source": "CAPEC-461",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-462",
      "target": "CAPEC-54"
    },
    {
      "source": "CAPEC-462",
      "target": "CWE-385"
    },
    {
      "source": "CAPEC-462",
      "target": "CWE-352"
    },
    {
      "source": "CAPEC-462",
      "target": "CWE-208"
    },
    {
      "source": "CAPEC-463",
      "target": "CAPEC-97"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-209"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-514"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-649"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-347"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-354"
    },
    {
      "source": "CAPEC-463",
      "target": "CWE-696"
    },
    {
      "source": "CAPEC-97",
      "target": "CAPEC-192"
    },
    {
      "source": "CAPEC-97",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-97",
      "target": "CWE-1204"
    },
    {
      "source": "CAPEC-97",
      "target": "CWE-1240"
    },
    {
      "source": "CAPEC-97",
      "target": "CWE-1241"
    },
    {
      "source": "CAPEC-97",
      "target": "CWE-1279"
    },
    {
      "source": "CAPEC-464",
      "target": "CAPEC-554"
    },
    {
      "source": "CAPEC-464",
      "target": "CWE-359"
    },
    {
      "source": "CAPEC-465",
      "target": "CAPEC-554"
    },
    {
      "source": "CAPEC-465",
      "target": "CWE-441"
    },
    {
      "source": "CAPEC-466",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-466",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-467",
      "target": "CAPEC-62"
    },
    {
      "source": "CAPEC-467",
      "target": "CWE-352"
    },
    {
      "source": "CAPEC-467",
      "target": "CWE-359"
    },
    {
      "source": "CAPEC-62",
      "target": "CAPEC-21"
    },
    {
      "source": "CAPEC-62",
      "target": "CWE-352"
    },
    {
      "source": "CAPEC-62",
      "target": "CWE-306"
    },
    {
      "source": "CAPEC-62",
      "target": "CWE-664"
    },
    {
      "source": "CAPEC-62",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-62",
      "target": "CWE-1275"
    },
    {
      "source": "CAPEC-468",
      "target": "CAPEC-242"
    },
    {
      "source": "CAPEC-468",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-468",
      "target": "CWE-149"
    },
    {
      "source": "CAPEC-468",
      "target": "CWE-177"
    },
    {
      "source": "CAPEC-468",
      "target": "CWE-838"
    },
    {
      "source": "CAPEC-469",
      "target": "CAPEC-227"
    },
    {
      "source": "CAPEC-469",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-469",
      "target": "CWE-772"
    },
    {
      "source": "CAPEC-47",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-130"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-131"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-47",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-470",
      "target": "CAPEC-66"
    },
    {
      "source": "CAPEC-470",
      "target": "CWE-250"
    },
    {
      "source": "CAPEC-470",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-471",
      "target": "CAPEC-159"
    },
    {
      "source": "CAPEC-471",
      "target": "CWE-427"
    },
    {
      "source": "CAPEC-472",
      "target": "CAPEC-541"
    },
    {
      "source": "CAPEC-472",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-474",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-474",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-475",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-475",
      "target": "CWE-347"
    },
    {
      "source": "CAPEC-475",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-475",
      "target": "CWE-295"
    },
    {
      "source": "CAPEC-476",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-476",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-477",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-477",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-477",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-477",
      "target": "CWE-319"
    },
    {
      "source": "CAPEC-478",
      "target": "CAPEC-203"
    },
    {
      "source": "CAPEC-478",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-479",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-479",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-48",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-48",
      "target": "CWE-241"
    },
    {
      "source": "CAPEC-48",
      "target": "CWE-706"
    },
    {
      "source": "CAPEC-481",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-481",
      "target": "CWE-923"
    },
    {
      "source": "CAPEC-482",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-482",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-485",
      "target": "CAPEC-473"
    },
    {
      "source": "CAPEC-485",
      "target": "CWE-330"
    },
    {
      "source": "CAPEC-486",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-486",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-487",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-487",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-488",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-488",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-489",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-489",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-490",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-490",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-491",
      "target": "CAPEC-230"
    },
    {
      "source": "CAPEC-491",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-492",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-492",
      "target": "CWE-400"
    },
    {
      "source": "CAPEC-492",
      "target": "CWE-1333"
    },
    {
      "source": "CAPEC-493",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-493",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-494",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-494",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-494",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-495",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-495",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-495",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-496",
      "target": "CAPEC-130"
    },
    {
      "source": "CAPEC-496",
      "target": "CWE-770"
    },
    {
      "source": "CAPEC-496",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-498",
      "target": "CAPEC-545"
    },
    {
      "source": "CAPEC-498",
      "target": "CWE-359"
    },
    {
      "source": "CAPEC-545",
      "target": "CAPEC-116"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1239"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1243"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1258"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1266"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1272"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1278"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1323"
    },
    {
      "source": "CAPEC-545",
      "target": "CWE-1330"
    },
    {
      "source": "CAPEC-499",
      "target": "CAPEC-117"
    },
    {
      "source": "CAPEC-499",
      "target": "CWE-925"
    },
    {
      "source": "CAPEC-5",
      "target": "CAPEC-220"
    },
    {
      "source": "CAPEC-5",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-50",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-50",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-50",
      "target": "CWE-640"
    },
    {
      "source": "CAPEC-500",
      "target": "CAPEC-253"
    },
    {
      "source": "CAPEC-500",
      "target": "CWE-749"
    },
    {
      "source": "CAPEC-500",
      "target": "CWE-940"
    },
    {
      "source": "CAPEC-501",
      "target": "CAPEC-499"
    },
    {
      "source": "CAPEC-501",
      "target": "CAPEC-173"
    },
    {
      "source": "CAPEC-501",
      "target": "CWE-923"
    },
    {
      "source": "CAPEC-502",
      "target": "CAPEC-148"
    },
    {
      "source": "CAPEC-502",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-503",
      "target": "CAPEC-122"
    },
    {
      "source": "CAPEC-503",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-504",
      "target": "CAPEC-173"
    },
    {
      "source": "CAPEC-504",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-505",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-616",
      "target": "CAPEC-154"
    },
    {
      "source": "CAPEC-616",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-506",
      "target": "CAPEC-173"
    },
    {
      "source": "CAPEC-506",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-508",
      "target": "CAPEC-651"
    },
    {
      "source": "CAPEC-508",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-508",
      "target": "CWE-359"
    },
    {
      "source": "CAPEC-651",
      "target": "CAPEC-117"
    },
    {
      "source": "CAPEC-651",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-509",
      "target": "CAPEC-652"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-509",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-652",
      "target": "CAPEC-560"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-652",
      "target": "CWE-836"
    },
    {
      "source": "CAPEC-51",
      "target": "CAPEC-203"
    },
    {
      "source": "CAPEC-51",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-51",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-51",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-510",
      "target": "CAPEC-21"
    },
    {
      "source": "CAPEC-510",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-511",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-516",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-517",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-518",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-519",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-52",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-158"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-52",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-520",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-521",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-522",
      "target": "CAPEC-439"
    },
    {
      "source": "CAPEC-523",
      "target": "CAPEC-439"
    },
    {
      "source": "CAPEC-524",
      "target": "CAPEC-439"
    },
    {
      "source": "CAPEC-529",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-53",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-158"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-53",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-530",
      "target": "CAPEC-531"
    },
    {
      "source": "CAPEC-531",
      "target": "CAPEC-534"
    },
    {
      "source": "CAPEC-534",
      "target": "CAPEC-440"
    },
    {
      "source": "CAPEC-532",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-533",
      "target": "CAPEC-186"
    },
    {
      "source": "CAPEC-533",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-535",
      "target": "CAPEC-531"
    },
    {
      "source": "CAPEC-536",
      "target": "CAPEC-176"
    },
    {
      "source": "CAPEC-536",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-537",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-538",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-538",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-538",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-539",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-540",
      "target": "CAPEC-123"
    },
    {
      "source": "CAPEC-540",
      "target": "CWE-125"
    },
    {
      "source": "CAPEC-542",
      "target": "CAPEC-549"
    },
    {
      "source": "CAPEC-549",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-543",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-544",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-546",
      "target": "CAPEC-545"
    },
    {
      "source": "CAPEC-546",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-546",
      "target": "CWE-1266"
    },
    {
      "source": "CAPEC-546",
      "target": "CWE-1272"
    },
    {
      "source": "CAPEC-547",
      "target": "CAPEC-607"
    },
    {
      "source": "CAPEC-55",
      "target": "CAPEC-49"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-261"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-916"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-55",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-550",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-550",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-551",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-551",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-551",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-552",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-552",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-555",
      "target": "CAPEC-560"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-555",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-560",
      "target": "CWE-1273"
    },
    {
      "source": "CAPEC-556",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-556",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-558",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-558",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-559",
      "target": "CAPEC-601"
    },
    {
      "source": "CAPEC-601",
      "target": "CAPEC-607"
    },
    {
      "source": "CAPEC-561",
      "target": "CAPEC-653"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-561",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-653",
      "target": "CAPEC-560"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-653",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-562",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-562",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-563",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-563",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-564",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-564",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-565",
      "target": "CAPEC-49"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-565",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-568",
      "target": "CAPEC-569"
    },
    {
      "source": "CAPEC-569",
      "target": "CAPEC-116"
    },
    {
      "source": "CAPEC-57",
      "target": "CAPEC-157"
    },
    {
      "source": "CAPEC-57",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-57",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-57",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-571",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-572",
      "target": "CAPEC-165"
    },
    {
      "source": "CAPEC-573",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-573",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-574",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-574",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-575",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-575",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-576",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-576",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-577",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-577",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-578",
      "target": "CAPEC-176"
    },
    {
      "source": "CAPEC-578",
      "target": "CWE-284"
    },
    {
      "source": "CAPEC-579",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-579",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-58",
      "target": "CAPEC-1"
    },
    {
      "source": "CAPEC-58",
      "target": "CAPEC-180"
    },
    {
      "source": "CAPEC-58",
      "target": "CWE-267"
    },
    {
      "source": "CAPEC-58",
      "target": "CWE-269"
    },
    {
      "source": "CAPEC-580",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-580",
      "target": "CWE-204"
    },
    {
      "source": "CAPEC-580",
      "target": "CWE-205"
    },
    {
      "source": "CAPEC-580",
      "target": "CWE-208"
    },
    {
      "source": "CAPEC-581",
      "target": "CAPEC-580"
    },
    {
      "source": "CAPEC-582",
      "target": "CAPEC-607"
    },
    {
      "source": "CAPEC-583",
      "target": "CAPEC-582"
    },
    {
      "source": "CAPEC-584",
      "target": "CAPEC-582"
    },
    {
      "source": "CAPEC-585",
      "target": "CAPEC-582"
    },
    {
      "source": "CAPEC-586",
      "target": "CWE-502"
    },
    {
      "source": "CAPEC-587",
      "target": "CAPEC-103"
    },
    {
      "source": "CAPEC-587",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-63",
      "target": "CAPEC-242"
    },
    {
      "source": "CAPEC-63",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-63",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-589",
      "target": "CAPEC-603"
    },
    {
      "source": "CAPEC-589",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-603",
      "target": "CAPEC-607"
    },
    {
      "source": "CAPEC-59",
      "target": "CAPEC-196"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-330"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-331"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-488"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-539"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-6"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-59",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-590",
      "target": "CAPEC-603"
    },
    {
      "source": "CAPEC-590",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-594",
      "target": "CWE-940"
    },
    {
      "source": "CAPEC-595",
      "target": "CAPEC-594"
    },
    {
      "source": "CAPEC-595",
      "target": "CWE-940"
    },
    {
      "source": "CAPEC-596",
      "target": "CAPEC-595"
    },
    {
      "source": "CAPEC-596",
      "target": "CWE-940"
    },
    {
      "source": "CAPEC-597",
      "target": "CAPEC-126"
    },
    {
      "source": "CAPEC-597",
      "target": "CWE-36"
    },
    {
      "source": "CAPEC-598",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-599",
      "target": "CAPEC-195"
    },
    {
      "source": "CAPEC-6",
      "target": "CAPEC-137"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-146"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-78"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-185"
    },
    {
      "source": "CAPEC-6",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-60",
      "target": "CAPEC-593"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-488"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-539"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-664"
    },
    {
      "source": "CAPEC-60",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-600",
      "target": "CAPEC-560"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-307"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-600",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-604",
      "target": "CAPEC-601"
    },
    {
      "source": "CAPEC-605",
      "target": "CAPEC-601"
    },
    {
      "source": "CAPEC-606",
      "target": "CAPEC-620"
    },
    {
      "source": "CAPEC-606",
      "target": "CWE-757"
    },
    {
      "source": "CAPEC-620",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-620",
      "target": "CWE-757"
    },
    {
      "source": "CAPEC-608",
      "target": "CAPEC-97"
    },
    {
      "source": "CAPEC-608",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-609",
      "target": "CAPEC-157"
    },
    {
      "source": "CAPEC-609",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-61",
      "target": "CAPEC-593"
    },
    {
      "source": "CAPEC-61",
      "target": "CWE-384"
    },
    {
      "source": "CAPEC-61",
      "target": "CWE-664"
    },
    {
      "source": "CAPEC-61",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-610",
      "target": "CAPEC-240"
    },
    {
      "source": "CAPEC-611",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-612",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-612",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-612",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-613",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-613",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-613",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-614",
      "target": "CAPEC-186"
    },
    {
      "source": "CAPEC-614",
      "target": "CWE-327"
    },
    {
      "source": "CAPEC-615",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-615",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-617",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-618",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-618",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-619",
      "target": "CAPEC-292"
    },
    {
      "source": "CAPEC-619",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-621",
      "target": "CAPEC-189"
    },
    {
      "source": "CAPEC-621",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-622",
      "target": "CAPEC-189"
    },
    {
      "source": "CAPEC-622",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-623",
      "target": "CAPEC-189"
    },
    {
      "source": "CAPEC-623",
      "target": "CWE-201"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1247"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1248"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1256"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1319"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1332"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1334"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1338"
    },
    {
      "source": "CAPEC-624",
      "target": "CWE-1351"
    },
    {
      "source": "CAPEC-625",
      "target": "CAPEC-624"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1247"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1248"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1256"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1319"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1332"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1334"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1338"
    },
    {
      "source": "CAPEC-625",
      "target": "CWE-1351"
    },
    {
      "source": "CAPEC-626",
      "target": "CAPEC-395"
    },
    {
      "source": "CAPEC-627",
      "target": "CAPEC-148"
    },
    {
      "source": "CAPEC-628",
      "target": "CAPEC-627"
    },
    {
      "source": "CAPEC-630",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-631",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-632",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-632",
      "target": "CWE-1007"
    },
    {
      "source": "CAPEC-633",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-633",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-633",
      "target": "CWE-1270"
    },
    {
      "source": "CAPEC-634",
      "target": "CAPEC-651"
    },
    {
      "source": "CAPEC-634",
      "target": "CAPEC-545"
    },
    {
      "source": "CAPEC-634",
      "target": "CWE-267"
    },
    {
      "source": "CAPEC-637",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-637",
      "target": "CWE-267"
    },
    {
      "source": "CAPEC-638",
      "target": "CAPEC-452"
    },
    {
      "source": "CAPEC-639",
      "target": "CAPEC-545"
    },
    {
      "source": "CAPEC-639",
      "target": "CWE-552"
    },
    {
      "source": "CAPEC-64",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-177"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-22"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-64",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-640",
      "target": "CAPEC-251"
    },
    {
      "source": "CAPEC-640",
      "target": "CWE-114"
    },
    {
      "source": "CAPEC-640",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-641",
      "target": "CAPEC-159"
    },
    {
      "source": "CAPEC-641",
      "target": "CWE-706"
    },
    {
      "source": "CAPEC-642",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-642",
      "target": "CWE-732"
    },
    {
      "source": "CAPEC-643",
      "target": "CAPEC-309"
    },
    {
      "source": "CAPEC-643",
      "target": "CWE-267"
    },
    {
      "source": "CAPEC-643",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-644",
      "target": "CAPEC-653"
    },
    {
      "source": "CAPEC-644",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-644",
      "target": "CWE-836"
    },
    {
      "source": "CAPEC-644",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-644",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-645",
      "target": "CAPEC-652"
    },
    {
      "source": "CAPEC-645",
      "target": "CWE-522"
    },
    {
      "source": "CAPEC-645",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-645",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-646",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-646",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-647",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-647",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-648",
      "target": "CAPEC-150"
    },
    {
      "source": "CAPEC-648",
      "target": "CWE-267"
    },
    {
      "source": "CAPEC-649",
      "target": "CAPEC-635"
    },
    {
      "source": "CAPEC-649",
      "target": "CWE-46"
    },
    {
      "source": "CAPEC-65",
      "target": "CAPEC-157"
    },
    {
      "source": "CAPEC-65",
      "target": "CWE-319"
    },
    {
      "source": "CAPEC-65",
      "target": "CWE-311"
    },
    {
      "source": "CAPEC-65",
      "target": "CWE-318"
    },
    {
      "source": "CAPEC-65",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-650",
      "target": "CAPEC-17"
    },
    {
      "source": "CAPEC-650",
      "target": "CWE-287"
    },
    {
      "source": "CAPEC-650",
      "target": "CWE-553"
    },
    {
      "source": "CAPEC-654",
      "target": "CAPEC-504"
    },
    {
      "source": "CAPEC-654",
      "target": "CWE-1021"
    },
    {
      "source": "CAPEC-655",
      "target": "CAPEC-572"
    },
    {
      "source": "CAPEC-656",
      "target": "CAPEC-98"
    },
    {
      "source": "CAPEC-657",
      "target": "CAPEC-186"
    },
    {
      "source": "CAPEC-657",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-660",
      "target": "CAPEC-251"
    },
    {
      "source": "CAPEC-660",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-661",
      "target": "CAPEC-121"
    },
    {
      "source": "CAPEC-661",
      "target": "CWE-489"
    },
    {
      "source": "CAPEC-662",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-662",
      "target": "CWE-300"
    },
    {
      "source": "CAPEC-662",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-663",
      "target": "CAPEC-74"
    },
    {
      "source": "CAPEC-663",
      "target": "CAPEC-184"
    },
    {
      "source": "CAPEC-663",
      "target": "CWE-1037"
    },
    {
      "source": "CAPEC-663",
      "target": "CWE-1303"
    },
    {
      "source": "CAPEC-663",
      "target": "CWE-1264"
    },
    {
      "source": "CAPEC-664",
      "target": "CAPEC-115"
    },
    {
      "source": "CAPEC-664",
      "target": "CWE-918"
    },
    {
      "source": "CAPEC-664",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-665",
      "target": "CAPEC-276"
    },
    {
      "source": "CAPEC-665",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-665",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-665",
      "target": "CWE-288"
    },
    {
      "source": "CAPEC-665",
      "target": "CWE-1188"
    },
    {
      "source": "CAPEC-665",
      "target": "CWE-862"
    },
    {
      "source": "CAPEC-666",
      "target": "CAPEC-125"
    },
    {
      "source": "CAPEC-666",
      "target": "CWE-404"
    },
    {
      "source": "CAPEC-667",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-667",
      "target": "CWE-290"
    },
    {
      "source": "CAPEC-668",
      "target": "CAPEC-115"
    },
    {
      "source": "CAPEC-668",
      "target": "CWE-425"
    },
    {
      "source": "CAPEC-668",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-668",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-669",
      "target": "CAPEC-184"
    },
    {
      "source": "CAPEC-67",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-67",
      "target": "CAPEC-135"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-134"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-67",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-670",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-671",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-672",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-673",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-674",
      "target": "CAPEC-447"
    },
    {
      "source": "CAPEC-675",
      "target": "CAPEC-116"
    },
    {
      "source": "CAPEC-675",
      "target": "CWE-1266"
    },
    {
      "source": "CAPEC-676",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-676",
      "target": "CWE-943"
    },
    {
      "source": "CAPEC-676",
      "target": "CWE-1286"
    },
    {
      "source": "CAPEC-677",
      "target": "CAPEC-534"
    },
    {
      "source": "CAPEC-678",
      "target": "CAPEC-444"
    },
    {
      "source": "CAPEC-679",
      "target": "CAPEC-1"
    },
    {
      "source": "CAPEC-679",
      "target": "CAPEC-180"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1222"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1252"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1257"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1260"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1274"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1282"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1312"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1316"
    },
    {
      "source": "CAPEC-679",
      "target": "CWE-1326"
    },
    {
      "source": "CAPEC-68",
      "target": "CAPEC-233"
    },
    {
      "source": "CAPEC-68",
      "target": "CWE-325"
    },
    {
      "source": "CAPEC-68",
      "target": "CWE-328"
    },
    {
      "source": "CAPEC-68",
      "target": "CWE-1326"
    },
    {
      "source": "CAPEC-680",
      "target": "CAPEC-1"
    },
    {
      "source": "CAPEC-680",
      "target": "CAPEC-180"
    },
    {
      "source": "CAPEC-680",
      "target": "CWE-1224"
    },
    {
      "source": "CAPEC-680",
      "target": "CWE-1231"
    },
    {
      "source": "CAPEC-680",
      "target": "CWE-1233"
    },
    {
      "source": "CAPEC-680",
      "target": "CWE-1262"
    },
    {
      "source": "CAPEC-680",
      "target": "CWE-1283"
    },
    {
      "source": "CAPEC-681",
      "target": "CAPEC-1"
    },
    {
      "source": "CAPEC-681",
      "target": "CAPEC-180"
    },
    {
      "source": "CAPEC-681",
      "target": "CWE-1259"
    },
    {
      "source": "CAPEC-681",
      "target": "CWE-1267"
    },
    {
      "source": "CAPEC-681",
      "target": "CWE-1270"
    },
    {
      "source": "CAPEC-681",
      "target": "CWE-1294"
    },
    {
      "source": "CAPEC-681",
      "target": "CWE-1302"
    },
    {
      "source": "CAPEC-682",
      "target": "CAPEC-212"
    },
    {
      "source": "CAPEC-682",
      "target": "CWE-1277"
    },
    {
      "source": "CAPEC-682",
      "target": "CWE-1310"
    },
    {
      "source": "CAPEC-69",
      "target": "CAPEC-233"
    },
    {
      "source": "CAPEC-69",
      "target": "CWE-250"
    },
    {
      "source": "CAPEC-69",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-691",
      "target": "CAPEC-690"
    },
    {
      "source": "CAPEC-691",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-692",
      "target": "CAPEC-691"
    },
    {
      "source": "CAPEC-692",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-693",
      "target": "CAPEC-691"
    },
    {
      "source": "CAPEC-693",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-694",
      "target": "CAPEC-169"
    },
    {
      "source": "CAPEC-694",
      "target": "CWE-497"
    },
    {
      "source": "CAPEC-695",
      "target": "CAPEC-616"
    },
    {
      "source": "CAPEC-695",
      "target": "CWE-494"
    },
    {
      "source": "CAPEC-695",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-696",
      "target": "CAPEC-663"
    },
    {
      "source": "CAPEC-696",
      "target": "CWE-1342"
    },
    {
      "source": "CAPEC-697",
      "target": "CAPEC-194"
    },
    {
      "source": "CAPEC-697",
      "target": "CWE-923"
    },
    {
      "source": "CAPEC-698",
      "target": "CAPEC-542"
    },
    {
      "source": "CAPEC-698",
      "target": "CWE-507"
    },
    {
      "source": "CAPEC-698",
      "target": "CWE-829"
    },
    {
      "source": "CAPEC-699",
      "target": "CAPEC-651"
    },
    {
      "source": "CAPEC-699",
      "target": "CWE-1300"
    },
    {
      "source": "CAPEC-7",
      "target": "CAPEC-66"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-89"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-209"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-7",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-70",
      "target": "CAPEC-49"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-521"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-262"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-263"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-798"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-654"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-308"
    },
    {
      "source": "CAPEC-70",
      "target": "CWE-309"
    },
    {
      "source": "CAPEC-700",
      "target": "CAPEC-161"
    },
    {
      "source": "CAPEC-701",
      "target": "CAPEC-94"
    },
    {
      "source": "CAPEC-701",
      "target": "CWE-294"
    },
    {
      "source": "CAPEC-701",
      "target": "CWE-345"
    },
    {
      "source": "CAPEC-702",
      "target": "CAPEC-180"
    },
    {
      "source": "CAPEC-702",
      "target": "CWE-1296"
    },
    {
      "source": "CAPEC-71",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-176"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-179"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-183"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-71",
      "target": "CWE-692"
    },
    {
      "source": "CAPEC-72",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-177"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-72",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-73",
      "target": "CAPEC-165"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-96"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-348"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-116"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-350"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-86"
    },
    {
      "source": "CAPEC-73",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-75",
      "target": "CAPEC-176"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-349"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-99"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-353"
    },
    {
      "source": "CAPEC-75",
      "target": "CWE-354"
    },
    {
      "source": "CAPEC-76",
      "target": "CAPEC-126"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-23"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-22"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-77"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-348"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-272"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-59"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-76",
      "target": "CWE-15"
    },
    {
      "source": "CAPEC-78",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-22"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-78",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-79",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-22"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-185"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-200"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-79",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-8",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-733"
    },
    {
      "source": "CAPEC-8",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-80",
      "target": "CAPEC-267"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-173"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-172"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-180"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-181"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-73"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-80",
      "target": "CWE-692"
    },
    {
      "source": "CAPEC-81",
      "target": "CAPEC-268"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-117"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-93"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-75"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-221"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-96"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-150"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-276"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-279"
    },
    {
      "source": "CAPEC-81",
      "target": "CWE-116"
    },
    {
      "source": "CAPEC-83",
      "target": "CAPEC-250"
    },
    {
      "source": "CAPEC-83",
      "target": "CWE-91"
    },
    {
      "source": "CAPEC-83",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-83",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-83",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-84",
      "target": "CAPEC-250"
    },
    {
      "source": "CAPEC-84",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-84",
      "target": "CWE-707"
    },
    {
      "source": "CAPEC-85",
      "target": "CAPEC-580"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-79"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-113"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-348"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-96"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-116"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-184"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-86"
    },
    {
      "source": "CAPEC-85",
      "target": "CWE-692"
    },
    {
      "source": "CAPEC-86",
      "target": "CAPEC-591"
    },
    {
      "source": "CAPEC-86",
      "target": "CAPEC-588"
    },
    {
      "source": "CAPEC-86",
      "target": "CAPEC-592"
    },
    {
      "source": "CAPEC-86",
      "target": "CWE-80"
    },
    {
      "source": "CAPEC-87",
      "target": "CAPEC-115"
    },
    {
      "source": "CAPEC-87",
      "target": "CWE-425"
    },
    {
      "source": "CAPEC-87",
      "target": "CWE-285"
    },
    {
      "source": "CAPEC-87",
      "target": "CWE-693"
    },
    {
      "source": "CAPEC-88",
      "target": "CAPEC-248"
    },
    {
      "source": "CAPEC-88",
      "target": "CWE-78"
    },
    {
      "source": "CAPEC-88",
      "target": "CWE-88"
    },
    {
      "source": "CAPEC-88",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-88",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-89",
      "target": "CAPEC-151"
    },
    {
      "source": "CAPEC-89",
      "target": "CWE-346"
    },
    {
      "source": "CAPEC-89",
      "target": "CWE-350"
    },
    {
      "source": "CAPEC-9",
      "target": "CAPEC-100"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-118"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-119"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-74"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-20"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-733"
    },
    {
      "source": "CAPEC-9",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-90",
      "target": "CAPEC-272"
    },
    {
      "source": "CAPEC-90",
      "target": "CAPEC-114"
    },
    {
      "source": "CAPEC-90",
      "target": "CWE-301"
    },
    {
      "source": "CAPEC-90",
      "target": "CWE-303"
    },
    {
      "source": "CAPEC-92",
      "target": "CAPEC-128"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-190"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-128"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-120"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-122"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-196"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-680"
    },
    {
      "source": "CAPEC-92",
      "target": "CWE-697"
    },
    {
      "source": "CAPEC-93",
      "target": "CAPEC-268"
    },
    {
      "source": "CAPEC-93",
      "target": "CWE-117"
    },
    {
      "source": "CAPEC-93",
      "target": "CWE-75"
    },
    {
      "source": "CAPEC-93",
      "target": "CWE-150"
    },
    {
      "source": "CAPEC-95",
      "target": "CAPEC-54"
    },
    {
      "source": "CAPEC-95",
      "target": "CWE-538"
    },
    {
      "source": "CAPEC-96",
      "target": "CAPEC-603"
    },
    {
      "source": "CAPEC-96",
      "target": "CWE-589"
    }
  ]
}